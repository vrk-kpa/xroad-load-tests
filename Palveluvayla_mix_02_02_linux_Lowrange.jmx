<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="3.2" jmeter="3.2 r1790748">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Test Plan" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="host" elementType="Argument">
            <stringProp name="Argument.name">host</stringProp>
            <stringProp name="Argument.value"></stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">Host of Webservice</stringProp>
          </elementProp>
          <elementProp name="loopcount" elementType="Argument">
            <stringProp name="Argument.name">loopcount</stringProp>
            <stringProp name="Argument.value">1</stringProp>
            <stringProp name="Argument.desc">Toistojen määrä</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="portno" elementType="Argument">
            <stringProp name="Argument.name">portno</stringProp>
            <stringProp name="Argument.value">1</stringProp>
            <stringProp name="Argument.desc">Palvelimenportti</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="rampup" elementType="Argument">
            <stringProp name="Argument.name">rampup</stringProp>
            <stringProp name="Argument.value">10</stringProp>
            <stringProp name="Argument.desc">Rump up users</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="threads" elementType="Argument">
            <stringProp name="Argument.name">threads</stringProp>
            <stringProp name="Argument.value">1</stringProp>
            <stringProp name="Argument.desc">How many treats</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="MemberName" elementType="Argument">
            <stringProp name="Argument.name">MemberName</stringProp>
            <stringProp name="Argument.value"></stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">Customer</stringProp>
          </elementProp>
          <elementProp name="MemberClass" elementType="Argument">
            <stringProp name="Argument.name">MemberClass</stringProp>
            <stringProp name="Argument.value"></stringProp>
            <stringProp name="Argument.desc">CustomerClass</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="MemberCode" elementType="Argument">
            <stringProp name="Argument.name">MemberCode</stringProp>
            <stringProp name="Argument.value"></stringProp>
            <stringProp name="Argument.desc">CustomerCode</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="Subsystemcode_client" elementType="Argument">
            <stringProp name="Argument.name">Subsystemcode_client</stringProp>
            <stringProp name="Argument.value"></stringProp>
            <stringProp name="Argument.desc">Subsystemcode client</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="Subsystemcode_service" elementType="Argument">
            <stringProp name="Argument.name">Subsystemcode_service</stringProp>
            <stringProp name="Argument.value"></stringProp>
            <stringProp name="Argument.desc">Subsystemcode service</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="path" elementType="Argument">
            <stringProp name="Argument.name">path</stringProp>
            <stringProp name="Argument.value">/</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">Path...</stringProp>
          </elementProp>
          <elementProp name="Instance" elementType="Argument">
            <stringProp name="Argument.name">Instance</stringProp>
            <stringProp name="Argument.value"></stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">X Road Instance</stringProp>
          </elementProp>
          <elementProp name="timer" elementType="Argument">
            <stringProp name="Argument.name">timer</stringProp>
            <stringProp name="Argument.value">1500</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="timeout" elementType="Argument">
            <stringProp name="Argument.name">timeout</stringProp>
            <stringProp name="Argument.value">300000</stringProp>
            <stringProp name="Argument.desc">Timeout value</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="loadsoftoken" elementType="Argument">
            <stringProp name="Argument.name">loadsoftoken</stringProp>
            <stringProp name="Argument.value"></stringProp>
            <stringProp name="Argument.desc">Loadsofia token</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP Request Defaults" enabled="true">
        <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
          <collectionProp name="Arguments.arguments"/>
        </elementProp>
        <stringProp name="HTTPSampler.domain">${host}</stringProp>
        <stringProp name="HTTPSampler.port">${portno}</stringProp>
        <stringProp name="HTTPSampler.protocol"></stringProp>
        <stringProp name="HTTPSampler.contentEncoding"></stringProp>
        <stringProp name="HTTPSampler.path">${path}</stringProp>
        <stringProp name="HTTPSampler.concurrentPool">4</stringProp>
        <stringProp name="HTTPSampler.connect_timeout">${timeout}</stringProp>
        <stringProp name="HTTPSampler.response_timeout">${timeout}</stringProp>
      </ConfigTestElement>
      <hashTree/>
      <kg.apc.jmeter.threads.UltimateThreadGroup guiclass="kg.apc.jmeter.threads.UltimateThreadGroupGui" testclass="kg.apc.jmeter.threads.UltimateThreadGroup" testname="TG 50 Sanomakoko 8K" enabled="false">
        <collectionProp name="ultimatethreadgroupdata">
          <collectionProp name="829442860">
            <stringProp name="1567">10</stringProp>
            <stringProp name="0">0</stringProp>
            <stringProp name="30">30</stringProp>
            <stringProp name="60">60</stringProp>
            <stringProp name="10">10</stringProp>
          </collectionProp>
        </collectionProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <intProp name="LoopController.loops">-1</intProp>
        </elementProp>
        <stringProp name="ThreadGroup.on_sample_error">stoptest</stringProp>
      </kg.apc.jmeter.threads.UltimateThreadGroup>
      <hashTree>
        <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP Request Defaults" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="Kysely" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">Kysely</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">${portno}</stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">${path}</stringProp>
          <stringProp name="HTTPSampler.concurrentPool">4</stringProp>
          <stringProp name="HTTPSampler.connect_timeout">${timeout}</stringProp>
          <stringProp name="HTTPSampler.response_timeout">${timeout}</stringProp>
        </ConfigTestElement>
        <hashTree/>
        <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="HTTP Cookie Manager" enabled="false">
          <collectionProp name="CookieManager.cookies"/>
          <boolProp name="CookieManager.clearEachIteration">false</boolProp>
          <stringProp name="CookieManager.implementation">org.apache.jmeter.protocol.http.control.HC4CookieHandler</stringProp>
        </CookieManager>
        <hashTree/>
        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="false">
          <collectionProp name="HeaderManager.headers">
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Content-Type</stringProp>
              <stringProp name="Header.value">text/xml; charset=utf-8</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">SOAPAction</stringProp>
              <stringProp name="Header.value"></stringProp>
            </elementProp>
          </collectionProp>
        </HeaderManager>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="TG50 10K" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; &#xd;
xmlns:xro=&quot;http://x-road.eu/xsd/xroad.xsd&quot; xmlns:iden=&quot;http://x-road.eu/xsd/identifiers&quot;&#xd;
xmlns:prod=&quot;http://test.x-road.fi/producer&quot;&gt;&#xd;
   &lt;soapenv:Header&gt;&#xd;
      &lt;xro:protocolVersion&gt;4.x&lt;/xro:protocolVersion&gt;&#xd;
      &lt;xro:id&gt;TEST7a&lt;/xro:id&gt;&#xd;
      &lt;xro:userId&gt;EE1234567890&lt;/xro:userId&gt;&#xd;
      &lt;xro:client iden:objectType=&quot;SUBSYSTEM&quot;&gt;&#xd;
         &lt;iden:xRoadInstance&gt;${Instance}&lt;/iden:xRoadInstance&gt;&#xd;
         &lt;iden:memberClass&gt;GOV&lt;/iden:memberClass&gt;&#xd;
         &lt;iden:memberCode&gt;${MemberCode}&lt;/iden:memberCode&gt;&#xd;
         &lt;iden:subsystemCode&gt;perftestclient&lt;/iden:subsystemCode&gt;&#xd;
      &lt;/xro:client&gt;&#xd;
      &lt;xro:service iden:objectType=&quot;SERVICE&quot;&gt;&#xd;
         &lt;iden:xRoadInstance&gt;${Instance}&lt;/iden:xRoadInstance&gt;&#xd;
         &lt;iden:memberClass&gt;GOV&lt;/iden:memberClass&gt;&#xd;
         &lt;iden:memberCode&gt;${MemberCode}&lt;/iden:memberCode&gt;&#xd;
         &lt;iden:subsystemCode&gt;perftestservice&lt;/iden:subsystemCode&gt;&#xd;
         &lt;iden:serviceCode&gt;testService&lt;/iden:serviceCode&gt;&#xd;
         &lt;iden:serviceVersion&gt;v1&lt;/iden:serviceVersion&gt;&#xd;
      &lt;/xro:service&gt;&#xd;
   &lt;/soapenv:Header&gt;&#xd;
   &lt;soapenv:Body&gt;&#xd;
      &lt;prod:testService&gt;&#xd;
             &lt;request&gt;&#xd;
                &lt;responseBodySize&gt;5000&lt;/responseBodySize&gt;&#xd;
                &lt;responseAttachmentSize&gt;0&lt;/responseAttachmentSize&gt;&#xd;
            &lt;/request&gt;&#xd;
     &lt;/prod:testService&gt;&#xd;
   &lt;/soapenv:Body&gt;&#xd;
&lt;/soapenv:Envelope&gt;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">test-service-0.0.2-SNAPSHOT/Endpoint</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout">${timeout}</stringProp>
          <stringProp name="HTTPSampler.response_timeout">${timeout}</stringProp>
          <stringProp name="TestPlan.comments">Sanomankoko 10K</stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <ResultCollector guiclass="StatVisualizer" testclass="ResultCollector" testname="Aggregate Report" enabled="false">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>false</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <hostname>true</hostname>
              <threadCounts>true</threadCounts>
              <sampleCount>true</sampleCount>
            </value>
          </objProp>
          <stringProp name="filename">../logs/runs/TG50_8K_${__time(dd-MM-yyyy&apos;_T_&apos;HH:mm)}.jtl</stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
      <kg.apc.jmeter.threads.SteppingThreadGroup guiclass="kg.apc.jmeter.threads.SteppingThreadGroupGui" testclass="kg.apc.jmeter.threads.SteppingThreadGroup" testname="TG 51  Sanomakoko 10k - Stepping" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">stoptest</stringProp>
        <stringProp name="ThreadGroup.num_threads">400</stringProp>
        <stringProp name="Threads initial delay">0</stringProp>
        <stringProp name="Start users count">1</stringProp>
        <stringProp name="Start users count burst">1</stringProp>
        <stringProp name="Start users period">3</stringProp>
        <stringProp name="Stop users count">5</stringProp>
        <stringProp name="Stop users period">10</stringProp>
        <stringProp name="flighttime">0</stringProp>
        <stringProp name="rampUp"></stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <intProp name="LoopController.loops">-1</intProp>
        </elementProp>
      </kg.apc.jmeter.threads.SteppingThreadGroup>
      <hashTree>
        <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP Request Defaults" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="Kysely" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">Kysely</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">${path}</stringProp>
          <stringProp name="HTTPSampler.concurrentPool">4</stringProp>
          <stringProp name="HTTPSampler.connect_timeout">${timeout}</stringProp>
          <stringProp name="HTTPSampler.response_timeout">${timeout}</stringProp>
        </ConfigTestElement>
        <hashTree/>
        <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="HTTP Cookie Manager" enabled="false">
          <collectionProp name="CookieManager.cookies"/>
          <stringProp name="TestPlan.comments">Sanomankoko</stringProp>
          <boolProp name="CookieManager.clearEachIteration">false</boolProp>
          <stringProp name="CookieManager.implementation">org.apache.jmeter.protocol.http.control.HC4CookieHandler</stringProp>
        </CookieManager>
        <hashTree/>
        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="false">
          <collectionProp name="HeaderManager.headers">
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Content-Type</stringProp>
              <stringProp name="Header.value">text/xml; charset=utf-8</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">SOAPAction</stringProp>
              <stringProp name="Header.value"></stringProp>
            </elementProp>
          </collectionProp>
        </HeaderManager>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="TG51 10K" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; &#xd;
xmlns:xro=&quot;http://x-road.eu/xsd/xroad.xsd&quot; xmlns:iden=&quot;http://x-road.eu/xsd/identifiers&quot;&#xd;
xmlns:prod=&quot;http://test.x-road.fi/producer&quot;&gt;&#xd;
   &lt;soapenv:Header&gt;&#xd;
      &lt;xro:protocolVersion&gt;4.x&lt;/xro:protocolVersion&gt;&#xd;
      &lt;xro:id&gt;TEST7a&lt;/xro:id&gt;&#xd;
      &lt;xro:userId&gt;EE1234567890&lt;/xro:userId&gt;&#xd;
      &lt;xro:client iden:objectType=&quot;SUBSYSTEM&quot;&gt;&#xd;
         &lt;iden:xRoadInstance&gt;${Instance}&lt;/iden:xRoadInstance&gt;&#xd;
         &lt;iden:memberClass&gt;GOV&lt;/iden:memberClass&gt;&#xd;
         &lt;iden:memberCode&gt;${MemberCode}&lt;/iden:memberCode&gt;&#xd;
         &lt;iden:subsystemCode&gt;perftestclient&lt;/iden:subsystemCode&gt;&#xd;
      &lt;/xro:client&gt;&#xd;
      &lt;xro:service iden:objectType=&quot;SERVICE&quot;&gt;&#xd;
         &lt;iden:xRoadInstance&gt;${Instance}&lt;/iden:xRoadInstance&gt;&#xd;
         &lt;iden:memberClass&gt;GOV&lt;/iden:memberClass&gt;&#xd;
         &lt;iden:memberCode&gt;${MemberCode}&lt;/iden:memberCode&gt;&#xd;
         &lt;iden:subsystemCode&gt;perftestservice&lt;/iden:subsystemCode&gt;&#xd;
         &lt;iden:serviceCode&gt;testService&lt;/iden:serviceCode&gt;&#xd;
         &lt;iden:serviceVersion&gt;v1&lt;/iden:serviceVersion&gt;&#xd;
      &lt;/xro:service&gt;&#xd;
   &lt;/soapenv:Header&gt;&#xd;
   &lt;soapenv:Body&gt;&#xd;
      &lt;prod:testService&gt;&#xd;
             &lt;request&gt;&#xd;
                &lt;responseBodySize&gt;10000&lt;/responseBodySize&gt;&#xd;
                &lt;responseAttachmentSize&gt;0&lt;/responseAttachmentSize&gt;&#xd;
            &lt;/request&gt;&#xd;
     &lt;/prod:testService&gt;&#xd;
   &lt;/soapenv:Body&gt;&#xd;
&lt;/soapenv:Envelope&gt;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">test-service-0.0.2-SNAPSHOT/Endpoint</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout">${timeout}</stringProp>
          <stringProp name="HTTPSampler.response_timeout">${timeout}</stringProp>
          <stringProp name="TestPlan.comments">Sanomankoko 10K</stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <ResultCollector guiclass="StatVisualizer" testclass="ResultCollector" testname="Aggregate Report" enabled="false">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>false</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <hostname>true</hostname>
              <threadCounts>true</threadCounts>
              <sampleCount>true</sampleCount>
            </value>
          </objProp>
          <stringProp name="filename">../logs/runs/TG51_10K_${__time(dd-MM-yyyy&apos;_T_&apos;HH:mm)}.jtl</stringProp>
        </ResultCollector>
        <hashTree/>
        <kg.apc.jmeter.reporters.LoadosophiaUploader guiclass="kg.apc.jmeter.reporters.LoadosophiaUploaderGui" testclass="kg.apc.jmeter.reporters.LoadosophiaUploader" testname="jp@gc - Loadosophia.org Uploader" enabled="false">
          <elementProp name="arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="classname">kg.apc.jmeter.reporters.LoadosophiaClient</stringProp>
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>false</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <hostname>true</hostname>
              <threadCounts>true</threadCounts>
              <sampleCount>true</sampleCount>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
          <stringProp name="project"></stringProp>
          <stringProp name="uploadToken">${loadsoftoken}</stringProp>
          <stringProp name="storeDir">../logs/Loadsof/</stringProp>
          <stringProp name="color">none</stringProp>
          <stringProp name="title">TG51 10K_400_Users_lowend_${__time(dd-MM-yyyy&apos;_T_&apos;HH:mm)}</stringProp>
          <boolProp name="useOnline">true</boolProp>
        </kg.apc.jmeter.reporters.LoadosophiaUploader>
        <hashTree/>
      </hashTree>
      <kg.apc.jmeter.threads.UltimateThreadGroup guiclass="kg.apc.jmeter.threads.UltimateThreadGroupGui" testclass="kg.apc.jmeter.threads.UltimateThreadGroup" testname="TG 52  Sanomakoko 10K" enabled="false">
        <collectionProp name="ultimatethreadgroupdata">
          <collectionProp name="-1785850827">
            <stringProp name="1567">10</stringProp>
            <stringProp name="48">0</stringProp>
            <stringProp name="1567">10</stringProp>
            <stringProp name="50733">360</stringProp>
            <stringProp name="10">10</stringProp>
          </collectionProp>
          <collectionProp name="1363607350">
            <stringProp name="1567">10</stringProp>
            <stringProp name="1567">10</stringProp>
            <stringProp name="1598">20</stringProp>
            <stringProp name="50733">360</stringProp>
            <stringProp name="10">10</stringProp>
          </collectionProp>
          <collectionProp name="1390127106">
            <stringProp name="1567">10</stringProp>
            <stringProp name="1567">10</stringProp>
            <stringProp name="1629">30</stringProp>
            <stringProp name="50733">360</stringProp>
            <stringProp name="10">10</stringProp>
          </collectionProp>
          <collectionProp name="1394245952">
            <stringProp name="1567">10</stringProp>
            <stringProp name="1567">10</stringProp>
            <stringProp name="1660">40</stringProp>
            <stringProp name="50733">360</stringProp>
            <stringProp name="10">10</stringProp>
          </collectionProp>
          <collectionProp name="1397618101">
            <stringProp name="1567">10</stringProp>
            <stringProp name="1567">10</stringProp>
            <stringProp name="1691">50</stringProp>
            <stringProp name="50733">360</stringProp>
            <stringProp name="10">10</stringProp>
          </collectionProp>
          <collectionProp name="1424137857">
            <stringProp name="1567">10</stringProp>
            <stringProp name="1567">10</stringProp>
            <stringProp name="1722">60</stringProp>
            <stringProp name="50733">360</stringProp>
            <stringProp name="10">10</stringProp>
          </collectionProp>
          <collectionProp name="1427510006">
            <stringProp name="1567">10</stringProp>
            <stringProp name="1567">10</stringProp>
            <stringProp name="1753">70</stringProp>
            <stringProp name="50733">360</stringProp>
            <stringProp name="10">10</stringProp>
          </collectionProp>
          <collectionProp name="1430882155">
            <stringProp name="1567">10</stringProp>
            <stringProp name="1567">10</stringProp>
            <stringProp name="1784">80</stringProp>
            <stringProp name="50733">360</stringProp>
            <stringProp name="10">10</stringProp>
          </collectionProp>
          <collectionProp name="1457401911">
            <stringProp name="1567">10</stringProp>
            <stringProp name="1567">10</stringProp>
            <stringProp name="1815">90</stringProp>
            <stringProp name="50733">360</stringProp>
            <stringProp name="10">10</stringProp>
          </collectionProp>
          <collectionProp name="-1579738013">
            <stringProp name="1567">10</stringProp>
            <stringProp name="1567">10</stringProp>
            <stringProp name="48625">100</stringProp>
            <stringProp name="50733">360</stringProp>
            <stringProp name="10">10</stringProp>
          </collectionProp>
          <collectionProp name="-1576365864">
            <stringProp name="1567">10</stringProp>
            <stringProp name="1567">10</stringProp>
            <stringProp name="48656">110</stringProp>
            <stringProp name="50733">360</stringProp>
            <stringProp name="10">10</stringProp>
          </collectionProp>
          <collectionProp name="-1572993715">
            <stringProp name="1567">10</stringProp>
            <stringProp name="1567">10</stringProp>
            <stringProp name="48687">120</stringProp>
            <stringProp name="50733">360</stringProp>
            <stringProp name="10">10</stringProp>
          </collectionProp>
          <collectionProp name="-1546473959">
            <stringProp name="1567">10</stringProp>
            <stringProp name="1567">10</stringProp>
            <stringProp name="48718">130</stringProp>
            <stringProp name="50733">360</stringProp>
            <stringProp name="10">10</stringProp>
          </collectionProp>
          <collectionProp name="-1543101810">
            <stringProp name="1567">10</stringProp>
            <stringProp name="1567">10</stringProp>
            <stringProp name="48749">140</stringProp>
            <stringProp name="50733">360</stringProp>
            <stringProp name="10">10</stringProp>
          </collectionProp>
          <collectionProp name="-1538982964">
            <stringProp name="1567">10</stringProp>
            <stringProp name="1567">10</stringProp>
            <stringProp name="48780">150</stringProp>
            <stringProp name="50733">360</stringProp>
            <stringProp name="10">10</stringProp>
          </collectionProp>
          <collectionProp name="-1512463208">
            <stringProp name="1567">10</stringProp>
            <stringProp name="1567">10</stringProp>
            <stringProp name="48811">160</stringProp>
            <stringProp name="50733">360</stringProp>
            <stringProp name="10">10</stringProp>
          </collectionProp>
          <collectionProp name="-1509091059">
            <stringProp name="1567">10</stringProp>
            <stringProp name="1567">10</stringProp>
            <stringProp name="48842">170</stringProp>
            <stringProp name="50733">360</stringProp>
            <stringProp name="10">10</stringProp>
          </collectionProp>
          <collectionProp name="-1505718910">
            <stringProp name="1567">10</stringProp>
            <stringProp name="1567">10</stringProp>
            <stringProp name="48873">180</stringProp>
            <stringProp name="50733">360</stringProp>
            <stringProp name="10">10</stringProp>
          </collectionProp>
          <collectionProp name="-1479199154">
            <stringProp name="1567">10</stringProp>
            <stringProp name="1567">10</stringProp>
            <stringProp name="48904">190</stringProp>
            <stringProp name="50733">360</stringProp>
            <stringProp name="10">10</stringProp>
          </collectionProp>
          <collectionProp name="-547057023">
            <stringProp name="1567">10</stringProp>
            <stringProp name="1567">10</stringProp>
            <stringProp name="49586">200</stringProp>
            <stringProp name="50733">360</stringProp>
            <stringProp name="10">10</stringProp>
          </collectionProp>
          <collectionProp name="-520537267">
            <stringProp name="1567">10</stringProp>
            <stringProp name="1567">10</stringProp>
            <stringProp name="49617">210</stringProp>
            <stringProp name="50733">360</stringProp>
            <stringProp name="10">10</stringProp>
          </collectionProp>
          <collectionProp name="-517165118">
            <stringProp name="1567">10</stringProp>
            <stringProp name="1567">10</stringProp>
            <stringProp name="49648">220</stringProp>
            <stringProp name="50733">360</stringProp>
            <stringProp name="10">10</stringProp>
          </collectionProp>
          <collectionProp name="-513792969">
            <stringProp name="1567">10</stringProp>
            <stringProp name="1567">10</stringProp>
            <stringProp name="49679">230</stringProp>
            <stringProp name="50733">360</stringProp>
            <stringProp name="10">10</stringProp>
          </collectionProp>
          <collectionProp name="-486526516">
            <stringProp name="1567">10</stringProp>
            <stringProp name="1567">10</stringProp>
            <stringProp name="49710">240</stringProp>
            <stringProp name="50733">360</stringProp>
            <stringProp name="10">10</stringProp>
          </collectionProp>
          <collectionProp name="-483154367">
            <stringProp name="1567">10</stringProp>
            <stringProp name="1567">10</stringProp>
            <stringProp name="49741">250</stringProp>
            <stringProp name="50733">360</stringProp>
            <stringProp name="10">10</stringProp>
          </collectionProp>
          <collectionProp name="-479782218">
            <stringProp name="1567">10</stringProp>
            <stringProp name="1567">10</stringProp>
            <stringProp name="49772">260</stringProp>
            <stringProp name="50733">360</stringProp>
            <stringProp name="10">10</stringProp>
          </collectionProp>
          <collectionProp name="-453262462">
            <stringProp name="1567">10</stringProp>
            <stringProp name="1567">10</stringProp>
            <stringProp name="49803">270</stringProp>
            <stringProp name="50733">360</stringProp>
            <stringProp name="10">10</stringProp>
          </collectionProp>
          <collectionProp name="-449890313">
            <stringProp name="1567">10</stringProp>
            <stringProp name="1567">10</stringProp>
            <stringProp name="49834">280</stringProp>
            <stringProp name="50733">360</stringProp>
            <stringProp name="10">10</stringProp>
          </collectionProp>
          <collectionProp name="-446518164">
            <stringProp name="1567">10</stringProp>
            <stringProp name="1567">10</stringProp>
            <stringProp name="49865">290</stringProp>
            <stringProp name="50733">360</stringProp>
            <stringProp name="10">10</stringProp>
          </collectionProp>
          <collectionProp name="1278785421">
            <stringProp name="1567">10</stringProp>
            <stringProp name="1567">10</stringProp>
            <stringProp name="50547">300</stringProp>
            <stringProp name="50733">360</stringProp>
            <stringProp name="10">10</stringProp>
          </collectionProp>
          <collectionProp name="1282157570">
            <stringProp name="1567">10</stringProp>
            <stringProp name="1567">10</stringProp>
            <stringProp name="50578">310</stringProp>
            <stringProp name="50733">360</stringProp>
            <stringProp name="10">10</stringProp>
          </collectionProp>
          <collectionProp name="1308677326">
            <stringProp name="1567">10</stringProp>
            <stringProp name="1567">10</stringProp>
            <stringProp name="50609">320</stringProp>
            <stringProp name="50733">360</stringProp>
            <stringProp name="10">10</stringProp>
          </collectionProp>
          <collectionProp name="1312796172">
            <stringProp name="1567">10</stringProp>
            <stringProp name="1567">10</stringProp>
            <stringProp name="50640">330</stringProp>
            <stringProp name="50733">360</stringProp>
            <stringProp name="10">10</stringProp>
          </collectionProp>
          <collectionProp name="1316168321">
            <stringProp name="1567">10</stringProp>
            <stringProp name="1567">10</stringProp>
            <stringProp name="50671">340</stringProp>
            <stringProp name="50733">360</stringProp>
            <stringProp name="10">10</stringProp>
          </collectionProp>
          <collectionProp name="1342688077">
            <stringProp name="1567">10</stringProp>
            <stringProp name="1567">10</stringProp>
            <stringProp name="50702">350</stringProp>
            <stringProp name="50733">360</stringProp>
            <stringProp name="10">10</stringProp>
          </collectionProp>
          <collectionProp name="1346060226">
            <stringProp name="1567">10</stringProp>
            <stringProp name="1567">10</stringProp>
            <stringProp name="50733">360</stringProp>
            <stringProp name="50733">360</stringProp>
            <stringProp name="10">10</stringProp>
          </collectionProp>
          <collectionProp name="1349432375">
            <stringProp name="1567">10</stringProp>
            <stringProp name="1567">10</stringProp>
            <stringProp name="50764">370</stringProp>
            <stringProp name="50733">360</stringProp>
            <stringProp name="10">10</stringProp>
          </collectionProp>
          <collectionProp name="1352804524">
            <stringProp name="1567">10</stringProp>
            <stringProp name="1567">10</stringProp>
            <stringProp name="50795">380</stringProp>
            <stringProp name="50733">360</stringProp>
            <stringProp name="10">10</stringProp>
          </collectionProp>
          <collectionProp name="1379324280">
            <stringProp name="1567">10</stringProp>
            <stringProp name="1567">10</stringProp>
            <stringProp name="50826">390</stringProp>
            <stringProp name="50733">360</stringProp>
            <stringProp name="10">10</stringProp>
          </collectionProp>
          <collectionProp name="-1960353278">
            <stringProp name="1567">10</stringProp>
            <stringProp name="1567">10</stringProp>
            <stringProp name="51508">400</stringProp>
            <stringProp name="50733">360</stringProp>
            <stringProp name="10">10</stringProp>
          </collectionProp>
          <collectionProp name="-1956981129">
            <stringProp name="1567">10</stringProp>
            <stringProp name="1567">10</stringProp>
            <stringProp name="51539">410</stringProp>
            <stringProp name="50733">360</stringProp>
            <stringProp name="10">10</stringProp>
          </collectionProp>
          <collectionProp name="-1952862283">
            <stringProp name="1567">10</stringProp>
            <stringProp name="1567">10</stringProp>
            <stringProp name="51570">420</stringProp>
            <stringProp name="50733">360</stringProp>
            <stringProp name="10">10</stringProp>
          </collectionProp>
          <collectionProp name="-1926342527">
            <stringProp name="1567">10</stringProp>
            <stringProp name="1567">10</stringProp>
            <stringProp name="51601">430</stringProp>
            <stringProp name="50733">360</stringProp>
            <stringProp name="10">10</stringProp>
          </collectionProp>
          <collectionProp name="-1922970378">
            <stringProp name="1567">10</stringProp>
            <stringProp name="1567">10</stringProp>
            <stringProp name="51632">440</stringProp>
            <stringProp name="50733">360</stringProp>
            <stringProp name="10">10</stringProp>
          </collectionProp>
          <collectionProp name="-1919598229">
            <stringProp name="1567">10</stringProp>
            <stringProp name="1567">10</stringProp>
            <stringProp name="51663">450</stringProp>
            <stringProp name="50733">360</stringProp>
            <stringProp name="10">10</stringProp>
          </collectionProp>
          <collectionProp name="-1916226080">
            <stringProp name="1567">10</stringProp>
            <stringProp name="1567">10</stringProp>
            <stringProp name="51694">460</stringProp>
            <stringProp name="50733">360</stringProp>
            <stringProp name="10">10</stringProp>
          </collectionProp>
          <collectionProp name="-1889706324">
            <stringProp name="1567">10</stringProp>
            <stringProp name="1567">10</stringProp>
            <stringProp name="51725">470</stringProp>
            <stringProp name="50733">360</stringProp>
            <stringProp name="10">10</stringProp>
          </collectionProp>
          <collectionProp name="-1886334175">
            <stringProp name="1567">10</stringProp>
            <stringProp name="1567">10</stringProp>
            <stringProp name="51756">480</stringProp>
            <stringProp name="50733">360</stringProp>
            <stringProp name="10">10</stringProp>
          </collectionProp>
          <collectionProp name="-1882962026">
            <stringProp name="1567">10</stringProp>
            <stringProp name="1567">10</stringProp>
            <stringProp name="51787">490</stringProp>
            <stringProp name="50733">360</stringProp>
            <stringProp name="10">10</stringProp>
          </collectionProp>
          <collectionProp name="-927672288">
            <stringProp name="1567">10</stringProp>
            <stringProp name="1567">10</stringProp>
            <stringProp name="52469">500</stringProp>
            <stringProp name="50733">360</stringProp>
            <stringProp name="10">10</stringProp>
          </collectionProp>
          <collectionProp name="-900405835">
            <stringProp name="1567">10</stringProp>
            <stringProp name="1567">10</stringProp>
            <stringProp name="52500">510</stringProp>
            <stringProp name="50733">360</stringProp>
            <stringProp name="10">10</stringProp>
          </collectionProp>
          <collectionProp name="-897033686">
            <stringProp name="1567">10</stringProp>
            <stringProp name="1567">10</stringProp>
            <stringProp name="52531">520</stringProp>
            <stringProp name="50733">360</stringProp>
            <stringProp name="10">10</stringProp>
          </collectionProp>
          <collectionProp name="-893661537">
            <stringProp name="1567">10</stringProp>
            <stringProp name="1567">10</stringProp>
            <stringProp name="52562">530</stringProp>
            <stringProp name="50733">360</stringProp>
            <stringProp name="10">10</stringProp>
          </collectionProp>
          <collectionProp name="-890289388">
            <stringProp name="1567">10</stringProp>
            <stringProp name="1567">10</stringProp>
            <stringProp name="52593">540</stringProp>
            <stringProp name="50733">360</stringProp>
            <stringProp name="10">10</stringProp>
          </collectionProp>
          <collectionProp name="-863769632">
            <stringProp name="1567">10</stringProp>
            <stringProp name="1567">10</stringProp>
            <stringProp name="52624">550</stringProp>
            <stringProp name="50733">360</stringProp>
            <stringProp name="10">10</stringProp>
          </collectionProp>
          <collectionProp name="-860397483">
            <stringProp name="1567">10</stringProp>
            <stringProp name="1567">10</stringProp>
            <stringProp name="52655">560</stringProp>
            <stringProp name="50733">360</stringProp>
            <stringProp name="10">10</stringProp>
          </collectionProp>
          <collectionProp name="-857025334">
            <stringProp name="1567">10</stringProp>
            <stringProp name="1567">10</stringProp>
            <stringProp name="52686">570</stringProp>
            <stringProp name="50733">360</stringProp>
            <stringProp name="10">10</stringProp>
          </collectionProp>
          <collectionProp name="-830505578">
            <stringProp name="1567">10</stringProp>
            <stringProp name="1567">10</stringProp>
            <stringProp name="52717">580</stringProp>
            <stringProp name="50733">360</stringProp>
            <stringProp name="10">10</stringProp>
          </collectionProp>
          <collectionProp name="-827133429">
            <stringProp name="1567">10</stringProp>
            <stringProp name="1567">10</stringProp>
            <stringProp name="52748">590</stringProp>
            <stringProp name="50733">360</stringProp>
            <stringProp name="10">10</stringProp>
          </collectionProp>
          <collectionProp name="128903006">
            <stringProp name="1567">10</stringProp>
            <stringProp name="1567">10</stringProp>
            <stringProp name="53430">600</stringProp>
            <stringProp name="50733">360</stringProp>
            <stringProp name="10">10</stringProp>
          </collectionProp>
          <collectionProp name="132275155">
            <stringProp name="1567">10</stringProp>
            <stringProp name="1567">10</stringProp>
            <stringProp name="53461">610</stringProp>
            <stringProp name="50733">360</stringProp>
            <stringProp name="10">10</stringProp>
          </collectionProp>
          <collectionProp name="135647304">
            <stringProp name="1567">10</stringProp>
            <stringProp name="1567">10</stringProp>
            <stringProp name="53492">620</stringProp>
            <stringProp name="50733">360</stringProp>
            <stringProp name="10">10</stringProp>
          </collectionProp>
          <collectionProp name="162167060">
            <stringProp name="1567">10</stringProp>
            <stringProp name="1567">10</stringProp>
            <stringProp name="53523">630</stringProp>
            <stringProp name="50733">360</stringProp>
            <stringProp name="10">10</stringProp>
          </collectionProp>
          <collectionProp name="165539209">
            <stringProp name="1567">10</stringProp>
            <stringProp name="1567">10</stringProp>
            <stringProp name="53554">640</stringProp>
            <stringProp name="50733">360</stringProp>
            <stringProp name="10">10</stringProp>
          </collectionProp>
          <collectionProp name="168911358">
            <stringProp name="1567">10</stringProp>
            <stringProp name="1567">10</stringProp>
            <stringProp name="53585">650</stringProp>
            <stringProp name="50733">360</stringProp>
            <stringProp name="10">10</stringProp>
          </collectionProp>
          <collectionProp name="195431114">
            <stringProp name="1567">10</stringProp>
            <stringProp name="1567">10</stringProp>
            <stringProp name="53616">660</stringProp>
            <stringProp name="50733">360</stringProp>
            <stringProp name="10">10</stringProp>
          </collectionProp>
          <collectionProp name="198803263">
            <stringProp name="1567">10</stringProp>
            <stringProp name="1567">10</stringProp>
            <stringProp name="53647">670</stringProp>
            <stringProp name="50733">360</stringProp>
            <stringProp name="10">10</stringProp>
          </collectionProp>
          <collectionProp name="202175412">
            <stringProp name="1567">10</stringProp>
            <stringProp name="1567">10</stringProp>
            <stringProp name="53678">680</stringProp>
            <stringProp name="50733">360</stringProp>
            <stringProp name="10">10</stringProp>
          </collectionProp>
          <collectionProp name="228695168">
            <stringProp name="1567">10</stringProp>
            <stringProp name="1567">10</stringProp>
            <stringProp name="53709">690</stringProp>
            <stringProp name="50733">360</stringProp>
            <stringProp name="10">10</stringProp>
          </collectionProp>
          <collectionProp name="1161583996">
            <stringProp name="1567">10</stringProp>
            <stringProp name="1567">10</stringProp>
            <stringProp name="54391">700</stringProp>
            <stringProp name="50733">360</stringProp>
            <stringProp name="10">10</stringProp>
          </collectionProp>
          <collectionProp name="1188103752">
            <stringProp name="1567">10</stringProp>
            <stringProp name="1567">10</stringProp>
            <stringProp name="54422">710</stringProp>
            <stringProp name="50733">360</stringProp>
            <stringProp name="10">10</stringProp>
          </collectionProp>
          <collectionProp name="1191475901">
            <stringProp name="1567">10</stringProp>
            <stringProp name="1567">10</stringProp>
            <stringProp name="54453">720</stringProp>
            <stringProp name="50733">360</stringProp>
            <stringProp name="10">10</stringProp>
          </collectionProp>
        </collectionProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <intProp name="LoopController.loops">-1</intProp>
        </elementProp>
        <stringProp name="ThreadGroup.on_sample_error">stoptest</stringProp>
      </kg.apc.jmeter.threads.UltimateThreadGroup>
      <hashTree>
        <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP Request Defaults" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="Kysely" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">Kysely</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">${path}</stringProp>
          <stringProp name="HTTPSampler.concurrentPool">4</stringProp>
          <stringProp name="HTTPSampler.connect_timeout">${timeout}</stringProp>
          <stringProp name="HTTPSampler.response_timeout">${timeout}</stringProp>
        </ConfigTestElement>
        <hashTree/>
        <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="HTTP Cookie Manager" enabled="false">
          <collectionProp name="CookieManager.cookies"/>
          <stringProp name="TestPlan.comments">Sanomankoko</stringProp>
          <boolProp name="CookieManager.clearEachIteration">false</boolProp>
          <stringProp name="CookieManager.implementation">org.apache.jmeter.protocol.http.control.HC4CookieHandler</stringProp>
        </CookieManager>
        <hashTree/>
        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="false">
          <collectionProp name="HeaderManager.headers">
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Content-Type</stringProp>
              <stringProp name="Header.value">text/xml; charset=utf-8</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">SOAPAction</stringProp>
              <stringProp name="Header.value"></stringProp>
            </elementProp>
          </collectionProp>
        </HeaderManager>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="TG52 10K" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; &#xd;
xmlns:xro=&quot;http://x-road.eu/xsd/xroad.xsd&quot; xmlns:iden=&quot;http://x-road.eu/xsd/identifiers&quot;&#xd;
xmlns:prod=&quot;http://test.x-road.fi/producer&quot;&gt;&#xd;
   &lt;soapenv:Header&gt;&#xd;
      &lt;xro:protocolVersion&gt;4.x&lt;/xro:protocolVersion&gt;&#xd;
      &lt;xro:id&gt;TEST7a&lt;/xro:id&gt;&#xd;
      &lt;xro:userId&gt;EE1234567890&lt;/xro:userId&gt;&#xd;
      &lt;xro:client iden:objectType=&quot;SUBSYSTEM&quot;&gt;&#xd;
         &lt;iden:xRoadInstance&gt;${Instance}&lt;/iden:xRoadInstance&gt;&#xd;
         &lt;iden:memberClass&gt;GOV&lt;/iden:memberClass&gt;&#xd;
         &lt;iden:memberCode&gt;${MemberCode}&lt;/iden:memberCode&gt;&#xd;
         &lt;iden:subsystemCode&gt;perftestclient&lt;/iden:subsystemCode&gt;&#xd;
      &lt;/xro:client&gt;&#xd;
      &lt;xro:service iden:objectType=&quot;SERVICE&quot;&gt;&#xd;
         &lt;iden:xRoadInstance&gt;${Instance}&lt;/iden:xRoadInstance&gt;&#xd;
         &lt;iden:memberClass&gt;GOV&lt;/iden:memberClass&gt;&#xd;
         &lt;iden:memberCode&gt;${MemberCode}&lt;/iden:memberCode&gt;&#xd;
         &lt;iden:subsystemCode&gt;perftestservice&lt;/iden:subsystemCode&gt;&#xd;
         &lt;iden:serviceCode&gt;testService&lt;/iden:serviceCode&gt;&#xd;
         &lt;iden:serviceVersion&gt;v1&lt;/iden:serviceVersion&gt;&#xd;
      &lt;/xro:service&gt;&#xd;
   &lt;/soapenv:Header&gt;&#xd;
   &lt;soapenv:Body&gt;&#xd;
      &lt;prod:testService&gt;&#xd;
             &lt;request&gt;&#xd;
                &lt;responseBodySize&gt;10000&lt;/responseBodySize&gt;&#xd;
                &lt;responseAttachmentSize&gt;0&lt;/responseAttachmentSize&gt;&#xd;
            &lt;/request&gt;&#xd;
     &lt;/prod:testService&gt;&#xd;
   &lt;/soapenv:Body&gt;&#xd;
&lt;/soapenv:Envelope&gt;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">test-service-0.0.2-SNAPSHOT/Endpoint</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">Sanomankoko 10K</stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="false">
          <stringProp name="ConstantTimer.delay">${timer}</stringProp>
        </ConstantTimer>
        <hashTree/>
        <ResultCollector guiclass="StatVisualizer" testclass="ResultCollector" testname="Aggregate Report" enabled="false">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>false</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <hostname>true</hostname>
              <threadCounts>true</threadCounts>
              <sampleCount>true</sampleCount>
            </value>
          </objProp>
          <stringProp name="filename">../logs/runs/TG52_10K_short_${__time(dd-MM-yyyy&apos;_T_&apos;HH:mm)}.csv</stringProp>
        </ResultCollector>
        <hashTree/>
        <kg.apc.jmeter.reporters.LoadosophiaUploader guiclass="kg.apc.jmeter.reporters.LoadosophiaUploaderGui" testclass="kg.apc.jmeter.reporters.LoadosophiaUploader" testname="jp@gc - Loadosophia.org Uploader" enabled="false">
          <elementProp name="arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="classname">kg.apc.jmeter.reporters.LoadosophiaClient</stringProp>
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>false</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <hostname>true</hostname>
              <threadCounts>true</threadCounts>
              <sampleCount>true</sampleCount>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
          <stringProp name="project"></stringProp>
          <stringProp name="uploadToken">${loadsoftoken}</stringProp>
          <stringProp name="storeDir">../logs/Loadsof/</stringProp>
          <stringProp name="color">none</stringProp>
          <stringProp name="title">TG51 10K - 400users_${__time(dd-MM-yyyy&apos;_T_&apos;HH:mm)}</stringProp>
          <boolProp name="useOnline">true</boolProp>
        </kg.apc.jmeter.reporters.LoadosophiaUploader>
        <hashTree/>
      </hashTree>
      <kg.apc.jmeter.threads.UltimateThreadGroup guiclass="kg.apc.jmeter.threads.UltimateThreadGroupGui" testclass="kg.apc.jmeter.threads.UltimateThreadGroup" testname="TG 53 Sanomakoko 10K short" enabled="false">
        <collectionProp name="ultimatethreadgroupdata">
          <collectionProp name="-1785850827">
            <stringProp name="1567">10</stringProp>
            <stringProp name="48">0</stringProp>
            <stringProp name="1567">10</stringProp>
            <stringProp name="50733">360</stringProp>
            <stringProp name="10">10</stringProp>
          </collectionProp>
          <collectionProp name="1363607350">
            <stringProp name="1567">10</stringProp>
            <stringProp name="1567">10</stringProp>
            <stringProp name="1598">20</stringProp>
            <stringProp name="50733">360</stringProp>
            <stringProp name="10">10</stringProp>
          </collectionProp>
          <collectionProp name="1390127106">
            <stringProp name="1567">10</stringProp>
            <stringProp name="1567">10</stringProp>
            <stringProp name="1629">30</stringProp>
            <stringProp name="50733">360</stringProp>
            <stringProp name="10">10</stringProp>
          </collectionProp>
          <collectionProp name="1394245952">
            <stringProp name="1567">10</stringProp>
            <stringProp name="1567">10</stringProp>
            <stringProp name="1660">40</stringProp>
            <stringProp name="50733">360</stringProp>
            <stringProp name="10">10</stringProp>
          </collectionProp>
          <collectionProp name="1397618101">
            <stringProp name="1567">10</stringProp>
            <stringProp name="1567">10</stringProp>
            <stringProp name="1691">50</stringProp>
            <stringProp name="50733">360</stringProp>
            <stringProp name="10">10</stringProp>
          </collectionProp>
          <collectionProp name="1424137857">
            <stringProp name="1567">10</stringProp>
            <stringProp name="1567">10</stringProp>
            <stringProp name="1722">60</stringProp>
            <stringProp name="50733">360</stringProp>
            <stringProp name="10">10</stringProp>
          </collectionProp>
          <collectionProp name="1427510006">
            <stringProp name="1567">10</stringProp>
            <stringProp name="1567">10</stringProp>
            <stringProp name="1753">70</stringProp>
            <stringProp name="50733">360</stringProp>
            <stringProp name="10">10</stringProp>
          </collectionProp>
          <collectionProp name="1430882155">
            <stringProp name="1567">10</stringProp>
            <stringProp name="1567">10</stringProp>
            <stringProp name="1784">80</stringProp>
            <stringProp name="50733">360</stringProp>
            <stringProp name="10">10</stringProp>
          </collectionProp>
          <collectionProp name="1457401911">
            <stringProp name="1567">10</stringProp>
            <stringProp name="1567">10</stringProp>
            <stringProp name="1815">90</stringProp>
            <stringProp name="50733">360</stringProp>
            <stringProp name="10">10</stringProp>
          </collectionProp>
          <collectionProp name="-1579738013">
            <stringProp name="1567">10</stringProp>
            <stringProp name="1567">10</stringProp>
            <stringProp name="48625">100</stringProp>
            <stringProp name="50733">360</stringProp>
            <stringProp name="10">10</stringProp>
          </collectionProp>
        </collectionProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <intProp name="LoopController.loops">-1</intProp>
        </elementProp>
        <stringProp name="ThreadGroup.on_sample_error">stoptest</stringProp>
      </kg.apc.jmeter.threads.UltimateThreadGroup>
      <hashTree>
        <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP Request Defaults" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="Kysely" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">Kysely</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">${path}</stringProp>
          <stringProp name="HTTPSampler.concurrentPool">4</stringProp>
          <stringProp name="HTTPSampler.connect_timeout">${timeout}</stringProp>
          <stringProp name="HTTPSampler.response_timeout">${timeout}</stringProp>
        </ConfigTestElement>
        <hashTree/>
        <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="HTTP Cookie Manager" enabled="false">
          <collectionProp name="CookieManager.cookies"/>
          <stringProp name="TestPlan.comments">Sanomankoko</stringProp>
          <boolProp name="CookieManager.clearEachIteration">false</boolProp>
          <stringProp name="CookieManager.implementation">org.apache.jmeter.protocol.http.control.HC4CookieHandler</stringProp>
        </CookieManager>
        <hashTree/>
        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="false">
          <collectionProp name="HeaderManager.headers">
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Content-Type</stringProp>
              <stringProp name="Header.value">text/xml; charset=utf-8</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">SOAPAction</stringProp>
              <stringProp name="Header.value"></stringProp>
            </elementProp>
          </collectionProp>
        </HeaderManager>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="TG53 10K" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; &#xd;
xmlns:xro=&quot;http://x-road.eu/xsd/xroad.xsd&quot; xmlns:iden=&quot;http://x-road.eu/xsd/identifiers&quot;&#xd;
xmlns:prod=&quot;http://test.x-road.fi/producer&quot;&gt;&#xd;
   &lt;soapenv:Header&gt;&#xd;
      &lt;xro:protocolVersion&gt;4.x&lt;/xro:protocolVersion&gt;&#xd;
      &lt;xro:id&gt;TEST7a&lt;/xro:id&gt;&#xd;
      &lt;xro:userId&gt;EE1234567890&lt;/xro:userId&gt;&#xd;
      &lt;xro:client iden:objectType=&quot;SUBSYSTEM&quot;&gt;&#xd;
         &lt;iden:xRoadInstance&gt;${Instance}&lt;/iden:xRoadInstance&gt;&#xd;
         &lt;iden:memberClass&gt;GOV&lt;/iden:memberClass&gt;&#xd;
         &lt;iden:memberCode&gt;${MemberCode}&lt;/iden:memberCode&gt;&#xd;
         &lt;iden:subsystemCode&gt;perftestclient&lt;/iden:subsystemCode&gt;&#xd;
      &lt;/xro:client&gt;&#xd;
      &lt;xro:service iden:objectType=&quot;SERVICE&quot;&gt;&#xd;
         &lt;iden:xRoadInstance&gt;${Instance}&lt;/iden:xRoadInstance&gt;&#xd;
         &lt;iden:memberClass&gt;GOV&lt;/iden:memberClass&gt;&#xd;
         &lt;iden:memberCode&gt;${MemberCode}&lt;/iden:memberCode&gt;&#xd;
         &lt;iden:subsystemCode&gt;perftestservice&lt;/iden:subsystemCode&gt;&#xd;
         &lt;iden:serviceCode&gt;testService&lt;/iden:serviceCode&gt;&#xd;
         &lt;iden:serviceVersion&gt;v1&lt;/iden:serviceVersion&gt;&#xd;
      &lt;/xro:service&gt;&#xd;
   &lt;/soapenv:Header&gt;&#xd;
   &lt;soapenv:Body&gt;&#xd;
      &lt;prod:testService&gt;&#xd;
             &lt;request&gt;&#xd;
                &lt;responseBodySize&gt;10000&lt;/responseBodySize&gt;&#xd;
                &lt;responseAttachmentSize&gt;0&lt;/responseAttachmentSize&gt;&#xd;
            &lt;/request&gt;&#xd;
     &lt;/prod:testService&gt;&#xd;
   &lt;/soapenv:Body&gt;&#xd;
&lt;/soapenv:Envelope&gt;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">test-service-0.0.2-SNAPSHOT/Endpoint</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">Sanomankoko 10K</stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="false">
          <stringProp name="ConstantTimer.delay">${timer}</stringProp>
        </ConstantTimer>
        <hashTree/>
        <ResultCollector guiclass="StatVisualizer" testclass="ResultCollector" testname="Aggregate Report" enabled="false">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>false</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <hostname>true</hostname>
              <threadCounts>true</threadCounts>
              <sampleCount>true</sampleCount>
            </value>
          </objProp>
          <stringProp name="filename">../logs/runs/TG53_10Kshort_${__time(dd-MM-yyyy&apos;_T_&apos;HH:mm)}.jtl</stringProp>
        </ResultCollector>
        <hashTree/>
        <kg.apc.jmeter.reporters.LoadosophiaUploader guiclass="kg.apc.jmeter.reporters.LoadosophiaUploaderGui" testclass="kg.apc.jmeter.reporters.LoadosophiaUploader" testname="jp@gc - Loadosophia.org Uploader" enabled="false">
          <elementProp name="arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="classname">kg.apc.jmeter.reporters.LoadosophiaClient</stringProp>
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>false</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <hostname>true</hostname>
              <threadCounts>true</threadCounts>
              <sampleCount>true</sampleCount>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
          <stringProp name="project"></stringProp>
          <stringProp name="uploadToken">${loadsoftoken}</stringProp>
          <stringProp name="storeDir">../logs/Loadsof/</stringProp>
          <stringProp name="color">none</stringProp>
          <stringProp name="title">TG53 10K_short_${__time(dd-MM-yyyy&apos;_T_&apos;HH:mm)}</stringProp>
          <boolProp name="useOnline">true</boolProp>
        </kg.apc.jmeter.reporters.LoadosophiaUploader>
        <hashTree/>
      </hashTree>
      <kg.apc.jmeter.threads.SteppingThreadGroup guiclass="kg.apc.jmeter.threads.SteppingThreadGroupGui" testclass="kg.apc.jmeter.threads.SteppingThreadGroup" testname="TG 54 Sanomakoko 50k - Stepping" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">stoptest</stringProp>
        <stringProp name="ThreadGroup.num_threads">400</stringProp>
        <stringProp name="Threads initial delay">0</stringProp>
        <stringProp name="Start users count">1</stringProp>
        <stringProp name="Start users count burst">1</stringProp>
        <stringProp name="Start users period">3</stringProp>
        <stringProp name="Stop users count">5</stringProp>
        <stringProp name="Stop users period">10</stringProp>
        <stringProp name="flighttime">0</stringProp>
        <stringProp name="rampUp"></stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <intProp name="LoopController.loops">-1</intProp>
        </elementProp>
      </kg.apc.jmeter.threads.SteppingThreadGroup>
      <hashTree>
        <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP Request Defaults" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="Kysely" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">Kysely</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">${path}</stringProp>
          <stringProp name="HTTPSampler.concurrentPool">4</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </ConfigTestElement>
        <hashTree/>
        <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="HTTP Cookie Manager" enabled="false">
          <collectionProp name="CookieManager.cookies"/>
          <stringProp name="TestPlan.comments">Sanomankoko</stringProp>
          <boolProp name="CookieManager.clearEachIteration">false</boolProp>
          <stringProp name="CookieManager.implementation">org.apache.jmeter.protocol.http.control.HC4CookieHandler</stringProp>
        </CookieManager>
        <hashTree/>
        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="false">
          <collectionProp name="HeaderManager.headers">
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Content-Type</stringProp>
              <stringProp name="Header.value">text/xml; charset=utf-8</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">SOAPAction</stringProp>
              <stringProp name="Header.value"></stringProp>
            </elementProp>
          </collectionProp>
        </HeaderManager>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="TG54 50K" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; &#xd;
xmlns:xro=&quot;http://x-road.eu/xsd/xroad.xsd&quot; xmlns:iden=&quot;http://x-road.eu/xsd/identifiers&quot;&#xd;
xmlns:prod=&quot;http://test.x-road.fi/producer&quot;&gt;&#xd;
   &lt;soapenv:Header&gt;&#xd;
      &lt;xro:protocolVersion&gt;4.x&lt;/xro:protocolVersion&gt;&#xd;
      &lt;xro:id&gt;TEST7a&lt;/xro:id&gt;&#xd;
      &lt;xro:userId&gt;EE1234567890&lt;/xro:userId&gt;&#xd;
      &lt;xro:client iden:objectType=&quot;SUBSYSTEM&quot;&gt;&#xd;
         &lt;iden:xRoadInstance&gt;${Instance}&lt;/iden:xRoadInstance&gt;&#xd;
         &lt;iden:memberClass&gt;GOV&lt;/iden:memberClass&gt;&#xd;
         &lt;iden:memberCode&gt;${MemberCode}&lt;/iden:memberCode&gt;&#xd;
         &lt;iden:subsystemCode&gt;perftestclient&lt;/iden:subsystemCode&gt;&#xd;
      &lt;/xro:client&gt;&#xd;
      &lt;xro:service iden:objectType=&quot;SERVICE&quot;&gt;&#xd;
         &lt;iden:xRoadInstance&gt;${Instance}&lt;/iden:xRoadInstance&gt;&#xd;
         &lt;iden:memberClass&gt;GOV&lt;/iden:memberClass&gt;&#xd;
         &lt;iden:memberCode&gt;${MemberCode}&lt;/iden:memberCode&gt;&#xd;
         &lt;iden:subsystemCode&gt;perftestservice&lt;/iden:subsystemCode&gt;&#xd;
         &lt;iden:serviceCode&gt;testService&lt;/iden:serviceCode&gt;&#xd;
         &lt;iden:serviceVersion&gt;v1&lt;/iden:serviceVersion&gt;&#xd;
      &lt;/xro:service&gt;&#xd;
   &lt;/soapenv:Header&gt;&#xd;
   &lt;soapenv:Body&gt;&#xd;
      &lt;prod:testService&gt;&#xd;
             &lt;request&gt;&#xd;
                &lt;responseBodySize&gt;50000&lt;/responseBodySize&gt;&#xd;
                &lt;responseAttachmentSize&gt;0&lt;/responseAttachmentSize&gt;&#xd;
            &lt;/request&gt;&#xd;
     &lt;/prod:testService&gt;&#xd;
   &lt;/soapenv:Body&gt;&#xd;
&lt;/soapenv:Envelope&gt;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">test-service-0.0.2-SNAPSHOT/Endpoint</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">Sanomankoko 10K</stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="false">
          <stringProp name="ConstantTimer.delay">${timer}</stringProp>
        </ConstantTimer>
        <hashTree/>
        <ResultCollector guiclass="StatVisualizer" testclass="ResultCollector" testname="Aggregate Report" enabled="false">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>false</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <hostname>true</hostname>
              <threadCounts>true</threadCounts>
              <sampleCount>true</sampleCount>
            </value>
          </objProp>
          <stringProp name="filename">../logs/runs/TG54_50K_${__time(dd-MM-yyyy&apos;_T_&apos;HH:mm)}.jtl</stringProp>
        </ResultCollector>
        <hashTree/>
        <kg.apc.jmeter.reporters.LoadosophiaUploader guiclass="kg.apc.jmeter.reporters.LoadosophiaUploaderGui" testclass="kg.apc.jmeter.reporters.LoadosophiaUploader" testname="jp@gc - Loadosophia.org Uploader" enabled="false">
          <elementProp name="arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="classname">kg.apc.jmeter.reporters.LoadosophiaClient</stringProp>
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>false</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <hostname>true</hostname>
              <threadCounts>true</threadCounts>
              <sampleCount>true</sampleCount>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
          <stringProp name="project"></stringProp>
          <stringProp name="uploadToken">${loadsoftoken}</stringProp>
          <stringProp name="storeDir">../logs/Loadsof/</stringProp>
          <stringProp name="color">none</stringProp>
          <stringProp name="title">TG54_50K_400_users_${__time(dd-MM-yyyy&apos;_T_&apos;HH:mm)}</stringProp>
          <boolProp name="useOnline">true</boolProp>
        </kg.apc.jmeter.reporters.LoadosophiaUploader>
        <hashTree/>
      </hashTree>
      <kg.apc.jmeter.threads.UltimateThreadGroup guiclass="kg.apc.jmeter.threads.UltimateThreadGroupGui" testclass="kg.apc.jmeter.threads.UltimateThreadGroup" testname="TG 55  Sanomakoko  50K short" enabled="false">
        <collectionProp name="ultimatethreadgroupdata">
          <collectionProp name="-1785850827">
            <stringProp name="1567">10</stringProp>
            <stringProp name="48">0</stringProp>
            <stringProp name="1567">10</stringProp>
            <stringProp name="50733">360</stringProp>
            <stringProp name="10">10</stringProp>
          </collectionProp>
          <collectionProp name="1363607350">
            <stringProp name="1567">10</stringProp>
            <stringProp name="1567">10</stringProp>
            <stringProp name="1598">20</stringProp>
            <stringProp name="50733">360</stringProp>
            <stringProp name="10">10</stringProp>
          </collectionProp>
          <collectionProp name="1390127106">
            <stringProp name="1567">10</stringProp>
            <stringProp name="1567">10</stringProp>
            <stringProp name="1629">30</stringProp>
            <stringProp name="50733">360</stringProp>
            <stringProp name="10">10</stringProp>
          </collectionProp>
          <collectionProp name="1394245952">
            <stringProp name="1567">10</stringProp>
            <stringProp name="1567">10</stringProp>
            <stringProp name="1660">40</stringProp>
            <stringProp name="50733">360</stringProp>
            <stringProp name="10">10</stringProp>
          </collectionProp>
          <collectionProp name="1397618101">
            <stringProp name="1567">10</stringProp>
            <stringProp name="1567">10</stringProp>
            <stringProp name="1691">50</stringProp>
            <stringProp name="50733">360</stringProp>
            <stringProp name="10">10</stringProp>
          </collectionProp>
          <collectionProp name="1424137857">
            <stringProp name="1567">10</stringProp>
            <stringProp name="1567">10</stringProp>
            <stringProp name="1722">60</stringProp>
            <stringProp name="50733">360</stringProp>
            <stringProp name="10">10</stringProp>
          </collectionProp>
          <collectionProp name="1427510006">
            <stringProp name="1567">10</stringProp>
            <stringProp name="1567">10</stringProp>
            <stringProp name="1753">70</stringProp>
            <stringProp name="50733">360</stringProp>
            <stringProp name="10">10</stringProp>
          </collectionProp>
          <collectionProp name="1430882155">
            <stringProp name="1567">10</stringProp>
            <stringProp name="1567">10</stringProp>
            <stringProp name="1784">80</stringProp>
            <stringProp name="50733">360</stringProp>
            <stringProp name="10">10</stringProp>
          </collectionProp>
          <collectionProp name="1457401911">
            <stringProp name="1567">10</stringProp>
            <stringProp name="1567">10</stringProp>
            <stringProp name="1815">90</stringProp>
            <stringProp name="50733">360</stringProp>
            <stringProp name="10">10</stringProp>
          </collectionProp>
          <collectionProp name="-1579738013">
            <stringProp name="1567">10</stringProp>
            <stringProp name="1567">10</stringProp>
            <stringProp name="48625">100</stringProp>
            <stringProp name="50733">360</stringProp>
            <stringProp name="10">10</stringProp>
          </collectionProp>
        </collectionProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <intProp name="LoopController.loops">-1</intProp>
        </elementProp>
        <stringProp name="ThreadGroup.on_sample_error">stoptest</stringProp>
      </kg.apc.jmeter.threads.UltimateThreadGroup>
      <hashTree>
        <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP Request Defaults" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="Kysely" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">Kysely</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">${path}</stringProp>
          <stringProp name="HTTPSampler.concurrentPool">4</stringProp>
          <stringProp name="HTTPSampler.connect_timeout">${timeout}</stringProp>
          <stringProp name="HTTPSampler.response_timeout">${timeout}</stringProp>
        </ConfigTestElement>
        <hashTree/>
        <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="HTTP Cookie Manager" enabled="false">
          <collectionProp name="CookieManager.cookies"/>
          <stringProp name="TestPlan.comments">Sanomankoko</stringProp>
          <boolProp name="CookieManager.clearEachIteration">false</boolProp>
          <stringProp name="CookieManager.implementation">org.apache.jmeter.protocol.http.control.HC4CookieHandler</stringProp>
        </CookieManager>
        <hashTree/>
        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="false">
          <collectionProp name="HeaderManager.headers">
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Content-Type</stringProp>
              <stringProp name="Header.value">text/xml; charset=utf-8</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">SOAPAction</stringProp>
              <stringProp name="Header.value"></stringProp>
            </elementProp>
          </collectionProp>
        </HeaderManager>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="TG55 50K" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; &#xd;
xmlns:xro=&quot;http://x-road.eu/xsd/xroad.xsd&quot; xmlns:iden=&quot;http://x-road.eu/xsd/identifiers&quot;&#xd;
xmlns:prod=&quot;http://test.x-road.fi/producer&quot;&gt;&#xd;
   &lt;soapenv:Header&gt;&#xd;
      &lt;xro:protocolVersion&gt;4.x&lt;/xro:protocolVersion&gt;&#xd;
      &lt;xro:id&gt;TEST7a&lt;/xro:id&gt;&#xd;
      &lt;xro:userId&gt;EE1234567890&lt;/xro:userId&gt;&#xd;
      &lt;xro:client iden:objectType=&quot;SUBSYSTEM&quot;&gt;&#xd;
         &lt;iden:xRoadInstance&gt;${Instance}&lt;/iden:xRoadInstance&gt;&#xd;
         &lt;iden:memberClass&gt;GOV&lt;/iden:memberClass&gt;&#xd;
         &lt;iden:memberCode&gt;${MemberCode}&lt;/iden:memberCode&gt;&#xd;
         &lt;iden:subsystemCode&gt;perftestclient&lt;/iden:subsystemCode&gt;&#xd;
      &lt;/xro:client&gt;&#xd;
      &lt;xro:service iden:objectType=&quot;SERVICE&quot;&gt;&#xd;
         &lt;iden:xRoadInstance&gt;${Instance}&lt;/iden:xRoadInstance&gt;&#xd;
         &lt;iden:memberClass&gt;GOV&lt;/iden:memberClass&gt;&#xd;
         &lt;iden:memberCode&gt;${MemberCode}&lt;/iden:memberCode&gt;&#xd;
         &lt;iden:subsystemCode&gt;perftestservice&lt;/iden:subsystemCode&gt;&#xd;
         &lt;iden:serviceCode&gt;testService&lt;/iden:serviceCode&gt;&#xd;
         &lt;iden:serviceVersion&gt;v1&lt;/iden:serviceVersion&gt;&#xd;
      &lt;/xro:service&gt;&#xd;
   &lt;/soapenv:Header&gt;&#xd;
   &lt;soapenv:Body&gt;&#xd;
      &lt;prod:testService&gt;&#xd;
             &lt;request&gt;&#xd;
                &lt;responseBodySize&gt;50000&lt;/responseBodySize&gt;&#xd;
                &lt;responseAttachmentSize&gt;0&lt;/responseAttachmentSize&gt;&#xd;
            &lt;/request&gt;&#xd;
     &lt;/prod:testService&gt;&#xd;
   &lt;/soapenv:Body&gt;&#xd;
&lt;/soapenv:Envelope&gt;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">test-service-0.0.2-SNAPSHOT/Endpoint</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">Sanomankoko 10K</stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="false">
          <stringProp name="ConstantTimer.delay">${timer}</stringProp>
        </ConstantTimer>
        <hashTree/>
        <ResultCollector guiclass="StatVisualizer" testclass="ResultCollector" testname="Aggregate Report" enabled="false">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>false</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <hostname>true</hostname>
              <threadCounts>true</threadCounts>
              <sampleCount>true</sampleCount>
            </value>
          </objProp>
          <stringProp name="filename">../logs/runs/TG54_50K_short_${__time(dd-MM-yyyy&apos;_T_&apos;HH:mm)}.jtl</stringProp>
        </ResultCollector>
        <hashTree/>
        <kg.apc.jmeter.reporters.LoadosophiaUploader guiclass="kg.apc.jmeter.reporters.LoadosophiaUploaderGui" testclass="kg.apc.jmeter.reporters.LoadosophiaUploader" testname="jp@gc - Loadosophia.org Uploader" enabled="false">
          <elementProp name="arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="classname">kg.apc.jmeter.reporters.LoadosophiaClient</stringProp>
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>false</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <hostname>true</hostname>
              <threadCounts>true</threadCounts>
              <sampleCount>true</sampleCount>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
          <stringProp name="project"></stringProp>
          <stringProp name="uploadToken">${loadsoftoken}</stringProp>
          <stringProp name="storeDir">../logs/Loadsof/</stringProp>
          <stringProp name="color">none</stringProp>
          <stringProp name="title">TG54 50K_short_${__time(dd-MM-yyyy&apos;_T_&apos;HH:mm)}</stringProp>
          <boolProp name="useOnline">true</boolProp>
        </kg.apc.jmeter.reporters.LoadosophiaUploader>
        <hashTree/>
      </hashTree>
      <kg.apc.jmeter.threads.UltimateThreadGroup guiclass="kg.apc.jmeter.threads.UltimateThreadGroupGui" testclass="kg.apc.jmeter.threads.UltimateThreadGroup" testname="TG 56 Sanomakoko 50K" enabled="false">
        <collectionProp name="ultimatethreadgroupdata">
          <collectionProp name="-1785850827">
            <stringProp name="1567">10</stringProp>
            <stringProp name="48">0</stringProp>
            <stringProp name="1567">10</stringProp>
            <stringProp name="50733">360</stringProp>
            <stringProp name="10">10</stringProp>
          </collectionProp>
          <collectionProp name="1363607350">
            <stringProp name="1567">10</stringProp>
            <stringProp name="1567">10</stringProp>
            <stringProp name="1598">20</stringProp>
            <stringProp name="50733">360</stringProp>
            <stringProp name="10">10</stringProp>
          </collectionProp>
          <collectionProp name="-819328809">
            <stringProp name="1567">10</stringProp>
            <stringProp name="1567">10</stringProp>
            <stringProp name="30">30</stringProp>
            <stringProp name="50733">360</stringProp>
            <stringProp name="10">10</stringProp>
          </collectionProp>
          <collectionProp name="1394245952">
            <stringProp name="1567">10</stringProp>
            <stringProp name="1567">10</stringProp>
            <stringProp name="1660">40</stringProp>
            <stringProp name="50733">360</stringProp>
            <stringProp name="10">10</stringProp>
          </collectionProp>
          <collectionProp name="1397618101">
            <stringProp name="1567">10</stringProp>
            <stringProp name="1567">10</stringProp>
            <stringProp name="1691">50</stringProp>
            <stringProp name="50733">360</stringProp>
            <stringProp name="10">10</stringProp>
          </collectionProp>
          <collectionProp name="1424137857">
            <stringProp name="1567">10</stringProp>
            <stringProp name="1567">10</stringProp>
            <stringProp name="1722">60</stringProp>
            <stringProp name="50733">360</stringProp>
            <stringProp name="10">10</stringProp>
          </collectionProp>
          <collectionProp name="1427510006">
            <stringProp name="1567">10</stringProp>
            <stringProp name="1567">10</stringProp>
            <stringProp name="1753">70</stringProp>
            <stringProp name="50733">360</stringProp>
            <stringProp name="10">10</stringProp>
          </collectionProp>
          <collectionProp name="1430882155">
            <stringProp name="1567">10</stringProp>
            <stringProp name="1567">10</stringProp>
            <stringProp name="1784">80</stringProp>
            <stringProp name="50733">360</stringProp>
            <stringProp name="10">10</stringProp>
          </collectionProp>
          <collectionProp name="1457401911">
            <stringProp name="1567">10</stringProp>
            <stringProp name="1567">10</stringProp>
            <stringProp name="1815">90</stringProp>
            <stringProp name="50733">360</stringProp>
            <stringProp name="10">10</stringProp>
          </collectionProp>
          <collectionProp name="-1579738013">
            <stringProp name="1567">10</stringProp>
            <stringProp name="1567">10</stringProp>
            <stringProp name="48625">100</stringProp>
            <stringProp name="50733">360</stringProp>
            <stringProp name="10">10</stringProp>
          </collectionProp>
        </collectionProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <intProp name="LoopController.loops">-1</intProp>
        </elementProp>
        <stringProp name="ThreadGroup.on_sample_error">stoptest</stringProp>
      </kg.apc.jmeter.threads.UltimateThreadGroup>
      <hashTree>
        <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP Request Defaults" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="Kysely" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">Kysely</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">${path}</stringProp>
          <stringProp name="HTTPSampler.concurrentPool">4</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </ConfigTestElement>
        <hashTree/>
        <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="HTTP Cookie Manager" enabled="false">
          <collectionProp name="CookieManager.cookies"/>
          <stringProp name="TestPlan.comments">Sanomankoko</stringProp>
          <boolProp name="CookieManager.clearEachIteration">false</boolProp>
          <stringProp name="CookieManager.implementation">org.apache.jmeter.protocol.http.control.HC4CookieHandler</stringProp>
        </CookieManager>
        <hashTree/>
        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="false">
          <collectionProp name="HeaderManager.headers">
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Content-Type</stringProp>
              <stringProp name="Header.value">text/xml; charset=utf-8</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">SOAPAction</stringProp>
              <stringProp name="Header.value"></stringProp>
            </elementProp>
          </collectionProp>
        </HeaderManager>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="TG56 50K" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; &#xd;
xmlns:xro=&quot;http://x-road.eu/xsd/xroad.xsd&quot; xmlns:iden=&quot;http://x-road.eu/xsd/identifiers&quot;&#xd;
xmlns:prod=&quot;http://test.x-road.fi/producer&quot;&gt;&#xd;
   &lt;soapenv:Header&gt;&#xd;
      &lt;xro:protocolVersion&gt;4.x&lt;/xro:protocolVersion&gt;&#xd;
      &lt;xro:id&gt;TEST7a&lt;/xro:id&gt;&#xd;
      &lt;xro:userId&gt;EE1234567890&lt;/xro:userId&gt;&#xd;
      &lt;xro:client iden:objectType=&quot;SUBSYSTEM&quot;&gt;&#xd;
         &lt;iden:xRoadInstance&gt;${Instance}&lt;/iden:xRoadInstance&gt;&#xd;
         &lt;iden:memberClass&gt;GOV&lt;/iden:memberClass&gt;&#xd;
         &lt;iden:memberCode&gt;${MemberCode}&lt;/iden:memberCode&gt;&#xd;
         &lt;iden:subsystemCode&gt;perftestclient&lt;/iden:subsystemCode&gt;&#xd;
      &lt;/xro:client&gt;&#xd;
      &lt;xro:service iden:objectType=&quot;SERVICE&quot;&gt;&#xd;
         &lt;iden:xRoadInstance&gt;${Instance}&lt;/iden:xRoadInstance&gt;&#xd;
         &lt;iden:memberClass&gt;GOV&lt;/iden:memberClass&gt;&#xd;
         &lt;iden:memberCode&gt;${MemberCode}&lt;/iden:memberCode&gt;&#xd;
         &lt;iden:subsystemCode&gt;perftestservice&lt;/iden:subsystemCode&gt;&#xd;
         &lt;iden:serviceCode&gt;testService&lt;/iden:serviceCode&gt;&#xd;
         &lt;iden:serviceVersion&gt;v1&lt;/iden:serviceVersion&gt;&#xd;
      &lt;/xro:service&gt;&#xd;
   &lt;/soapenv:Header&gt;&#xd;
   &lt;soapenv:Body&gt;&#xd;
      &lt;prod:testService&gt;&#xd;
             &lt;request&gt;&#xd;
                &lt;responseBodySize&gt;50000&lt;/responseBodySize&gt;&#xd;
                &lt;responseAttachmentSize&gt;0&lt;/responseAttachmentSize&gt;&#xd;
            &lt;/request&gt;&#xd;
     &lt;/prod:testService&gt;&#xd;
   &lt;/soapenv:Body&gt;&#xd;
&lt;/soapenv:Envelope&gt;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">test-service-0.0.2-SNAPSHOT/Endpoint</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">Sanomakoko 100K</stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="false">
          <stringProp name="ConstantTimer.delay">${timer}</stringProp>
        </ConstantTimer>
        <hashTree/>
        <ResultCollector guiclass="StatVisualizer" testclass="ResultCollector" testname="Aggregate Report" enabled="false">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>false</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <hostname>true</hostname>
              <threadCounts>true</threadCounts>
              <sampleCount>true</sampleCount>
            </value>
          </objProp>
          <stringProp name="filename">../logs/runs/TG56_50K.jtl</stringProp>
        </ResultCollector>
        <hashTree/>
        <kg.apc.jmeter.reporters.LoadosophiaUploader guiclass="kg.apc.jmeter.reporters.LoadosophiaUploaderGui" testclass="kg.apc.jmeter.reporters.LoadosophiaUploader" testname="jp@gc - Loadosophia.org Uploader" enabled="false">
          <elementProp name="arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="classname">kg.apc.jmeter.reporters.LoadosophiaClient</stringProp>
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>false</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <hostname>true</hostname>
              <threadCounts>true</threadCounts>
              <sampleCount>true</sampleCount>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
          <stringProp name="project">Palveluvayla - rinnakkaiset</stringProp>
          <stringProp name="uploadToken">${loadsoftoken}</stringProp>
          <stringProp name="storeDir">../logs/Loadsof/</stringProp>
          <stringProp name="color">none</stringProp>
          <stringProp name="title">TG56 50K</stringProp>
          <boolProp name="useOnline">true</boolProp>
        </kg.apc.jmeter.reporters.LoadosophiaUploader>
        <hashTree/>
      </hashTree>
      <kg.apc.jmeter.threads.SteppingThreadGroup guiclass="kg.apc.jmeter.threads.SteppingThreadGroupGui" testclass="kg.apc.jmeter.threads.SteppingThreadGroup" testname="TG 57 Sanomakoko 100k - Stepping" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">stoptest</stringProp>
        <stringProp name="ThreadGroup.num_threads">400</stringProp>
        <stringProp name="Threads initial delay">0</stringProp>
        <stringProp name="Start users count">1</stringProp>
        <stringProp name="Start users count burst">1</stringProp>
        <stringProp name="Start users period">3</stringProp>
        <stringProp name="Stop users count">5</stringProp>
        <stringProp name="Stop users period">10</stringProp>
        <stringProp name="flighttime">0</stringProp>
        <stringProp name="rampUp"></stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <intProp name="LoopController.loops">-1</intProp>
        </elementProp>
      </kg.apc.jmeter.threads.SteppingThreadGroup>
      <hashTree>
        <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP Request Defaults" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="Kysely" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">Kysely</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">${path}</stringProp>
          <stringProp name="HTTPSampler.concurrentPool">4</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </ConfigTestElement>
        <hashTree/>
        <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="HTTP Cookie Manager" enabled="false">
          <collectionProp name="CookieManager.cookies"/>
          <stringProp name="TestPlan.comments">Sanomankoko</stringProp>
          <boolProp name="CookieManager.clearEachIteration">false</boolProp>
          <stringProp name="CookieManager.implementation">org.apache.jmeter.protocol.http.control.HC4CookieHandler</stringProp>
        </CookieManager>
        <hashTree/>
        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="false">
          <collectionProp name="HeaderManager.headers">
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Content-Type</stringProp>
              <stringProp name="Header.value">text/xml; charset=utf-8</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">SOAPAction</stringProp>
              <stringProp name="Header.value"></stringProp>
            </elementProp>
          </collectionProp>
        </HeaderManager>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="TG57 100K" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; &#xd;
xmlns:xro=&quot;http://x-road.eu/xsd/xroad.xsd&quot; xmlns:iden=&quot;http://x-road.eu/xsd/identifiers&quot;&#xd;
xmlns:prod=&quot;http://test.x-road.fi/producer&quot;&gt;&#xd;
   &lt;soapenv:Header&gt;&#xd;
      &lt;xro:protocolVersion&gt;4.x&lt;/xro:protocolVersion&gt;&#xd;
      &lt;xro:id&gt;TEST7a&lt;/xro:id&gt;&#xd;
      &lt;xro:userId&gt;EE1234567890&lt;/xro:userId&gt;&#xd;
      &lt;xro:client iden:objectType=&quot;SUBSYSTEM&quot;&gt;&#xd;
         &lt;iden:xRoadInstance&gt;${Instance}&lt;/iden:xRoadInstance&gt;&#xd;
         &lt;iden:memberClass&gt;GOV&lt;/iden:memberClass&gt;&#xd;
         &lt;iden:memberCode&gt;${MemberCode}&lt;/iden:memberCode&gt;&#xd;
         &lt;iden:subsystemCode&gt;perftestclient&lt;/iden:subsystemCode&gt;&#xd;
      &lt;/xro:client&gt;&#xd;
      &lt;xro:service iden:objectType=&quot;SERVICE&quot;&gt;&#xd;
         &lt;iden:xRoadInstance&gt;${Instance}&lt;/iden:xRoadInstance&gt;&#xd;
         &lt;iden:memberClass&gt;GOV&lt;/iden:memberClass&gt;&#xd;
         &lt;iden:memberCode&gt;${MemberCode}&lt;/iden:memberCode&gt;&#xd;
         &lt;iden:subsystemCode&gt;perftestservice&lt;/iden:subsystemCode&gt;&#xd;
         &lt;iden:serviceCode&gt;testService&lt;/iden:serviceCode&gt;&#xd;
         &lt;iden:serviceVersion&gt;v1&lt;/iden:serviceVersion&gt;&#xd;
      &lt;/xro:service&gt;&#xd;
   &lt;/soapenv:Header&gt;&#xd;
   &lt;soapenv:Body&gt;&#xd;
      &lt;prod:testService&gt;&#xd;
             &lt;request&gt;&#xd;
                &lt;responseBodySize&gt;100000&lt;/responseBodySize&gt;&#xd;
                &lt;responseAttachmentSize&gt;0&lt;/responseAttachmentSize&gt;&#xd;
            &lt;/request&gt;&#xd;
     &lt;/prod:testService&gt;&#xd;
   &lt;/soapenv:Body&gt;&#xd;
&lt;/soapenv:Envelope&gt;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">test-service-0.0.2-SNAPSHOT/Endpoint</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">Sanomankoko 10K</stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="false">
          <stringProp name="ConstantTimer.delay">${timer}</stringProp>
        </ConstantTimer>
        <hashTree/>
        <ResultCollector guiclass="StatVisualizer" testclass="ResultCollector" testname="Aggregate Report" enabled="false">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>false</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <hostname>true</hostname>
              <threadCounts>true</threadCounts>
              <sampleCount>true</sampleCount>
            </value>
          </objProp>
          <stringProp name="filename">../logs/runs/TG57_100K_400users_${__time(dd-MM-yyyy&apos;_T_&apos;HH:mm)}.jtl</stringProp>
        </ResultCollector>
        <hashTree/>
        <kg.apc.jmeter.reporters.LoadosophiaUploader guiclass="kg.apc.jmeter.reporters.LoadosophiaUploaderGui" testclass="kg.apc.jmeter.reporters.LoadosophiaUploader" testname="jp@gc - Loadosophia.org Uploader" enabled="false">
          <elementProp name="arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="classname">kg.apc.jmeter.reporters.LoadosophiaClient</stringProp>
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>false</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <hostname>true</hostname>
              <threadCounts>true</threadCounts>
              <sampleCount>true</sampleCount>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
          <stringProp name="project"></stringProp>
          <stringProp name="uploadToken">${loadsoftoken}</stringProp>
          <stringProp name="storeDir">../logs/Loadsof/</stringProp>
          <stringProp name="color">none</stringProp>
          <stringProp name="title">TG57 100K_400_users_${__time(dd-MM-yyyy&apos;_T_&apos;HH:mm)}</stringProp>
          <boolProp name="useOnline">true</boolProp>
        </kg.apc.jmeter.reporters.LoadosophiaUploader>
        <hashTree/>
      </hashTree>
      <kg.apc.jmeter.threads.UltimateThreadGroup guiclass="kg.apc.jmeter.threads.UltimateThreadGroupGui" testclass="kg.apc.jmeter.threads.UltimateThreadGroup" testname="TG 58 Sanomakoko 100K" enabled="false">
        <collectionProp name="ultimatethreadgroupdata">
          <collectionProp name="-1785850827">
            <stringProp name="1567">10</stringProp>
            <stringProp name="48">0</stringProp>
            <stringProp name="1567">10</stringProp>
            <stringProp name="50733">360</stringProp>
            <stringProp name="10">10</stringProp>
          </collectionProp>
          <collectionProp name="1363607350">
            <stringProp name="1567">10</stringProp>
            <stringProp name="1567">10</stringProp>
            <stringProp name="1598">20</stringProp>
            <stringProp name="50733">360</stringProp>
            <stringProp name="10">10</stringProp>
          </collectionProp>
          <collectionProp name="-819328809">
            <stringProp name="1567">10</stringProp>
            <stringProp name="1567">10</stringProp>
            <stringProp name="30">30</stringProp>
            <stringProp name="50733">360</stringProp>
            <stringProp name="10">10</stringProp>
          </collectionProp>
          <collectionProp name="1394245952">
            <stringProp name="1567">10</stringProp>
            <stringProp name="1567">10</stringProp>
            <stringProp name="1660">40</stringProp>
            <stringProp name="50733">360</stringProp>
            <stringProp name="10">10</stringProp>
          </collectionProp>
          <collectionProp name="1397618101">
            <stringProp name="1567">10</stringProp>
            <stringProp name="1567">10</stringProp>
            <stringProp name="1691">50</stringProp>
            <stringProp name="50733">360</stringProp>
            <stringProp name="10">10</stringProp>
          </collectionProp>
          <collectionProp name="1424137857">
            <stringProp name="1567">10</stringProp>
            <stringProp name="1567">10</stringProp>
            <stringProp name="1722">60</stringProp>
            <stringProp name="50733">360</stringProp>
            <stringProp name="10">10</stringProp>
          </collectionProp>
          <collectionProp name="1427510006">
            <stringProp name="1567">10</stringProp>
            <stringProp name="1567">10</stringProp>
            <stringProp name="1753">70</stringProp>
            <stringProp name="50733">360</stringProp>
            <stringProp name="10">10</stringProp>
          </collectionProp>
          <collectionProp name="1430882155">
            <stringProp name="1567">10</stringProp>
            <stringProp name="1567">10</stringProp>
            <stringProp name="1784">80</stringProp>
            <stringProp name="50733">360</stringProp>
            <stringProp name="10">10</stringProp>
          </collectionProp>
          <collectionProp name="1457401911">
            <stringProp name="1567">10</stringProp>
            <stringProp name="1567">10</stringProp>
            <stringProp name="1815">90</stringProp>
            <stringProp name="50733">360</stringProp>
            <stringProp name="10">10</stringProp>
          </collectionProp>
          <collectionProp name="-1579738013">
            <stringProp name="1567">10</stringProp>
            <stringProp name="1567">10</stringProp>
            <stringProp name="48625">100</stringProp>
            <stringProp name="50733">360</stringProp>
            <stringProp name="10">10</stringProp>
          </collectionProp>
        </collectionProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <intProp name="LoopController.loops">-1</intProp>
        </elementProp>
        <stringProp name="ThreadGroup.on_sample_error">stoptest</stringProp>
      </kg.apc.jmeter.threads.UltimateThreadGroup>
      <hashTree>
        <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP Request Defaults" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="Kysely" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">Kysely</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">${path}</stringProp>
          <stringProp name="HTTPSampler.concurrentPool">4</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </ConfigTestElement>
        <hashTree/>
        <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="HTTP Cookie Manager" enabled="false">
          <collectionProp name="CookieManager.cookies"/>
          <stringProp name="TestPlan.comments">Sanomankoko</stringProp>
          <boolProp name="CookieManager.clearEachIteration">false</boolProp>
          <stringProp name="CookieManager.implementation">org.apache.jmeter.protocol.http.control.HC4CookieHandler</stringProp>
        </CookieManager>
        <hashTree/>
        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="false">
          <collectionProp name="HeaderManager.headers">
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Content-Type</stringProp>
              <stringProp name="Header.value">text/xml; charset=utf-8</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">SOAPAction</stringProp>
              <stringProp name="Header.value"></stringProp>
            </elementProp>
          </collectionProp>
        </HeaderManager>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="TG58 100K" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; &#xd;
xmlns:xro=&quot;http://x-road.eu/xsd/xroad.xsd&quot; xmlns:iden=&quot;http://x-road.eu/xsd/identifiers&quot;&#xd;
xmlns:prod=&quot;http://test.x-road.fi/producer&quot;&gt;&#xd;
   &lt;soapenv:Header&gt;&#xd;
      &lt;xro:protocolVersion&gt;4.x&lt;/xro:protocolVersion&gt;&#xd;
      &lt;xro:id&gt;TEST7a&lt;/xro:id&gt;&#xd;
      &lt;xro:userId&gt;EE1234567890&lt;/xro:userId&gt;&#xd;
      &lt;xro:client iden:objectType=&quot;SUBSYSTEM&quot;&gt;&#xd;
         &lt;iden:xRoadInstance&gt;${Instance}&lt;/iden:xRoadInstance&gt;&#xd;
         &lt;iden:memberClass&gt;GOV&lt;/iden:memberClass&gt;&#xd;
         &lt;iden:memberCode&gt;${MemberCode}&lt;/iden:memberCode&gt;&#xd;
         &lt;iden:subsystemCode&gt;perftestclient&lt;/iden:subsystemCode&gt;&#xd;
      &lt;/xro:client&gt;&#xd;
      &lt;xro:service iden:objectType=&quot;SERVICE&quot;&gt;&#xd;
         &lt;iden:xRoadInstance&gt;${Instance}&lt;/iden:xRoadInstance&gt;&#xd;
         &lt;iden:memberClass&gt;GOV&lt;/iden:memberClass&gt;&#xd;
         &lt;iden:memberCode&gt;${MemberCode}&lt;/iden:memberCode&gt;&#xd;
         &lt;iden:subsystemCode&gt;perftestservice&lt;/iden:subsystemCode&gt;&#xd;
         &lt;iden:serviceCode&gt;testService&lt;/iden:serviceCode&gt;&#xd;
         &lt;iden:serviceVersion&gt;v1&lt;/iden:serviceVersion&gt;&#xd;
      &lt;/xro:service&gt;&#xd;
   &lt;/soapenv:Header&gt;&#xd;
   &lt;soapenv:Body&gt;&#xd;
      &lt;prod:testService&gt;&#xd;
             &lt;request&gt;&#xd;
                &lt;responseBodySize&gt;100000&lt;/responseBodySize&gt;&#xd;
                &lt;responseAttachmentSize&gt;0&lt;/responseAttachmentSize&gt;&#xd;
            &lt;/request&gt;&#xd;
     &lt;/prod:testService&gt;&#xd;
   &lt;/soapenv:Body&gt;&#xd;
&lt;/soapenv:Envelope&gt;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">test-service-0.0.2-SNAPSHOT/Endpoint</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">Sanomakoko 100K</stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="false">
          <stringProp name="ConstantTimer.delay">${timer}</stringProp>
        </ConstantTimer>
        <hashTree/>
        <ResultCollector guiclass="StatVisualizer" testclass="ResultCollector" testname="Aggregate Report" enabled="false">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>false</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <hostname>true</hostname>
              <threadCounts>true</threadCounts>
              <sampleCount>true</sampleCount>
            </value>
          </objProp>
          <stringProp name="filename">../logs/runs/TG58_100K.jtl</stringProp>
        </ResultCollector>
        <hashTree/>
        <kg.apc.jmeter.reporters.LoadosophiaUploader guiclass="kg.apc.jmeter.reporters.LoadosophiaUploaderGui" testclass="kg.apc.jmeter.reporters.LoadosophiaUploader" testname="jp@gc - Loadosophia.org Uploader" enabled="false">
          <elementProp name="arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="classname">kg.apc.jmeter.reporters.LoadosophiaClient</stringProp>
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>false</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <hostname>true</hostname>
              <threadCounts>true</threadCounts>
              <sampleCount>true</sampleCount>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
          <stringProp name="project"></stringProp>
          <stringProp name="uploadToken">${loadsoftoken}</stringProp>
          <stringProp name="storeDir">../logs/Loadsof/</stringProp>
          <stringProp name="color">none</stringProp>
          <stringProp name="title">TG58 100K_${__time(dd-MM-yyyy&apos;_T_&apos;HH:mm)}</stringProp>
          <boolProp name="useOnline">true</boolProp>
        </kg.apc.jmeter.reporters.LoadosophiaUploader>
        <hashTree/>
      </hashTree>
      <kg.apc.jmeter.threads.SteppingThreadGroup guiclass="kg.apc.jmeter.threads.SteppingThreadGroupGui" testclass="kg.apc.jmeter.threads.SteppingThreadGroup" testname="TG 59 Sanomakoko 200k" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">stoptest</stringProp>
        <stringProp name="ThreadGroup.num_threads">200</stringProp>
        <stringProp name="Threads initial delay">0</stringProp>
        <stringProp name="Start users count">5</stringProp>
        <stringProp name="Start users count burst">5</stringProp>
        <stringProp name="Start users period">30</stringProp>
        <stringProp name="Stop users count">5</stringProp>
        <stringProp name="Stop users period">10</stringProp>
        <stringProp name="flighttime">360</stringProp>
        <stringProp name="rampUp"></stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <intProp name="LoopController.loops">-1</intProp>
        </elementProp>
      </kg.apc.jmeter.threads.SteppingThreadGroup>
      <hashTree>
        <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP Request Defaults" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="Kysely" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">Kysely</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">${path}</stringProp>
          <stringProp name="HTTPSampler.concurrentPool">4</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </ConfigTestElement>
        <hashTree/>
        <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="HTTP Cookie Manager" enabled="false">
          <collectionProp name="CookieManager.cookies"/>
          <stringProp name="TestPlan.comments">Sanomankoko</stringProp>
          <boolProp name="CookieManager.clearEachIteration">false</boolProp>
          <stringProp name="CookieManager.implementation">org.apache.jmeter.protocol.http.control.HC4CookieHandler</stringProp>
        </CookieManager>
        <hashTree/>
        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="false">
          <collectionProp name="HeaderManager.headers">
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Content-Type</stringProp>
              <stringProp name="Header.value">text/xml; charset=utf-8</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">SOAPAction</stringProp>
              <stringProp name="Header.value"></stringProp>
            </elementProp>
          </collectionProp>
        </HeaderManager>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="TG59 200K" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; &#xd;
xmlns:xro=&quot;http://x-road.eu/xsd/xroad.xsd&quot; xmlns:iden=&quot;http://x-road.eu/xsd/identifiers&quot;&#xd;
xmlns:prod=&quot;http://test.x-road.fi/producer&quot;&gt;&#xd;
   &lt;soapenv:Header&gt;&#xd;
      &lt;xro:protocolVersion&gt;4.x&lt;/xro:protocolVersion&gt;&#xd;
      &lt;xro:id&gt;TEST7a&lt;/xro:id&gt;&#xd;
      &lt;xro:userId&gt;EE1234567890&lt;/xro:userId&gt;&#xd;
      &lt;xro:client iden:objectType=&quot;SUBSYSTEM&quot;&gt;&#xd;
         &lt;iden:xRoadInstance&gt;${Instance}&lt;/iden:xRoadInstance&gt;&#xd;
         &lt;iden:memberClass&gt;GOV&lt;/iden:memberClass&gt;&#xd;
         &lt;iden:memberCode&gt;${MemberCode}&lt;/iden:memberCode&gt;&#xd;
         &lt;iden:subsystemCode&gt;perftestclient&lt;/iden:subsystemCode&gt;&#xd;
      &lt;/xro:client&gt;&#xd;
      &lt;xro:service iden:objectType=&quot;SERVICE&quot;&gt;&#xd;
         &lt;iden:xRoadInstance&gt;${Instance}&lt;/iden:xRoadInstance&gt;&#xd;
         &lt;iden:memberClass&gt;GOV&lt;/iden:memberClass&gt;&#xd;
         &lt;iden:memberCode&gt;${MemberCode}&lt;/iden:memberCode&gt;&#xd;
         &lt;iden:subsystemCode&gt;perftestservice&lt;/iden:subsystemCode&gt;&#xd;
         &lt;iden:serviceCode&gt;testService&lt;/iden:serviceCode&gt;&#xd;
         &lt;iden:serviceVersion&gt;v1&lt;/iden:serviceVersion&gt;&#xd;
      &lt;/xro:service&gt;&#xd;
   &lt;/soapenv:Header&gt;&#xd;
   &lt;soapenv:Body&gt;&#xd;
      &lt;prod:testService&gt;&#xd;
             &lt;request&gt;&#xd;
                &lt;responseBodySize&gt;200000&lt;/responseBodySize&gt;&#xd;
                &lt;responseAttachmentSize&gt;0&lt;/responseAttachmentSize&gt;&#xd;
            &lt;/request&gt;&#xd;
     &lt;/prod:testService&gt;&#xd;
   &lt;/soapenv:Body&gt;&#xd;
&lt;/soapenv:Envelope&gt;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">test-service-0.0.2-SNAPSHOT/Endpoint</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">Sanomankoko 10K</stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="false">
          <stringProp name="ConstantTimer.delay">${timer}</stringProp>
        </ConstantTimer>
        <hashTree/>
        <ResultCollector guiclass="StatVisualizer" testclass="ResultCollector" testname="Aggregate Report" enabled="false">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>false</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <hostname>true</hostname>
              <threadCounts>true</threadCounts>
              <sampleCount>true</sampleCount>
            </value>
          </objProp>
          <stringProp name="filename">../logs/runs/TG59_200K.jtl</stringProp>
        </ResultCollector>
        <hashTree/>
        <kg.apc.jmeter.reporters.LoadosophiaUploader guiclass="kg.apc.jmeter.reporters.LoadosophiaUploaderGui" testclass="kg.apc.jmeter.reporters.LoadosophiaUploader" testname="jp@gc - Loadosophia.org Uploader" enabled="false">
          <elementProp name="arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="classname">kg.apc.jmeter.reporters.LoadosophiaClient</stringProp>
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>false</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <hostname>true</hostname>
              <threadCounts>true</threadCounts>
              <sampleCount>true</sampleCount>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
          <stringProp name="project"></stringProp>
          <stringProp name="uploadToken">${loadsoftoken}</stringProp>
          <stringProp name="storeDir">../logs/Loadsof/</stringProp>
          <stringProp name="color">none</stringProp>
          <stringProp name="title">TG59 200K_${__time(dd-MM-yyyy&apos;_T_&apos;HH:mm)}</stringProp>
          <boolProp name="useOnline">true</boolProp>
        </kg.apc.jmeter.reporters.LoadosophiaUploader>
        <hashTree/>
      </hashTree>
      <kg.apc.jmeter.threads.SteppingThreadGroup guiclass="kg.apc.jmeter.threads.SteppingThreadGroupGui" testclass="kg.apc.jmeter.threads.SteppingThreadGroup" testname="TG 60 Sanomakoko 300k" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">stoptest</stringProp>
        <stringProp name="ThreadGroup.num_threads">200</stringProp>
        <stringProp name="Threads initial delay">0</stringProp>
        <stringProp name="Start users count">5</stringProp>
        <stringProp name="Start users count burst">5</stringProp>
        <stringProp name="Start users period">30</stringProp>
        <stringProp name="Stop users count">5</stringProp>
        <stringProp name="Stop users period">10</stringProp>
        <stringProp name="flighttime">360</stringProp>
        <stringProp name="rampUp"></stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <intProp name="LoopController.loops">-1</intProp>
        </elementProp>
      </kg.apc.jmeter.threads.SteppingThreadGroup>
      <hashTree>
        <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP Request Defaults" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="Kysely" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">Kysely</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">${path}</stringProp>
          <stringProp name="HTTPSampler.concurrentPool">4</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </ConfigTestElement>
        <hashTree/>
        <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="HTTP Cookie Manager" enabled="false">
          <collectionProp name="CookieManager.cookies"/>
          <stringProp name="TestPlan.comments">Sanomankoko</stringProp>
          <boolProp name="CookieManager.clearEachIteration">false</boolProp>
          <stringProp name="CookieManager.implementation">org.apache.jmeter.protocol.http.control.HC4CookieHandler</stringProp>
        </CookieManager>
        <hashTree/>
        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="false">
          <collectionProp name="HeaderManager.headers">
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Content-Type</stringProp>
              <stringProp name="Header.value">text/xml; charset=utf-8</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">SOAPAction</stringProp>
              <stringProp name="Header.value"></stringProp>
            </elementProp>
          </collectionProp>
        </HeaderManager>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="TG60 300K" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; &#xd;
xmlns:xro=&quot;http://x-road.eu/xsd/xroad.xsd&quot; xmlns:iden=&quot;http://x-road.eu/xsd/identifiers&quot;&#xd;
xmlns:prod=&quot;http://test.x-road.fi/producer&quot;&gt;&#xd;
   &lt;soapenv:Header&gt;&#xd;
      &lt;xro:protocolVersion&gt;4.x&lt;/xro:protocolVersion&gt;&#xd;
      &lt;xro:id&gt;TEST7a&lt;/xro:id&gt;&#xd;
      &lt;xro:userId&gt;EE1234567890&lt;/xro:userId&gt;&#xd;
      &lt;xro:client iden:objectType=&quot;SUBSYSTEM&quot;&gt;&#xd;
         &lt;iden:xRoadInstance&gt;${Instance}&lt;/iden:xRoadInstance&gt;&#xd;
         &lt;iden:memberClass&gt;GOV&lt;/iden:memberClass&gt;&#xd;
         &lt;iden:memberCode&gt;${MemberCode}&lt;/iden:memberCode&gt;&#xd;
         &lt;iden:subsystemCode&gt;perftestclient&lt;/iden:subsystemCode&gt;&#xd;
      &lt;/xro:client&gt;&#xd;
      &lt;xro:service iden:objectType=&quot;SERVICE&quot;&gt;&#xd;
         &lt;iden:xRoadInstance&gt;${Instance}&lt;/iden:xRoadInstance&gt;&#xd;
         &lt;iden:memberClass&gt;GOV&lt;/iden:memberClass&gt;&#xd;
         &lt;iden:memberCode&gt;${MemberCode}&lt;/iden:memberCode&gt;&#xd;
         &lt;iden:subsystemCode&gt;perftestservice&lt;/iden:subsystemCode&gt;&#xd;
         &lt;iden:serviceCode&gt;testService&lt;/iden:serviceCode&gt;&#xd;
         &lt;iden:serviceVersion&gt;v1&lt;/iden:serviceVersion&gt;&#xd;
      &lt;/xro:service&gt;&#xd;
   &lt;/soapenv:Header&gt;&#xd;
   &lt;soapenv:Body&gt;&#xd;
      &lt;prod:testService&gt;&#xd;
             &lt;request&gt;&#xd;
                &lt;responseBodySize&gt;300000&lt;/responseBodySize&gt;&#xd;
                &lt;responseAttachmentSize&gt;0&lt;/responseAttachmentSize&gt;&#xd;
            &lt;/request&gt;&#xd;
     &lt;/prod:testService&gt;&#xd;
   &lt;/soapenv:Body&gt;&#xd;
&lt;/soapenv:Envelope&gt;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">test-service-0.0.2-SNAPSHOT/Endpoint</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">Sanomankoko 10K</stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="false">
          <stringProp name="ConstantTimer.delay">${timer}</stringProp>
        </ConstantTimer>
        <hashTree/>
        <ResultCollector guiclass="StatVisualizer" testclass="ResultCollector" testname="Aggregate Report" enabled="false">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>false</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <hostname>true</hostname>
              <threadCounts>true</threadCounts>
              <sampleCount>true</sampleCount>
            </value>
          </objProp>
          <stringProp name="filename">../logs/runs/TG60_300K_${__time(dd-MM-yyyy&apos;_T_&apos;HH:mm)}.jtl</stringProp>
        </ResultCollector>
        <hashTree/>
        <kg.apc.jmeter.reporters.LoadosophiaUploader guiclass="kg.apc.jmeter.reporters.LoadosophiaUploaderGui" testclass="kg.apc.jmeter.reporters.LoadosophiaUploader" testname="jp@gc - Loadosophia.org Uploader" enabled="false">
          <elementProp name="arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="classname">kg.apc.jmeter.reporters.LoadosophiaClient</stringProp>
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>false</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <hostname>true</hostname>
              <threadCounts>true</threadCounts>
              <sampleCount>true</sampleCount>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
          <stringProp name="project"></stringProp>
          <stringProp name="uploadToken">${loadsoftoken}</stringProp>
          <stringProp name="storeDir">../logs/Loadsof/</stringProp>
          <stringProp name="color">none</stringProp>
          <stringProp name="title">TG60 300K_short_${__time(dd-MM-yyyy&apos;_T_&apos;HH:mm)}</stringProp>
          <boolProp name="useOnline">true</boolProp>
        </kg.apc.jmeter.reporters.LoadosophiaUploader>
        <hashTree/>
      </hashTree>
      <kg.apc.jmeter.threads.SteppingThreadGroup guiclass="kg.apc.jmeter.threads.SteppingThreadGroupGui" testclass="kg.apc.jmeter.threads.SteppingThreadGroup" testname="TG 61 Sanomakoko 400k" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">stoptest</stringProp>
        <stringProp name="ThreadGroup.num_threads">200</stringProp>
        <stringProp name="Threads initial delay">0</stringProp>
        <stringProp name="Start users count">5</stringProp>
        <stringProp name="Start users count burst">5</stringProp>
        <stringProp name="Start users period">30</stringProp>
        <stringProp name="Stop users count">5</stringProp>
        <stringProp name="Stop users period">10</stringProp>
        <stringProp name="flighttime">360</stringProp>
        <stringProp name="rampUp"></stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <intProp name="LoopController.loops">-1</intProp>
        </elementProp>
      </kg.apc.jmeter.threads.SteppingThreadGroup>
      <hashTree>
        <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP Request Defaults" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="Kysely" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">Kysely</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">${path}</stringProp>
          <stringProp name="HTTPSampler.concurrentPool">4</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </ConfigTestElement>
        <hashTree/>
        <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="HTTP Cookie Manager" enabled="false">
          <collectionProp name="CookieManager.cookies"/>
          <stringProp name="TestPlan.comments">Sanomankoko</stringProp>
          <boolProp name="CookieManager.clearEachIteration">false</boolProp>
          <stringProp name="CookieManager.implementation">org.apache.jmeter.protocol.http.control.HC4CookieHandler</stringProp>
        </CookieManager>
        <hashTree/>
        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="false">
          <collectionProp name="HeaderManager.headers">
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Content-Type</stringProp>
              <stringProp name="Header.value">text/xml; charset=utf-8</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">SOAPAction</stringProp>
              <stringProp name="Header.value"></stringProp>
            </elementProp>
          </collectionProp>
        </HeaderManager>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="TG61 400K" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; &#xd;
xmlns:xro=&quot;http://x-road.eu/xsd/xroad.xsd&quot; xmlns:iden=&quot;http://x-road.eu/xsd/identifiers&quot;&#xd;
xmlns:prod=&quot;http://test.x-road.fi/producer&quot;&gt;&#xd;
   &lt;soapenv:Header&gt;&#xd;
      &lt;xro:protocolVersion&gt;4.x&lt;/xro:protocolVersion&gt;&#xd;
      &lt;xro:id&gt;TEST7a&lt;/xro:id&gt;&#xd;
      &lt;xro:userId&gt;EE1234567890&lt;/xro:userId&gt;&#xd;
      &lt;xro:client iden:objectType=&quot;SUBSYSTEM&quot;&gt;&#xd;
         &lt;iden:xRoadInstance&gt;${Instance}&lt;/iden:xRoadInstance&gt;&#xd;
         &lt;iden:memberClass&gt;GOV&lt;/iden:memberClass&gt;&#xd;
         &lt;iden:memberCode&gt;${MemberCode}&lt;/iden:memberCode&gt;&#xd;
         &lt;iden:subsystemCode&gt;perftestclient&lt;/iden:subsystemCode&gt;&#xd;
      &lt;/xro:client&gt;&#xd;
      &lt;xro:service iden:objectType=&quot;SERVICE&quot;&gt;&#xd;
         &lt;iden:xRoadInstance&gt;${Instance}&lt;/iden:xRoadInstance&gt;&#xd;
         &lt;iden:memberClass&gt;GOV&lt;/iden:memberClass&gt;&#xd;
         &lt;iden:memberCode&gt;${MemberCode}&lt;/iden:memberCode&gt;&#xd;
         &lt;iden:subsystemCode&gt;perftestservice&lt;/iden:subsystemCode&gt;&#xd;
         &lt;iden:serviceCode&gt;testService&lt;/iden:serviceCode&gt;&#xd;
         &lt;iden:serviceVersion&gt;v1&lt;/iden:serviceVersion&gt;&#xd;
      &lt;/xro:service&gt;&#xd;
   &lt;/soapenv:Header&gt;&#xd;
   &lt;soapenv:Body&gt;&#xd;
      &lt;prod:testService&gt;&#xd;
             &lt;request&gt;&#xd;
                &lt;responseBodySize&gt;400000&lt;/responseBodySize&gt;&#xd;
                &lt;responseAttachmentSize&gt;0&lt;/responseAttachmentSize&gt;&#xd;
            &lt;/request&gt;&#xd;
     &lt;/prod:testService&gt;&#xd;
   &lt;/soapenv:Body&gt;&#xd;
&lt;/soapenv:Envelope&gt;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">test-service-0.0.2-SNAPSHOT/Endpoint</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">Sanomankoko 10K</stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="false">
          <stringProp name="ConstantTimer.delay">${timer}</stringProp>
        </ConstantTimer>
        <hashTree/>
        <ResultCollector guiclass="StatVisualizer" testclass="ResultCollector" testname="Aggregate Report" enabled="false">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>false</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <hostname>true</hostname>
              <threadCounts>true</threadCounts>
              <sampleCount>true</sampleCount>
            </value>
          </objProp>
          <stringProp name="filename">../logs/runs/TG61_400K_${__time(dd-MM-yyyy&apos;_T_&apos;HH:mm)}.jtl</stringProp>
        </ResultCollector>
        <hashTree/>
        <kg.apc.jmeter.reporters.LoadosophiaUploader guiclass="kg.apc.jmeter.reporters.LoadosophiaUploaderGui" testclass="kg.apc.jmeter.reporters.LoadosophiaUploader" testname="jp@gc - Loadosophia.org Uploader" enabled="false">
          <elementProp name="arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="classname">kg.apc.jmeter.reporters.LoadosophiaClient</stringProp>
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>false</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <hostname>true</hostname>
              <threadCounts>true</threadCounts>
              <sampleCount>true</sampleCount>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
          <stringProp name="project"></stringProp>
          <stringProp name="uploadToken">${loadsoftoken}</stringProp>
          <stringProp name="storeDir">../logs/Loadsof/</stringProp>
          <stringProp name="color">none</stringProp>
          <stringProp name="title">TG61 400K_${__time(dd-MM-yyyy&apos;_T_&apos;HH:mm)}</stringProp>
          <boolProp name="useOnline">true</boolProp>
        </kg.apc.jmeter.reporters.LoadosophiaUploader>
        <hashTree/>
      </hashTree>
      <kg.apc.jmeter.threads.SteppingThreadGroup guiclass="kg.apc.jmeter.threads.SteppingThreadGroupGui" testclass="kg.apc.jmeter.threads.SteppingThreadGroup" testname="TG 62 Sanomakoko 500k - Stepping" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">stoptest</stringProp>
        <stringProp name="ThreadGroup.num_threads">400</stringProp>
        <stringProp name="Threads initial delay">0</stringProp>
        <stringProp name="Start users count">1</stringProp>
        <stringProp name="Start users count burst">1</stringProp>
        <stringProp name="Start users period">3</stringProp>
        <stringProp name="Stop users count">5</stringProp>
        <stringProp name="Stop users period">10</stringProp>
        <stringProp name="flighttime">0</stringProp>
        <stringProp name="rampUp"></stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <intProp name="LoopController.loops">-1</intProp>
        </elementProp>
      </kg.apc.jmeter.threads.SteppingThreadGroup>
      <hashTree>
        <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP Request Defaults" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="Kysely" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">Kysely</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">${path}</stringProp>
          <stringProp name="HTTPSampler.concurrentPool">4</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </ConfigTestElement>
        <hashTree/>
        <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="HTTP Cookie Manager" enabled="false">
          <collectionProp name="CookieManager.cookies"/>
          <stringProp name="TestPlan.comments">Sanomankoko</stringProp>
          <boolProp name="CookieManager.clearEachIteration">false</boolProp>
          <stringProp name="CookieManager.implementation">org.apache.jmeter.protocol.http.control.HC4CookieHandler</stringProp>
        </CookieManager>
        <hashTree/>
        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="false">
          <collectionProp name="HeaderManager.headers">
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Content-Type</stringProp>
              <stringProp name="Header.value">text/xml; charset=utf-8</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">SOAPAction</stringProp>
              <stringProp name="Header.value"></stringProp>
            </elementProp>
          </collectionProp>
        </HeaderManager>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="TG62 500K" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; &#xd;
xmlns:xro=&quot;http://x-road.eu/xsd/xroad.xsd&quot; xmlns:iden=&quot;http://x-road.eu/xsd/identifiers&quot;&#xd;
xmlns:prod=&quot;http://test.x-road.fi/producer&quot;&gt;&#xd;
   &lt;soapenv:Header&gt;&#xd;
      &lt;xro:protocolVersion&gt;4.x&lt;/xro:protocolVersion&gt;&#xd;
      &lt;xro:id&gt;TEST7a&lt;/xro:id&gt;&#xd;
      &lt;xro:userId&gt;EE1234567890&lt;/xro:userId&gt;&#xd;
      &lt;xro:client iden:objectType=&quot;SUBSYSTEM&quot;&gt;&#xd;
         &lt;iden:xRoadInstance&gt;${Instance}&lt;/iden:xRoadInstance&gt;&#xd;
         &lt;iden:memberClass&gt;GOV&lt;/iden:memberClass&gt;&#xd;
         &lt;iden:memberCode&gt;${MemberCode}&lt;/iden:memberCode&gt;&#xd;
         &lt;iden:subsystemCode&gt;perftestclient&lt;/iden:subsystemCode&gt;&#xd;
      &lt;/xro:client&gt;&#xd;
      &lt;xro:service iden:objectType=&quot;SERVICE&quot;&gt;&#xd;
         &lt;iden:xRoadInstance&gt;${Instance}&lt;/iden:xRoadInstance&gt;&#xd;
         &lt;iden:memberClass&gt;GOV&lt;/iden:memberClass&gt;&#xd;
         &lt;iden:memberCode&gt;${MemberCode}&lt;/iden:memberCode&gt;&#xd;
         &lt;iden:subsystemCode&gt;perftestservice&lt;/iden:subsystemCode&gt;&#xd;
         &lt;iden:serviceCode&gt;testService&lt;/iden:serviceCode&gt;&#xd;
         &lt;iden:serviceVersion&gt;v1&lt;/iden:serviceVersion&gt;&#xd;
      &lt;/xro:service&gt;&#xd;
   &lt;/soapenv:Header&gt;&#xd;
   &lt;soapenv:Body&gt;&#xd;
      &lt;prod:testService&gt;&#xd;
             &lt;request&gt;&#xd;
                &lt;responseBodySize&gt;500000&lt;/responseBodySize&gt;&#xd;
                &lt;responseAttachmentSize&gt;0&lt;/responseAttachmentSize&gt;&#xd;
            &lt;/request&gt;&#xd;
     &lt;/prod:testService&gt;&#xd;
   &lt;/soapenv:Body&gt;&#xd;
&lt;/soapenv:Envelope&gt;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">test-service-0.0.2-SNAPSHOT/Endpoint</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">Sanomankoko 10K</stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="false">
          <stringProp name="ConstantTimer.delay">${timer}</stringProp>
        </ConstantTimer>
        <hashTree/>
        <ResultCollector guiclass="StatVisualizer" testclass="ResultCollector" testname="Aggregate Report" enabled="false">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>false</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <hostname>true</hostname>
              <threadCounts>true</threadCounts>
              <sampleCount>true</sampleCount>
            </value>
          </objProp>
          <stringProp name="filename">../logs/runs/TG62_500K_400K_${__time(dd-MM-yyyy&apos;_T_&apos;HH:mm)}.jtl</stringProp>
        </ResultCollector>
        <hashTree/>
        <kg.apc.jmeter.reporters.LoadosophiaUploader guiclass="kg.apc.jmeter.reporters.LoadosophiaUploaderGui" testclass="kg.apc.jmeter.reporters.LoadosophiaUploader" testname="jp@gc - Loadosophia.org Uploader" enabled="false">
          <elementProp name="arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="classname">kg.apc.jmeter.reporters.LoadosophiaClient</stringProp>
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>false</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <hostname>true</hostname>
              <threadCounts>true</threadCounts>
              <sampleCount>true</sampleCount>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
          <stringProp name="project"></stringProp>
          <stringProp name="uploadToken">${loadsoftoken}</stringProp>
          <stringProp name="storeDir">../logs/Loadsof/</stringProp>
          <stringProp name="color">none</stringProp>
          <stringProp name="title">TG62 500K_400 users_${__time(dd-MM-yyyy&apos;_T_&apos;HH:mm)}</stringProp>
          <boolProp name="useOnline">true</boolProp>
        </kg.apc.jmeter.reporters.LoadosophiaUploader>
        <hashTree/>
      </hashTree>
      <kg.apc.jmeter.threads.UltimateThreadGroup guiclass="kg.apc.jmeter.threads.UltimateThreadGroupGui" testclass="kg.apc.jmeter.threads.UltimateThreadGroup" testname="TG 63 Sanomakoko 500k" enabled="false">
        <collectionProp name="ultimatethreadgroupdata">
          <collectionProp name="723443929">
            <stringProp name="1567">10</stringProp>
            <stringProp name="0">0</stringProp>
            <stringProp name="1567">10</stringProp>
            <stringProp name="50733">360</stringProp>
            <stringProp name="10">10</stringProp>
          </collectionProp>
          <collectionProp name="1363607350">
            <stringProp name="1567">10</stringProp>
            <stringProp name="1567">10</stringProp>
            <stringProp name="1598">20</stringProp>
            <stringProp name="50733">360</stringProp>
            <stringProp name="10">10</stringProp>
          </collectionProp>
          <collectionProp name="1390127106">
            <stringProp name="1567">10</stringProp>
            <stringProp name="1567">10</stringProp>
            <stringProp name="1629">30</stringProp>
            <stringProp name="50733">360</stringProp>
            <stringProp name="10">10</stringProp>
          </collectionProp>
          <collectionProp name="1394245952">
            <stringProp name="1567">10</stringProp>
            <stringProp name="1567">10</stringProp>
            <stringProp name="1660">40</stringProp>
            <stringProp name="50733">360</stringProp>
            <stringProp name="10">10</stringProp>
          </collectionProp>
          <collectionProp name="1397618101">
            <stringProp name="1567">10</stringProp>
            <stringProp name="1567">10</stringProp>
            <stringProp name="1691">50</stringProp>
            <stringProp name="50733">360</stringProp>
            <stringProp name="10">10</stringProp>
          </collectionProp>
          <collectionProp name="1424137857">
            <stringProp name="1567">10</stringProp>
            <stringProp name="1567">10</stringProp>
            <stringProp name="1722">60</stringProp>
            <stringProp name="50733">360</stringProp>
            <stringProp name="10">10</stringProp>
          </collectionProp>
          <collectionProp name="1427510006">
            <stringProp name="1567">10</stringProp>
            <stringProp name="1567">10</stringProp>
            <stringProp name="1753">70</stringProp>
            <stringProp name="50733">360</stringProp>
            <stringProp name="10">10</stringProp>
          </collectionProp>
          <collectionProp name="1430882155">
            <stringProp name="1567">10</stringProp>
            <stringProp name="1567">10</stringProp>
            <stringProp name="1784">80</stringProp>
            <stringProp name="50733">360</stringProp>
            <stringProp name="10">10</stringProp>
          </collectionProp>
          <collectionProp name="1457401911">
            <stringProp name="1567">10</stringProp>
            <stringProp name="1567">10</stringProp>
            <stringProp name="1815">90</stringProp>
            <stringProp name="50733">360</stringProp>
            <stringProp name="10">10</stringProp>
          </collectionProp>
          <collectionProp name="-1579738013">
            <stringProp name="1567">10</stringProp>
            <stringProp name="1567">10</stringProp>
            <stringProp name="48625">100</stringProp>
            <stringProp name="50733">360</stringProp>
            <stringProp name="10">10</stringProp>
          </collectionProp>
          <collectionProp name="-1576365864">
            <stringProp name="1567">10</stringProp>
            <stringProp name="1567">10</stringProp>
            <stringProp name="48656">110</stringProp>
            <stringProp name="50733">360</stringProp>
            <stringProp name="10">10</stringProp>
          </collectionProp>
          <collectionProp name="-1572993715">
            <stringProp name="1567">10</stringProp>
            <stringProp name="1567">10</stringProp>
            <stringProp name="48687">120</stringProp>
            <stringProp name="50733">360</stringProp>
            <stringProp name="10">10</stringProp>
          </collectionProp>
          <collectionProp name="-1546473959">
            <stringProp name="1567">10</stringProp>
            <stringProp name="1567">10</stringProp>
            <stringProp name="48718">130</stringProp>
            <stringProp name="50733">360</stringProp>
            <stringProp name="10">10</stringProp>
          </collectionProp>
          <collectionProp name="-1543101810">
            <stringProp name="1567">10</stringProp>
            <stringProp name="1567">10</stringProp>
            <stringProp name="48749">140</stringProp>
            <stringProp name="50733">360</stringProp>
            <stringProp name="10">10</stringProp>
          </collectionProp>
          <collectionProp name="-1538982964">
            <stringProp name="1567">10</stringProp>
            <stringProp name="1567">10</stringProp>
            <stringProp name="48780">150</stringProp>
            <stringProp name="50733">360</stringProp>
            <stringProp name="10">10</stringProp>
          </collectionProp>
          <collectionProp name="-1512463208">
            <stringProp name="1567">10</stringProp>
            <stringProp name="1567">10</stringProp>
            <stringProp name="48811">160</stringProp>
            <stringProp name="50733">360</stringProp>
            <stringProp name="10">10</stringProp>
          </collectionProp>
          <collectionProp name="-1509091059">
            <stringProp name="1567">10</stringProp>
            <stringProp name="1567">10</stringProp>
            <stringProp name="48842">170</stringProp>
            <stringProp name="50733">360</stringProp>
            <stringProp name="10">10</stringProp>
          </collectionProp>
          <collectionProp name="-1505718910">
            <stringProp name="1567">10</stringProp>
            <stringProp name="1567">10</stringProp>
            <stringProp name="48873">180</stringProp>
            <stringProp name="50733">360</stringProp>
            <stringProp name="10">10</stringProp>
          </collectionProp>
          <collectionProp name="-1479199154">
            <stringProp name="1567">10</stringProp>
            <stringProp name="1567">10</stringProp>
            <stringProp name="48904">190</stringProp>
            <stringProp name="50733">360</stringProp>
            <stringProp name="10">10</stringProp>
          </collectionProp>
          <collectionProp name="-547057023">
            <stringProp name="1567">10</stringProp>
            <stringProp name="1567">10</stringProp>
            <stringProp name="49586">200</stringProp>
            <stringProp name="50733">360</stringProp>
            <stringProp name="10">10</stringProp>
          </collectionProp>
          <collectionProp name="-520537267">
            <stringProp name="1567">10</stringProp>
            <stringProp name="1567">10</stringProp>
            <stringProp name="49617">210</stringProp>
            <stringProp name="50733">360</stringProp>
            <stringProp name="10">10</stringProp>
          </collectionProp>
          <collectionProp name="-517165118">
            <stringProp name="1567">10</stringProp>
            <stringProp name="1567">10</stringProp>
            <stringProp name="49648">220</stringProp>
            <stringProp name="50733">360</stringProp>
            <stringProp name="10">10</stringProp>
          </collectionProp>
          <collectionProp name="-513792969">
            <stringProp name="1567">10</stringProp>
            <stringProp name="1567">10</stringProp>
            <stringProp name="49679">230</stringProp>
            <stringProp name="50733">360</stringProp>
            <stringProp name="10">10</stringProp>
          </collectionProp>
          <collectionProp name="-486526516">
            <stringProp name="1567">10</stringProp>
            <stringProp name="1567">10</stringProp>
            <stringProp name="49710">240</stringProp>
            <stringProp name="50733">360</stringProp>
            <stringProp name="10">10</stringProp>
          </collectionProp>
          <collectionProp name="-483154367">
            <stringProp name="1567">10</stringProp>
            <stringProp name="1567">10</stringProp>
            <stringProp name="49741">250</stringProp>
            <stringProp name="50733">360</stringProp>
            <stringProp name="10">10</stringProp>
          </collectionProp>
          <collectionProp name="-479782218">
            <stringProp name="1567">10</stringProp>
            <stringProp name="1567">10</stringProp>
            <stringProp name="49772">260</stringProp>
            <stringProp name="50733">360</stringProp>
            <stringProp name="10">10</stringProp>
          </collectionProp>
          <collectionProp name="-453262462">
            <stringProp name="1567">10</stringProp>
            <stringProp name="1567">10</stringProp>
            <stringProp name="49803">270</stringProp>
            <stringProp name="50733">360</stringProp>
            <stringProp name="10">10</stringProp>
          </collectionProp>
          <collectionProp name="-449890313">
            <stringProp name="1567">10</stringProp>
            <stringProp name="1567">10</stringProp>
            <stringProp name="49834">280</stringProp>
            <stringProp name="50733">360</stringProp>
            <stringProp name="10">10</stringProp>
          </collectionProp>
          <collectionProp name="-446518164">
            <stringProp name="1567">10</stringProp>
            <stringProp name="1567">10</stringProp>
            <stringProp name="49865">290</stringProp>
            <stringProp name="50733">360</stringProp>
            <stringProp name="10">10</stringProp>
          </collectionProp>
          <collectionProp name="1278785421">
            <stringProp name="1567">10</stringProp>
            <stringProp name="1567">10</stringProp>
            <stringProp name="50547">300</stringProp>
            <stringProp name="50733">360</stringProp>
            <stringProp name="10">10</stringProp>
          </collectionProp>
          <collectionProp name="1282157570">
            <stringProp name="1567">10</stringProp>
            <stringProp name="1567">10</stringProp>
            <stringProp name="50578">310</stringProp>
            <stringProp name="50733">360</stringProp>
            <stringProp name="10">10</stringProp>
          </collectionProp>
          <collectionProp name="1308677326">
            <stringProp name="1567">10</stringProp>
            <stringProp name="1567">10</stringProp>
            <stringProp name="50609">320</stringProp>
            <stringProp name="50733">360</stringProp>
            <stringProp name="10">10</stringProp>
          </collectionProp>
          <collectionProp name="1312796172">
            <stringProp name="1567">10</stringProp>
            <stringProp name="1567">10</stringProp>
            <stringProp name="50640">330</stringProp>
            <stringProp name="50733">360</stringProp>
            <stringProp name="10">10</stringProp>
          </collectionProp>
          <collectionProp name="1316168321">
            <stringProp name="1567">10</stringProp>
            <stringProp name="1567">10</stringProp>
            <stringProp name="50671">340</stringProp>
            <stringProp name="50733">360</stringProp>
            <stringProp name="10">10</stringProp>
          </collectionProp>
          <collectionProp name="1342688077">
            <stringProp name="1567">10</stringProp>
            <stringProp name="1567">10</stringProp>
            <stringProp name="50702">350</stringProp>
            <stringProp name="50733">360</stringProp>
            <stringProp name="10">10</stringProp>
          </collectionProp>
          <collectionProp name="1346060226">
            <stringProp name="1567">10</stringProp>
            <stringProp name="1567">10</stringProp>
            <stringProp name="50733">360</stringProp>
            <stringProp name="50733">360</stringProp>
            <stringProp name="10">10</stringProp>
          </collectionProp>
          <collectionProp name="1349432375">
            <stringProp name="1567">10</stringProp>
            <stringProp name="1567">10</stringProp>
            <stringProp name="50764">370</stringProp>
            <stringProp name="50733">360</stringProp>
            <stringProp name="10">10</stringProp>
          </collectionProp>
          <collectionProp name="1352804524">
            <stringProp name="1567">10</stringProp>
            <stringProp name="1567">10</stringProp>
            <stringProp name="50795">380</stringProp>
            <stringProp name="50733">360</stringProp>
            <stringProp name="10">10</stringProp>
          </collectionProp>
          <collectionProp name="1379324280">
            <stringProp name="1567">10</stringProp>
            <stringProp name="1567">10</stringProp>
            <stringProp name="50826">390</stringProp>
            <stringProp name="50733">360</stringProp>
            <stringProp name="10">10</stringProp>
          </collectionProp>
          <collectionProp name="-1960353278">
            <stringProp name="1567">10</stringProp>
            <stringProp name="1567">10</stringProp>
            <stringProp name="51508">400</stringProp>
            <stringProp name="50733">360</stringProp>
            <stringProp name="10">10</stringProp>
          </collectionProp>
          <collectionProp name="-1956981129">
            <stringProp name="1567">10</stringProp>
            <stringProp name="1567">10</stringProp>
            <stringProp name="51539">410</stringProp>
            <stringProp name="50733">360</stringProp>
            <stringProp name="10">10</stringProp>
          </collectionProp>
          <collectionProp name="-1952862283">
            <stringProp name="1567">10</stringProp>
            <stringProp name="1567">10</stringProp>
            <stringProp name="51570">420</stringProp>
            <stringProp name="50733">360</stringProp>
            <stringProp name="10">10</stringProp>
          </collectionProp>
          <collectionProp name="-1926342527">
            <stringProp name="1567">10</stringProp>
            <stringProp name="1567">10</stringProp>
            <stringProp name="51601">430</stringProp>
            <stringProp name="50733">360</stringProp>
            <stringProp name="10">10</stringProp>
          </collectionProp>
          <collectionProp name="-1922970378">
            <stringProp name="1567">10</stringProp>
            <stringProp name="1567">10</stringProp>
            <stringProp name="51632">440</stringProp>
            <stringProp name="50733">360</stringProp>
            <stringProp name="10">10</stringProp>
          </collectionProp>
          <collectionProp name="-1919598229">
            <stringProp name="1567">10</stringProp>
            <stringProp name="1567">10</stringProp>
            <stringProp name="51663">450</stringProp>
            <stringProp name="50733">360</stringProp>
            <stringProp name="10">10</stringProp>
          </collectionProp>
          <collectionProp name="-1916226080">
            <stringProp name="1567">10</stringProp>
            <stringProp name="1567">10</stringProp>
            <stringProp name="51694">460</stringProp>
            <stringProp name="50733">360</stringProp>
            <stringProp name="10">10</stringProp>
          </collectionProp>
          <collectionProp name="-1889706324">
            <stringProp name="1567">10</stringProp>
            <stringProp name="1567">10</stringProp>
            <stringProp name="51725">470</stringProp>
            <stringProp name="50733">360</stringProp>
            <stringProp name="10">10</stringProp>
          </collectionProp>
          <collectionProp name="-1886334175">
            <stringProp name="1567">10</stringProp>
            <stringProp name="1567">10</stringProp>
            <stringProp name="51756">480</stringProp>
            <stringProp name="50733">360</stringProp>
            <stringProp name="10">10</stringProp>
          </collectionProp>
          <collectionProp name="-1882962026">
            <stringProp name="1567">10</stringProp>
            <stringProp name="1567">10</stringProp>
            <stringProp name="51787">490</stringProp>
            <stringProp name="50733">360</stringProp>
            <stringProp name="10">10</stringProp>
          </collectionProp>
          <collectionProp name="-927672288">
            <stringProp name="1567">10</stringProp>
            <stringProp name="1567">10</stringProp>
            <stringProp name="52469">500</stringProp>
            <stringProp name="50733">360</stringProp>
            <stringProp name="10">10</stringProp>
          </collectionProp>
          <collectionProp name="-900405835">
            <stringProp name="1567">10</stringProp>
            <stringProp name="1567">10</stringProp>
            <stringProp name="52500">510</stringProp>
            <stringProp name="50733">360</stringProp>
            <stringProp name="10">10</stringProp>
          </collectionProp>
          <collectionProp name="-897033686">
            <stringProp name="1567">10</stringProp>
            <stringProp name="1567">10</stringProp>
            <stringProp name="52531">520</stringProp>
            <stringProp name="50733">360</stringProp>
            <stringProp name="10">10</stringProp>
          </collectionProp>
          <collectionProp name="-893661537">
            <stringProp name="1567">10</stringProp>
            <stringProp name="1567">10</stringProp>
            <stringProp name="52562">530</stringProp>
            <stringProp name="50733">360</stringProp>
            <stringProp name="10">10</stringProp>
          </collectionProp>
          <collectionProp name="-890289388">
            <stringProp name="1567">10</stringProp>
            <stringProp name="1567">10</stringProp>
            <stringProp name="52593">540</stringProp>
            <stringProp name="50733">360</stringProp>
            <stringProp name="10">10</stringProp>
          </collectionProp>
          <collectionProp name="-863769632">
            <stringProp name="1567">10</stringProp>
            <stringProp name="1567">10</stringProp>
            <stringProp name="52624">550</stringProp>
            <stringProp name="50733">360</stringProp>
            <stringProp name="10">10</stringProp>
          </collectionProp>
          <collectionProp name="-860397483">
            <stringProp name="1567">10</stringProp>
            <stringProp name="1567">10</stringProp>
            <stringProp name="52655">560</stringProp>
            <stringProp name="50733">360</stringProp>
            <stringProp name="10">10</stringProp>
          </collectionProp>
          <collectionProp name="-857025334">
            <stringProp name="1567">10</stringProp>
            <stringProp name="1567">10</stringProp>
            <stringProp name="52686">570</stringProp>
            <stringProp name="50733">360</stringProp>
            <stringProp name="10">10</stringProp>
          </collectionProp>
          <collectionProp name="-830505578">
            <stringProp name="1567">10</stringProp>
            <stringProp name="1567">10</stringProp>
            <stringProp name="52717">580</stringProp>
            <stringProp name="50733">360</stringProp>
            <stringProp name="10">10</stringProp>
          </collectionProp>
          <collectionProp name="-827133429">
            <stringProp name="1567">10</stringProp>
            <stringProp name="1567">10</stringProp>
            <stringProp name="52748">590</stringProp>
            <stringProp name="50733">360</stringProp>
            <stringProp name="10">10</stringProp>
          </collectionProp>
          <collectionProp name="128903006">
            <stringProp name="1567">10</stringProp>
            <stringProp name="1567">10</stringProp>
            <stringProp name="53430">600</stringProp>
            <stringProp name="50733">360</stringProp>
            <stringProp name="10">10</stringProp>
          </collectionProp>
        </collectionProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <intProp name="LoopController.loops">-1</intProp>
        </elementProp>
        <stringProp name="ThreadGroup.on_sample_error">stoptest</stringProp>
      </kg.apc.jmeter.threads.UltimateThreadGroup>
      <hashTree>
        <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP Request Defaults" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="Kysely" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">Kysely</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">${path}</stringProp>
          <stringProp name="HTTPSampler.concurrentPool">4</stringProp>
          <stringProp name="HTTPSampler.connect_timeout">${timeout}</stringProp>
          <stringProp name="HTTPSampler.response_timeout">${timeout}</stringProp>
        </ConfigTestElement>
        <hashTree/>
        <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="HTTP Cookie Manager" enabled="false">
          <collectionProp name="CookieManager.cookies"/>
          <stringProp name="TestPlan.comments">Sanomankoko</stringProp>
          <boolProp name="CookieManager.clearEachIteration">false</boolProp>
          <stringProp name="CookieManager.implementation">org.apache.jmeter.protocol.http.control.HC4CookieHandler</stringProp>
        </CookieManager>
        <hashTree/>
        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="false">
          <collectionProp name="HeaderManager.headers">
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Content-Type</stringProp>
              <stringProp name="Header.value">text/xml; charset=utf-8</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">SOAPAction</stringProp>
              <stringProp name="Header.value"></stringProp>
            </elementProp>
          </collectionProp>
        </HeaderManager>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="TG63 500K" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; &#xd;
xmlns:xro=&quot;http://x-road.eu/xsd/xroad.xsd&quot; xmlns:iden=&quot;http://x-road.eu/xsd/identifiers&quot;&#xd;
xmlns:prod=&quot;http://test.x-road.fi/producer&quot;&gt;&#xd;
   &lt;soapenv:Header&gt;&#xd;
      &lt;xro:protocolVersion&gt;4.x&lt;/xro:protocolVersion&gt;&#xd;
      &lt;xro:id&gt;TEST7a&lt;/xro:id&gt;&#xd;
      &lt;xro:userId&gt;EE1234567890&lt;/xro:userId&gt;&#xd;
      &lt;xro:client iden:objectType=&quot;SUBSYSTEM&quot;&gt;&#xd;
         &lt;iden:xRoadInstance&gt;${Instance}&lt;/iden:xRoadInstance&gt;&#xd;
         &lt;iden:memberClass&gt;GOV&lt;/iden:memberClass&gt;&#xd;
         &lt;iden:memberCode&gt;${MemberCode}&lt;/iden:memberCode&gt;&#xd;
         &lt;iden:subsystemCode&gt;perftestclient&lt;/iden:subsystemCode&gt;&#xd;
      &lt;/xro:client&gt;&#xd;
      &lt;xro:service iden:objectType=&quot;SERVICE&quot;&gt;&#xd;
         &lt;iden:xRoadInstance&gt;${Instance}&lt;/iden:xRoadInstance&gt;&#xd;
         &lt;iden:memberClass&gt;GOV&lt;/iden:memberClass&gt;&#xd;
         &lt;iden:memberCode&gt;${MemberCode}&lt;/iden:memberCode&gt;&#xd;
         &lt;iden:subsystemCode&gt;perftestservice&lt;/iden:subsystemCode&gt;&#xd;
         &lt;iden:serviceCode&gt;testService&lt;/iden:serviceCode&gt;&#xd;
         &lt;iden:serviceVersion&gt;v1&lt;/iden:serviceVersion&gt;&#xd;
      &lt;/xro:service&gt;&#xd;
   &lt;/soapenv:Header&gt;&#xd;
   &lt;soapenv:Body&gt;&#xd;
      &lt;prod:testService&gt;&#xd;
             &lt;request&gt;&#xd;
                &lt;responseBodySize&gt;500000&lt;/responseBodySize&gt;&#xd;
                &lt;responseAttachmentSize&gt;0&lt;/responseAttachmentSize&gt;&#xd;
            &lt;/request&gt;&#xd;
     &lt;/prod:testService&gt;&#xd;
   &lt;/soapenv:Body&gt;&#xd;
&lt;/soapenv:Envelope&gt;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">test-service-0.0.2-SNAPSHOT/Endpoint</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout">${timeout}</stringProp>
          <stringProp name="HTTPSampler.response_timeout">${timeout}</stringProp>
          <stringProp name="TestPlan.comments"> Sanomakoko 500K</stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="false">
          <stringProp name="ConstantTimer.delay">${timer}</stringProp>
        </ConstantTimer>
        <hashTree/>
        <ResultCollector guiclass="StatVisualizer" testclass="ResultCollector" testname="Aggregate Report" enabled="false">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>false</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <hostname>true</hostname>
              <threadCounts>true</threadCounts>
              <sampleCount>true</sampleCount>
            </value>
          </objProp>
          <stringProp name="filename">../logs/runs/TG63 500K_${__time(dd-MM-yyyy&apos;_T_&apos;HH:mm)}.jtl</stringProp>
        </ResultCollector>
        <hashTree/>
        <kg.apc.jmeter.reporters.LoadosophiaUploader guiclass="kg.apc.jmeter.reporters.LoadosophiaUploaderGui" testclass="kg.apc.jmeter.reporters.LoadosophiaUploader" testname="jp@gc - Loadosophia.org Uploader" enabled="false">
          <elementProp name="arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="classname">kg.apc.jmeter.reporters.LoadosophiaClient</stringProp>
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>false</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <hostname>true</hostname>
              <threadCounts>true</threadCounts>
              <sampleCount>true</sampleCount>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
          <stringProp name="project"></stringProp>
          <stringProp name="uploadToken">${loadsoftoken}</stringProp>
          <stringProp name="storeDir">../logs/Loadsof/</stringProp>
          <stringProp name="color">none</stringProp>
          <stringProp name="title">TG63 500K_${__time(dd-MM-yyyy&apos;_T_&apos;HH:mm)}</stringProp>
          <boolProp name="useOnline">true</boolProp>
        </kg.apc.jmeter.reporters.LoadosophiaUploader>
        <hashTree/>
      </hashTree>
      <kg.apc.jmeter.threads.SteppingThreadGroup guiclass="kg.apc.jmeter.threads.SteppingThreadGroupGui" testclass="kg.apc.jmeter.threads.SteppingThreadGroup" testname="TG 64 Sanomakoko 1M - Stepping" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">stoptest</stringProp>
        <stringProp name="ThreadGroup.num_threads">400</stringProp>
        <stringProp name="Threads initial delay">0</stringProp>
        <stringProp name="Start users count">1</stringProp>
        <stringProp name="Start users count burst">1</stringProp>
        <stringProp name="Start users period">3</stringProp>
        <stringProp name="Stop users count">5</stringProp>
        <stringProp name="Stop users period">10</stringProp>
        <stringProp name="flighttime">0</stringProp>
        <stringProp name="rampUp"></stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <intProp name="LoopController.loops">-1</intProp>
        </elementProp>
      </kg.apc.jmeter.threads.SteppingThreadGroup>
      <hashTree>
        <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP Request Defaults" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="Kysely" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">Kysely</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">${path}</stringProp>
          <stringProp name="HTTPSampler.concurrentPool">4</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </ConfigTestElement>
        <hashTree/>
        <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="HTTP Cookie Manager" enabled="false">
          <collectionProp name="CookieManager.cookies"/>
          <stringProp name="TestPlan.comments">Sanomankoko</stringProp>
          <boolProp name="CookieManager.clearEachIteration">false</boolProp>
          <stringProp name="CookieManager.implementation">org.apache.jmeter.protocol.http.control.HC4CookieHandler</stringProp>
        </CookieManager>
        <hashTree/>
        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="false">
          <collectionProp name="HeaderManager.headers">
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Content-Type</stringProp>
              <stringProp name="Header.value">text/xml; charset=utf-8</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">SOAPAction</stringProp>
              <stringProp name="Header.value"></stringProp>
            </elementProp>
          </collectionProp>
        </HeaderManager>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="TG64 1M" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; &#xd;
xmlns:xro=&quot;http://x-road.eu/xsd/xroad.xsd&quot; xmlns:iden=&quot;http://x-road.eu/xsd/identifiers&quot;&#xd;
xmlns:prod=&quot;http://test.x-road.fi/producer&quot;&gt;&#xd;
   &lt;soapenv:Header&gt;&#xd;
      &lt;xro:protocolVersion&gt;4.x&lt;/xro:protocolVersion&gt;&#xd;
      &lt;xro:id&gt;TEST7a&lt;/xro:id&gt;&#xd;
      &lt;xro:userId&gt;EE1234567890&lt;/xro:userId&gt;&#xd;
      &lt;xro:client iden:objectType=&quot;SUBSYSTEM&quot;&gt;&#xd;
         &lt;iden:xRoadInstance&gt;${Instance}&lt;/iden:xRoadInstance&gt;&#xd;
         &lt;iden:memberClass&gt;GOV&lt;/iden:memberClass&gt;&#xd;
         &lt;iden:memberCode&gt;${MemberCode}&lt;/iden:memberCode&gt;&#xd;
         &lt;iden:subsystemCode&gt;perftestclient&lt;/iden:subsystemCode&gt;&#xd;
      &lt;/xro:client&gt;&#xd;
      &lt;xro:service iden:objectType=&quot;SERVICE&quot;&gt;&#xd;
         &lt;iden:xRoadInstance&gt;${Instance}&lt;/iden:xRoadInstance&gt;&#xd;
         &lt;iden:memberClass&gt;GOV&lt;/iden:memberClass&gt;&#xd;
         &lt;iden:memberCode&gt;${MemberCode}&lt;/iden:memberCode&gt;&#xd;
         &lt;iden:subsystemCode&gt;perftestservice&lt;/iden:subsystemCode&gt;&#xd;
         &lt;iden:serviceCode&gt;testService&lt;/iden:serviceCode&gt;&#xd;
         &lt;iden:serviceVersion&gt;v1&lt;/iden:serviceVersion&gt;&#xd;
      &lt;/xro:service&gt;&#xd;
   &lt;/soapenv:Header&gt;&#xd;
   &lt;soapenv:Body&gt;&#xd;
      &lt;prod:testService&gt;&#xd;
             &lt;request&gt;&#xd;
                &lt;responseBodySize&gt;1000000&lt;/responseBodySize&gt;&#xd;
                &lt;responseAttachmentSize&gt;0&lt;/responseAttachmentSize&gt;&#xd;
            &lt;/request&gt;&#xd;
     &lt;/prod:testService&gt;&#xd;
   &lt;/soapenv:Body&gt;&#xd;
&lt;/soapenv:Envelope&gt;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">test-service-0.0.2-SNAPSHOT/Endpoint</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">Sanomankoko 10K</stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="false">
          <stringProp name="ConstantTimer.delay">${timer}</stringProp>
        </ConstantTimer>
        <hashTree/>
        <ResultCollector guiclass="StatVisualizer" testclass="ResultCollector" testname="Aggregate Report" enabled="false">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>false</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <hostname>true</hostname>
              <threadCounts>true</threadCounts>
              <sampleCount>true</sampleCount>
            </value>
          </objProp>
          <stringProp name="filename">../logs/runs/TG64_1M_400K_${__time(dd-MM-yyyy&apos;_T_&apos;HH:mm)}.jtl</stringProp>
        </ResultCollector>
        <hashTree/>
        <kg.apc.jmeter.reporters.LoadosophiaUploader guiclass="kg.apc.jmeter.reporters.LoadosophiaUploaderGui" testclass="kg.apc.jmeter.reporters.LoadosophiaUploader" testname="jp@gc - Loadosophia.org Uploader" enabled="false">
          <elementProp name="arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="classname">kg.apc.jmeter.reporters.LoadosophiaClient</stringProp>
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>false</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <hostname>true</hostname>
              <threadCounts>true</threadCounts>
              <sampleCount>true</sampleCount>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
          <stringProp name="project"></stringProp>
          <stringProp name="uploadToken">${loadsoftoken}</stringProp>
          <stringProp name="storeDir">../logs/Loadsof/</stringProp>
          <stringProp name="color">none</stringProp>
          <stringProp name="title">TG64 1M_400 users_${__time(dd-MM-yyyy&apos;_T_&apos;HH:mm)}</stringProp>
          <boolProp name="useOnline">true</boolProp>
        </kg.apc.jmeter.reporters.LoadosophiaUploader>
        <hashTree/>
      </hashTree>
      <kg.apc.jmeter.threads.UltimateThreadGroup guiclass="kg.apc.jmeter.threads.UltimateThreadGroupGui" testclass="kg.apc.jmeter.threads.UltimateThreadGroup" testname="TG 65 Sanomakoko 1M" enabled="false">
        <collectionProp name="ultimatethreadgroupdata">
          <collectionProp name="-1456120081">
            <stringProp name="1567">10</stringProp>
            <stringProp name="0">0</stringProp>
            <stringProp name="30">30</stringProp>
            <stringProp name="50733">360</stringProp>
            <stringProp name="10">10</stringProp>
          </collectionProp>
          <collectionProp name="1394245952">
            <stringProp name="1567">10</stringProp>
            <stringProp name="1567">10</stringProp>
            <stringProp name="1660">40</stringProp>
            <stringProp name="50733">360</stringProp>
            <stringProp name="10">10</stringProp>
          </collectionProp>
          <collectionProp name="1397618101">
            <stringProp name="1567">10</stringProp>
            <stringProp name="1567">10</stringProp>
            <stringProp name="1691">50</stringProp>
            <stringProp name="50733">360</stringProp>
            <stringProp name="10">10</stringProp>
          </collectionProp>
          <collectionProp name="1424137857">
            <stringProp name="1567">10</stringProp>
            <stringProp name="1567">10</stringProp>
            <stringProp name="1722">60</stringProp>
            <stringProp name="50733">360</stringProp>
            <stringProp name="10">10</stringProp>
          </collectionProp>
          <collectionProp name="1427510006">
            <stringProp name="1567">10</stringProp>
            <stringProp name="1567">10</stringProp>
            <stringProp name="1753">70</stringProp>
            <stringProp name="50733">360</stringProp>
            <stringProp name="10">10</stringProp>
          </collectionProp>
          <collectionProp name="1430882155">
            <stringProp name="1567">10</stringProp>
            <stringProp name="1567">10</stringProp>
            <stringProp name="1784">80</stringProp>
            <stringProp name="50733">360</stringProp>
            <stringProp name="10">10</stringProp>
          </collectionProp>
          <collectionProp name="1457401911">
            <stringProp name="1567">10</stringProp>
            <stringProp name="1567">10</stringProp>
            <stringProp name="1815">90</stringProp>
            <stringProp name="50733">360</stringProp>
            <stringProp name="10">10</stringProp>
          </collectionProp>
          <collectionProp name="-1579738013">
            <stringProp name="1567">10</stringProp>
            <stringProp name="1567">10</stringProp>
            <stringProp name="48625">100</stringProp>
            <stringProp name="50733">360</stringProp>
            <stringProp name="10">10</stringProp>
          </collectionProp>
          <collectionProp name="-1576365864">
            <stringProp name="1567">10</stringProp>
            <stringProp name="1567">10</stringProp>
            <stringProp name="48656">110</stringProp>
            <stringProp name="50733">360</stringProp>
            <stringProp name="10">10</stringProp>
          </collectionProp>
          <collectionProp name="-1572993715">
            <stringProp name="1567">10</stringProp>
            <stringProp name="1567">10</stringProp>
            <stringProp name="48687">120</stringProp>
            <stringProp name="50733">360</stringProp>
            <stringProp name="10">10</stringProp>
          </collectionProp>
          <collectionProp name="-1546473959">
            <stringProp name="1567">10</stringProp>
            <stringProp name="1567">10</stringProp>
            <stringProp name="48718">130</stringProp>
            <stringProp name="50733">360</stringProp>
            <stringProp name="10">10</stringProp>
          </collectionProp>
          <collectionProp name="-1543101810">
            <stringProp name="1567">10</stringProp>
            <stringProp name="1567">10</stringProp>
            <stringProp name="48749">140</stringProp>
            <stringProp name="50733">360</stringProp>
            <stringProp name="10">10</stringProp>
          </collectionProp>
          <collectionProp name="-1538982964">
            <stringProp name="1567">10</stringProp>
            <stringProp name="1567">10</stringProp>
            <stringProp name="48780">150</stringProp>
            <stringProp name="50733">360</stringProp>
            <stringProp name="10">10</stringProp>
          </collectionProp>
          <collectionProp name="-1512463208">
            <stringProp name="1567">10</stringProp>
            <stringProp name="1567">10</stringProp>
            <stringProp name="48811">160</stringProp>
            <stringProp name="50733">360</stringProp>
            <stringProp name="10">10</stringProp>
          </collectionProp>
          <collectionProp name="-1509091059">
            <stringProp name="1567">10</stringProp>
            <stringProp name="1567">10</stringProp>
            <stringProp name="48842">170</stringProp>
            <stringProp name="50733">360</stringProp>
            <stringProp name="10">10</stringProp>
          </collectionProp>
          <collectionProp name="-1505718910">
            <stringProp name="1567">10</stringProp>
            <stringProp name="1567">10</stringProp>
            <stringProp name="48873">180</stringProp>
            <stringProp name="50733">360</stringProp>
            <stringProp name="10">10</stringProp>
          </collectionProp>
          <collectionProp name="-1479199154">
            <stringProp name="1567">10</stringProp>
            <stringProp name="1567">10</stringProp>
            <stringProp name="48904">190</stringProp>
            <stringProp name="50733">360</stringProp>
            <stringProp name="10">10</stringProp>
          </collectionProp>
          <collectionProp name="-547057023">
            <stringProp name="1567">10</stringProp>
            <stringProp name="1567">10</stringProp>
            <stringProp name="49586">200</stringProp>
            <stringProp name="50733">360</stringProp>
            <stringProp name="10">10</stringProp>
          </collectionProp>
          <collectionProp name="-520537267">
            <stringProp name="1567">10</stringProp>
            <stringProp name="1567">10</stringProp>
            <stringProp name="49617">210</stringProp>
            <stringProp name="50733">360</stringProp>
            <stringProp name="10">10</stringProp>
          </collectionProp>
          <collectionProp name="-517165118">
            <stringProp name="1567">10</stringProp>
            <stringProp name="1567">10</stringProp>
            <stringProp name="49648">220</stringProp>
            <stringProp name="50733">360</stringProp>
            <stringProp name="10">10</stringProp>
          </collectionProp>
          <collectionProp name="-513792969">
            <stringProp name="1567">10</stringProp>
            <stringProp name="1567">10</stringProp>
            <stringProp name="49679">230</stringProp>
            <stringProp name="50733">360</stringProp>
            <stringProp name="10">10</stringProp>
          </collectionProp>
          <collectionProp name="-486526516">
            <stringProp name="1567">10</stringProp>
            <stringProp name="1567">10</stringProp>
            <stringProp name="49710">240</stringProp>
            <stringProp name="50733">360</stringProp>
            <stringProp name="10">10</stringProp>
          </collectionProp>
          <collectionProp name="-483154367">
            <stringProp name="1567">10</stringProp>
            <stringProp name="1567">10</stringProp>
            <stringProp name="49741">250</stringProp>
            <stringProp name="50733">360</stringProp>
            <stringProp name="10">10</stringProp>
          </collectionProp>
          <collectionProp name="-479782218">
            <stringProp name="1567">10</stringProp>
            <stringProp name="1567">10</stringProp>
            <stringProp name="49772">260</stringProp>
            <stringProp name="50733">360</stringProp>
            <stringProp name="10">10</stringProp>
          </collectionProp>
          <collectionProp name="-453262462">
            <stringProp name="1567">10</stringProp>
            <stringProp name="1567">10</stringProp>
            <stringProp name="49803">270</stringProp>
            <stringProp name="50733">360</stringProp>
            <stringProp name="10">10</stringProp>
          </collectionProp>
          <collectionProp name="-449890313">
            <stringProp name="1567">10</stringProp>
            <stringProp name="1567">10</stringProp>
            <stringProp name="49834">280</stringProp>
            <stringProp name="50733">360</stringProp>
            <stringProp name="10">10</stringProp>
          </collectionProp>
          <collectionProp name="-446518164">
            <stringProp name="1567">10</stringProp>
            <stringProp name="1567">10</stringProp>
            <stringProp name="49865">290</stringProp>
            <stringProp name="50733">360</stringProp>
            <stringProp name="10">10</stringProp>
          </collectionProp>
          <collectionProp name="1278785421">
            <stringProp name="1567">10</stringProp>
            <stringProp name="1567">10</stringProp>
            <stringProp name="50547">300</stringProp>
            <stringProp name="50733">360</stringProp>
            <stringProp name="10">10</stringProp>
          </collectionProp>
          <collectionProp name="1282157570">
            <stringProp name="1567">10</stringProp>
            <stringProp name="1567">10</stringProp>
            <stringProp name="50578">310</stringProp>
            <stringProp name="50733">360</stringProp>
            <stringProp name="10">10</stringProp>
          </collectionProp>
          <collectionProp name="1308677326">
            <stringProp name="1567">10</stringProp>
            <stringProp name="1567">10</stringProp>
            <stringProp name="50609">320</stringProp>
            <stringProp name="50733">360</stringProp>
            <stringProp name="10">10</stringProp>
          </collectionProp>
        </collectionProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <intProp name="LoopController.loops">-1</intProp>
        </elementProp>
        <stringProp name="ThreadGroup.on_sample_error">stoptest</stringProp>
      </kg.apc.jmeter.threads.UltimateThreadGroup>
      <hashTree>
        <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP Request Defaults" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="Kysely" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">Kysely</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">${path}</stringProp>
          <stringProp name="HTTPSampler.concurrentPool">4</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </ConfigTestElement>
        <hashTree/>
        <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="HTTP Cookie Manager" enabled="false">
          <collectionProp name="CookieManager.cookies"/>
          <stringProp name="TestPlan.comments">Sanomankoko</stringProp>
          <boolProp name="CookieManager.clearEachIteration">false</boolProp>
          <stringProp name="CookieManager.implementation">org.apache.jmeter.protocol.http.control.HC4CookieHandler</stringProp>
        </CookieManager>
        <hashTree/>
        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="false">
          <collectionProp name="HeaderManager.headers">
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Content-Type</stringProp>
              <stringProp name="Header.value">text/xml; charset=utf-8</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">SOAPAction</stringProp>
              <stringProp name="Header.value"></stringProp>
            </elementProp>
          </collectionProp>
        </HeaderManager>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="TG65 1M" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; &#xd;
xmlns:xro=&quot;http://x-road.eu/xsd/xroad.xsd&quot; xmlns:iden=&quot;http://x-road.eu/xsd/identifiers&quot;&#xd;
xmlns:prod=&quot;http://test.x-road.fi/producer&quot;&gt;&#xd;
   &lt;soapenv:Header&gt;&#xd;
      &lt;xro:protocolVersion&gt;4.x&lt;/xro:protocolVersion&gt;&#xd;
      &lt;xro:id&gt;TEST7a&lt;/xro:id&gt;&#xd;
      &lt;xro:userId&gt;EE1234567890&lt;/xro:userId&gt;&#xd;
      &lt;xro:client iden:objectType=&quot;SUBSYSTEM&quot;&gt;&#xd;
         &lt;iden:xRoadInstance&gt;${Instance}&lt;/iden:xRoadInstance&gt;&#xd;
         &lt;iden:memberClass&gt;GOV&lt;/iden:memberClass&gt;&#xd;
         &lt;iden:memberCode&gt;${MemberCode}&lt;/iden:memberCode&gt;&#xd;
         &lt;iden:subsystemCode&gt;perftestclient&lt;/iden:subsystemCode&gt;&#xd;
      &lt;/xro:client&gt;&#xd;
      &lt;xro:service iden:objectType=&quot;SERVICE&quot;&gt;&#xd;
         &lt;iden:xRoadInstance&gt;${Instance}&lt;/iden:xRoadInstance&gt;&#xd;
         &lt;iden:memberClass&gt;GOV&lt;/iden:memberClass&gt;&#xd;
         &lt;iden:memberCode&gt;${MemberCode}&lt;/iden:memberCode&gt;&#xd;
         &lt;iden:subsystemCode&gt;perftestservice&lt;/iden:subsystemCode&gt;&#xd;
         &lt;iden:serviceCode&gt;testService&lt;/iden:serviceCode&gt;&#xd;
         &lt;iden:serviceVersion&gt;v1&lt;/iden:serviceVersion&gt;&#xd;
      &lt;/xro:service&gt;&#xd;
   &lt;/soapenv:Header&gt;&#xd;
   &lt;soapenv:Body&gt;&#xd;
      &lt;prod:testService&gt;&#xd;
             &lt;request&gt;&#xd;
                &lt;responseBodySize&gt;1000000&lt;/responseBodySize&gt;&#xd;
                &lt;responseAttachmentSize&gt;0&lt;/responseAttachmentSize&gt;&#xd;
            &lt;/request&gt;&#xd;
     &lt;/prod:testService&gt;&#xd;
   &lt;/soapenv:Body&gt;&#xd;
&lt;/soapenv:Envelope&gt;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">test-service-0.0.2-SNAPSHOT/Endpoint</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">Sanomakoko 1M</stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="false">
          <stringProp name="ConstantTimer.delay">${timer}</stringProp>
        </ConstantTimer>
        <hashTree/>
        <ResultCollector guiclass="StatVisualizer" testclass="ResultCollector" testname="Aggregate Report" enabled="false">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>false</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <hostname>true</hostname>
              <threadCounts>true</threadCounts>
              <sampleCount>true</sampleCount>
            </value>
          </objProp>
          <stringProp name="filename">../logs/runs/TG65_1M_${__time(dd-MM-yyyy&apos;_T_&apos;HH:mm)}.jtl</stringProp>
        </ResultCollector>
        <hashTree/>
        <kg.apc.jmeter.reporters.LoadosophiaUploader guiclass="kg.apc.jmeter.reporters.LoadosophiaUploaderGui" testclass="kg.apc.jmeter.reporters.LoadosophiaUploader" testname="jp@gc - Loadosophia.org Uploader" enabled="false">
          <elementProp name="arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="classname">kg.apc.jmeter.reporters.LoadosophiaClient</stringProp>
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>false</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <hostname>true</hostname>
              <threadCounts>true</threadCounts>
              <sampleCount>true</sampleCount>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
          <stringProp name="project"></stringProp>
          <stringProp name="uploadToken">${loadsoftoken}</stringProp>
          <stringProp name="storeDir">../logs/Loadsof/</stringProp>
          <stringProp name="color">none</stringProp>
          <stringProp name="title">TG65_1M_${__time(dd-MM-yyyy&apos;_T_&apos;HH:mm)}</stringProp>
          <boolProp name="useOnline">true</boolProp>
        </kg.apc.jmeter.reporters.LoadosophiaUploader>
        <hashTree/>
      </hashTree>
      <kg.apc.jmeter.threads.SteppingThreadGroup guiclass="kg.apc.jmeter.threads.SteppingThreadGroupGui" testclass="kg.apc.jmeter.threads.SteppingThreadGroup" testname="TG 66 Sanomakoko 5M - Stepping" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <stringProp name="ThreadGroup.num_threads">400</stringProp>
        <stringProp name="Threads initial delay">0</stringProp>
        <stringProp name="Start users count">1</stringProp>
        <stringProp name="Start users count burst">1</stringProp>
        <stringProp name="Start users period">3</stringProp>
        <stringProp name="Stop users count">5</stringProp>
        <stringProp name="Stop users period">10</stringProp>
        <stringProp name="flighttime">0</stringProp>
        <stringProp name="rampUp"></stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <intProp name="LoopController.loops">-1</intProp>
        </elementProp>
      </kg.apc.jmeter.threads.SteppingThreadGroup>
      <hashTree>
        <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP Request Defaults" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="Kysely" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">Kysely</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">${path}</stringProp>
          <stringProp name="HTTPSampler.concurrentPool">4</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </ConfigTestElement>
        <hashTree/>
        <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="HTTP Cookie Manager" enabled="false">
          <collectionProp name="CookieManager.cookies"/>
          <stringProp name="TestPlan.comments">Sanomankoko</stringProp>
          <boolProp name="CookieManager.clearEachIteration">false</boolProp>
          <stringProp name="CookieManager.implementation">org.apache.jmeter.protocol.http.control.HC4CookieHandler</stringProp>
        </CookieManager>
        <hashTree/>
        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="false">
          <collectionProp name="HeaderManager.headers">
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Content-Type</stringProp>
              <stringProp name="Header.value">text/xml; charset=utf-8</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">SOAPAction</stringProp>
              <stringProp name="Header.value"></stringProp>
            </elementProp>
          </collectionProp>
        </HeaderManager>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="TG66 5M" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; &#xd;
xmlns:xro=&quot;http://x-road.eu/xsd/xroad.xsd&quot; xmlns:iden=&quot;http://x-road.eu/xsd/identifiers&quot;&#xd;
xmlns:prod=&quot;http://test.x-road.fi/producer&quot;&gt;&#xd;
   &lt;soapenv:Header&gt;&#xd;
      &lt;xro:protocolVersion&gt;4.x&lt;/xro:protocolVersion&gt;&#xd;
      &lt;xro:id&gt;TEST7a&lt;/xro:id&gt;&#xd;
      &lt;xro:userId&gt;EE1234567890&lt;/xro:userId&gt;&#xd;
      &lt;xro:client iden:objectType=&quot;SUBSYSTEM&quot;&gt;&#xd;
         &lt;iden:xRoadInstance&gt;${Instance}&lt;/iden:xRoadInstance&gt;&#xd;
         &lt;iden:memberClass&gt;GOV&lt;/iden:memberClass&gt;&#xd;
         &lt;iden:memberCode&gt;${MemberCode}&lt;/iden:memberCode&gt;&#xd;
         &lt;iden:subsystemCode&gt;perftestclient&lt;/iden:subsystemCode&gt;&#xd;
      &lt;/xro:client&gt;&#xd;
      &lt;xro:service iden:objectType=&quot;SERVICE&quot;&gt;&#xd;
         &lt;iden:xRoadInstance&gt;${Instance}&lt;/iden:xRoadInstance&gt;&#xd;
         &lt;iden:memberClass&gt;GOV&lt;/iden:memberClass&gt;&#xd;
         &lt;iden:memberCode&gt;${MemberCode}&lt;/iden:memberCode&gt;&#xd;
         &lt;iden:subsystemCode&gt;perftestservice&lt;/iden:subsystemCode&gt;&#xd;
         &lt;iden:serviceCode&gt;testService&lt;/iden:serviceCode&gt;&#xd;
         &lt;iden:serviceVersion&gt;v1&lt;/iden:serviceVersion&gt;&#xd;
      &lt;/xro:service&gt;&#xd;
   &lt;/soapenv:Header&gt;&#xd;
   &lt;soapenv:Body&gt;&#xd;
      &lt;prod:testService&gt;&#xd;
             &lt;request&gt;&#xd;
                &lt;responseBodySize&gt;5000000&lt;/responseBodySize&gt;&#xd;
                &lt;responseAttachmentSize&gt;0&lt;/responseAttachmentSize&gt;&#xd;
            &lt;/request&gt;&#xd;
     &lt;/prod:testService&gt;&#xd;
   &lt;/soapenv:Body&gt;&#xd;
&lt;/soapenv:Envelope&gt;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">test-service-0.0.2-SNAPSHOT/Endpoint</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">Sanomankoko 10K</stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="false">
          <stringProp name="ConstantTimer.delay">${timer}</stringProp>
        </ConstantTimer>
        <hashTree/>
        <ResultCollector guiclass="StatVisualizer" testclass="ResultCollector" testname="Aggregate Report" enabled="false">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>false</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <hostname>true</hostname>
              <threadCounts>true</threadCounts>
              <sampleCount>true</sampleCount>
            </value>
          </objProp>
          <stringProp name="filename">../logs/runs/TG66_5M_400K_${__time(dd-MM-yyyy&apos;_T_&apos;HH:mm)}.jtl</stringProp>
        </ResultCollector>
        <hashTree/>
        <kg.apc.jmeter.reporters.LoadosophiaUploader guiclass="kg.apc.jmeter.reporters.LoadosophiaUploaderGui" testclass="kg.apc.jmeter.reporters.LoadosophiaUploader" testname="jp@gc - Loadosophia.org Uploader" enabled="false">
          <elementProp name="arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="classname">kg.apc.jmeter.reporters.LoadosophiaClient</stringProp>
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>false</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <hostname>true</hostname>
              <threadCounts>true</threadCounts>
              <sampleCount>true</sampleCount>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
          <stringProp name="project"></stringProp>
          <stringProp name="uploadToken">${loadsoftoken}</stringProp>
          <stringProp name="storeDir">../logs/Loadsof/</stringProp>
          <stringProp name="color">none</stringProp>
          <stringProp name="title">TG66 5M_400 users_${__time(dd-MM-yyyy&apos;_T_&apos;HH:mm)}</stringProp>
          <boolProp name="useOnline">true</boolProp>
        </kg.apc.jmeter.reporters.LoadosophiaUploader>
        <hashTree/>
      </hashTree>
      <kg.apc.jmeter.threads.UltimateThreadGroup guiclass="kg.apc.jmeter.threads.UltimateThreadGroupGui" testclass="kg.apc.jmeter.threads.UltimateThreadGroup" testname="TG 67 Sanomakoko 5M" enabled="false">
        <collectionProp name="ultimatethreadgroupdata">
          <collectionProp name="-1456120081">
            <stringProp name="1567">10</stringProp>
            <stringProp name="0">0</stringProp>
            <stringProp name="30">30</stringProp>
            <stringProp name="50733">360</stringProp>
            <stringProp name="10">10</stringProp>
          </collectionProp>
          <collectionProp name="1397618101">
            <stringProp name="1567">10</stringProp>
            <stringProp name="1567">10</stringProp>
            <stringProp name="1691">50</stringProp>
            <stringProp name="50733">360</stringProp>
            <stringProp name="10">10</stringProp>
          </collectionProp>
          <collectionProp name="1427510006">
            <stringProp name="1567">10</stringProp>
            <stringProp name="1567">10</stringProp>
            <stringProp name="1753">70</stringProp>
            <stringProp name="50733">360</stringProp>
            <stringProp name="10">10</stringProp>
          </collectionProp>
          <collectionProp name="1457401911">
            <stringProp name="1567">10</stringProp>
            <stringProp name="1567">10</stringProp>
            <stringProp name="1815">90</stringProp>
            <stringProp name="50733">360</stringProp>
            <stringProp name="10">10</stringProp>
          </collectionProp>
          <collectionProp name="-1576365864">
            <stringProp name="1567">10</stringProp>
            <stringProp name="1567">10</stringProp>
            <stringProp name="48656">110</stringProp>
            <stringProp name="50733">360</stringProp>
            <stringProp name="10">10</stringProp>
          </collectionProp>
          <collectionProp name="-1546473959">
            <stringProp name="1567">10</stringProp>
            <stringProp name="1567">10</stringProp>
            <stringProp name="48718">130</stringProp>
            <stringProp name="50733">360</stringProp>
            <stringProp name="10">10</stringProp>
          </collectionProp>
          <collectionProp name="-1538982964">
            <stringProp name="1567">10</stringProp>
            <stringProp name="1567">10</stringProp>
            <stringProp name="48780">150</stringProp>
            <stringProp name="50733">360</stringProp>
            <stringProp name="10">10</stringProp>
          </collectionProp>
          <collectionProp name="-1509091059">
            <stringProp name="1567">10</stringProp>
            <stringProp name="1567">10</stringProp>
            <stringProp name="48842">170</stringProp>
            <stringProp name="50733">360</stringProp>
            <stringProp name="10">10</stringProp>
          </collectionProp>
          <collectionProp name="-1479199154">
            <stringProp name="1567">10</stringProp>
            <stringProp name="1567">10</stringProp>
            <stringProp name="48904">190</stringProp>
            <stringProp name="50733">360</stringProp>
            <stringProp name="10">10</stringProp>
          </collectionProp>
          <collectionProp name="-520537267">
            <stringProp name="1567">10</stringProp>
            <stringProp name="1567">10</stringProp>
            <stringProp name="49617">210</stringProp>
            <stringProp name="50733">360</stringProp>
            <stringProp name="10">10</stringProp>
          </collectionProp>
          <collectionProp name="-513792969">
            <stringProp name="1567">10</stringProp>
            <stringProp name="1567">10</stringProp>
            <stringProp name="49679">230</stringProp>
            <stringProp name="50733">360</stringProp>
            <stringProp name="10">10</stringProp>
          </collectionProp>
          <collectionProp name="-483154367">
            <stringProp name="1567">10</stringProp>
            <stringProp name="1567">10</stringProp>
            <stringProp name="49741">250</stringProp>
            <stringProp name="50733">360</stringProp>
            <stringProp name="10">10</stringProp>
          </collectionProp>
          <collectionProp name="-453262462">
            <stringProp name="1567">10</stringProp>
            <stringProp name="1567">10</stringProp>
            <stringProp name="49803">270</stringProp>
            <stringProp name="50733">360</stringProp>
            <stringProp name="10">10</stringProp>
          </collectionProp>
          <collectionProp name="-446518164">
            <stringProp name="1567">10</stringProp>
            <stringProp name="1567">10</stringProp>
            <stringProp name="49865">290</stringProp>
            <stringProp name="50733">360</stringProp>
            <stringProp name="10">10</stringProp>
          </collectionProp>
          <collectionProp name="1282157570">
            <stringProp name="1567">10</stringProp>
            <stringProp name="1567">10</stringProp>
            <stringProp name="50578">310</stringProp>
            <stringProp name="50733">360</stringProp>
            <stringProp name="10">10</stringProp>
          </collectionProp>
          <collectionProp name="1312796172">
            <stringProp name="1567">10</stringProp>
            <stringProp name="1567">10</stringProp>
            <stringProp name="50640">330</stringProp>
            <stringProp name="50733">360</stringProp>
            <stringProp name="10">10</stringProp>
          </collectionProp>
          <collectionProp name="1342688077">
            <stringProp name="1567">10</stringProp>
            <stringProp name="1567">10</stringProp>
            <stringProp name="50702">350</stringProp>
            <stringProp name="50733">360</stringProp>
            <stringProp name="10">10</stringProp>
          </collectionProp>
          <collectionProp name="1349432375">
            <stringProp name="1567">10</stringProp>
            <stringProp name="1567">10</stringProp>
            <stringProp name="50764">370</stringProp>
            <stringProp name="50733">360</stringProp>
            <stringProp name="10">10</stringProp>
          </collectionProp>
          <collectionProp name="1379324280">
            <stringProp name="1567">10</stringProp>
            <stringProp name="1567">10</stringProp>
            <stringProp name="50826">390</stringProp>
            <stringProp name="50733">360</stringProp>
            <stringProp name="10">10</stringProp>
          </collectionProp>
          <collectionProp name="-1956981129">
            <stringProp name="1567">10</stringProp>
            <stringProp name="1567">10</stringProp>
            <stringProp name="51539">410</stringProp>
            <stringProp name="50733">360</stringProp>
            <stringProp name="10">10</stringProp>
          </collectionProp>
          <collectionProp name="-1926342527">
            <stringProp name="1567">10</stringProp>
            <stringProp name="1567">10</stringProp>
            <stringProp name="51601">430</stringProp>
            <stringProp name="50733">360</stringProp>
            <stringProp name="10">10</stringProp>
          </collectionProp>
          <collectionProp name="-1919598229">
            <stringProp name="1567">10</stringProp>
            <stringProp name="1567">10</stringProp>
            <stringProp name="51663">450</stringProp>
            <stringProp name="50733">360</stringProp>
            <stringProp name="10">10</stringProp>
          </collectionProp>
          <collectionProp name="-1889706324">
            <stringProp name="1567">10</stringProp>
            <stringProp name="1567">10</stringProp>
            <stringProp name="51725">470</stringProp>
            <stringProp name="50733">360</stringProp>
            <stringProp name="10">10</stringProp>
          </collectionProp>
          <collectionProp name="-1882962026">
            <stringProp name="1567">10</stringProp>
            <stringProp name="1567">10</stringProp>
            <stringProp name="51787">490</stringProp>
            <stringProp name="50733">360</stringProp>
            <stringProp name="10">10</stringProp>
          </collectionProp>
          <collectionProp name="-900405835">
            <stringProp name="1567">10</stringProp>
            <stringProp name="1567">10</stringProp>
            <stringProp name="52500">510</stringProp>
            <stringProp name="50733">360</stringProp>
            <stringProp name="10">10</stringProp>
          </collectionProp>
          <collectionProp name="-893661537">
            <stringProp name="1567">10</stringProp>
            <stringProp name="1567">10</stringProp>
            <stringProp name="52562">530</stringProp>
            <stringProp name="50733">360</stringProp>
            <stringProp name="10">10</stringProp>
          </collectionProp>
          <collectionProp name="-863769632">
            <stringProp name="1567">10</stringProp>
            <stringProp name="1567">10</stringProp>
            <stringProp name="52624">550</stringProp>
            <stringProp name="50733">360</stringProp>
            <stringProp name="10">10</stringProp>
          </collectionProp>
          <collectionProp name="-857025334">
            <stringProp name="1567">10</stringProp>
            <stringProp name="1567">10</stringProp>
            <stringProp name="52686">570</stringProp>
            <stringProp name="50733">360</stringProp>
            <stringProp name="10">10</stringProp>
          </collectionProp>
          <collectionProp name="-827133429">
            <stringProp name="1567">10</stringProp>
            <stringProp name="1567">10</stringProp>
            <stringProp name="52748">590</stringProp>
            <stringProp name="50733">360</stringProp>
            <stringProp name="10">10</stringProp>
          </collectionProp>
          <collectionProp name="132275155">
            <stringProp name="1567">10</stringProp>
            <stringProp name="1567">10</stringProp>
            <stringProp name="53461">610</stringProp>
            <stringProp name="50733">360</stringProp>
            <stringProp name="10">10</stringProp>
          </collectionProp>
        </collectionProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <intProp name="LoopController.loops">-1</intProp>
        </elementProp>
        <stringProp name="ThreadGroup.on_sample_error">stoptest</stringProp>
      </kg.apc.jmeter.threads.UltimateThreadGroup>
      <hashTree>
        <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP Request Defaults" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="Kysely" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">Kysely</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">${path}</stringProp>
          <stringProp name="HTTPSampler.concurrentPool">4</stringProp>
          <stringProp name="HTTPSampler.connect_timeout">${timeout}</stringProp>
          <stringProp name="HTTPSampler.response_timeout">${timeout}</stringProp>
        </ConfigTestElement>
        <hashTree/>
        <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="HTTP Cookie Manager" enabled="false">
          <collectionProp name="CookieManager.cookies"/>
          <stringProp name="TestPlan.comments">Sanomankoko</stringProp>
          <boolProp name="CookieManager.clearEachIteration">false</boolProp>
          <stringProp name="CookieManager.implementation">org.apache.jmeter.protocol.http.control.HC4CookieHandler</stringProp>
        </CookieManager>
        <hashTree/>
        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="false">
          <collectionProp name="HeaderManager.headers">
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Content-Type</stringProp>
              <stringProp name="Header.value">text/xml; charset=utf-8</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">SOAPAction</stringProp>
              <stringProp name="Header.value"></stringProp>
            </elementProp>
          </collectionProp>
        </HeaderManager>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="TG67 5M" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; &#xd;
xmlns:xro=&quot;http://x-road.eu/xsd/xroad.xsd&quot; xmlns:iden=&quot;http://x-road.eu/xsd/identifiers&quot;&#xd;
xmlns:prod=&quot;http://test.x-road.fi/producer&quot;&gt;&#xd;
   &lt;soapenv:Header&gt;&#xd;
      &lt;xro:protocolVersion&gt;4.x&lt;/xro:protocolVersion&gt;&#xd;
      &lt;xro:id&gt;TEST7a&lt;/xro:id&gt;&#xd;
      &lt;xro:userId&gt;EE1234567890&lt;/xro:userId&gt;&#xd;
      &lt;xro:client iden:objectType=&quot;SUBSYSTEM&quot;&gt;&#xd;
         &lt;iden:xRoadInstance&gt;${Instance}&lt;/iden:xRoadInstance&gt;&#xd;
         &lt;iden:memberClass&gt;GOV&lt;/iden:memberClass&gt;&#xd;
         &lt;iden:memberCode&gt;${MemberCode}&lt;/iden:memberCode&gt;&#xd;
         &lt;iden:subsystemCode&gt;perftestclient&lt;/iden:subsystemCode&gt;&#xd;
      &lt;/xro:client&gt;&#xd;
      &lt;xro:service iden:objectType=&quot;SERVICE&quot;&gt;&#xd;
         &lt;iden:xRoadInstance&gt;${Instance}&lt;/iden:xRoadInstance&gt;&#xd;
         &lt;iden:memberClass&gt;GOV&lt;/iden:memberClass&gt;&#xd;
         &lt;iden:memberCode&gt;${MemberCode}&lt;/iden:memberCode&gt;&#xd;
         &lt;iden:subsystemCode&gt;perftestservice&lt;/iden:subsystemCode&gt;&#xd;
         &lt;iden:serviceCode&gt;testService&lt;/iden:serviceCode&gt;&#xd;
         &lt;iden:serviceVersion&gt;v1&lt;/iden:serviceVersion&gt;&#xd;
      &lt;/xro:service&gt;&#xd;
   &lt;/soapenv:Header&gt;&#xd;
   &lt;soapenv:Body&gt;&#xd;
      &lt;prod:testService&gt;&#xd;
             &lt;request&gt;&#xd;
                &lt;responseBodySize&gt;5000000&lt;/responseBodySize&gt;&#xd;
                &lt;responseAttachmentSize&gt;0&lt;/responseAttachmentSize&gt;&#xd;
            &lt;/request&gt;&#xd;
     &lt;/prod:testService&gt;&#xd;
   &lt;/soapenv:Body&gt;&#xd;
&lt;/soapenv:Envelope&gt;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">test-service-0.0.2-SNAPSHOT/Endpoint</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout">${timeout}</stringProp>
          <stringProp name="HTTPSampler.response_timeout">${timeout}</stringProp>
          <stringProp name="TestPlan.comments">Sanomakoko 5M</stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="false">
          <stringProp name="ConstantTimer.delay">${timer}</stringProp>
        </ConstantTimer>
        <hashTree/>
        <ResultCollector guiclass="StatVisualizer" testclass="ResultCollector" testname="Aggregate Report" enabled="false">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>false</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <hostname>true</hostname>
              <threadCounts>true</threadCounts>
              <sampleCount>true</sampleCount>
            </value>
          </objProp>
          <stringProp name="filename">../logs/runs/TG67_1_5M_${__time(dd-MM-yyyy&apos;_T_&apos;HH:mm)}.jtl</stringProp>
        </ResultCollector>
        <hashTree/>
        <kg.apc.jmeter.reporters.LoadosophiaUploader guiclass="kg.apc.jmeter.reporters.LoadosophiaUploaderGui" testclass="kg.apc.jmeter.reporters.LoadosophiaUploader" testname="jp@gc - Loadosophia.org Uploader" enabled="false">
          <elementProp name="arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="classname">kg.apc.jmeter.reporters.LoadosophiaClient</stringProp>
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>false</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <hostname>true</hostname>
              <threadCounts>true</threadCounts>
              <sampleCount>true</sampleCount>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
          <stringProp name="project"></stringProp>
          <stringProp name="uploadToken">${loadsoftoken}</stringProp>
          <stringProp name="storeDir">../logs/Loadsof/</stringProp>
          <stringProp name="color">none</stringProp>
          <stringProp name="title">TG67 5M_${__time(dd-MM-yyyy&apos;_T_&apos;HH:mm)}</stringProp>
          <boolProp name="useOnline">true</boolProp>
        </kg.apc.jmeter.reporters.LoadosophiaUploader>
        <hashTree/>
      </hashTree>
      <kg.apc.jmeter.threads.UltimateThreadGroup guiclass="kg.apc.jmeter.threads.UltimateThreadGroupGui" testclass="kg.apc.jmeter.threads.UltimateThreadGroup" testname="TG 68 Sanomakoko 5M" enabled="false">
        <collectionProp name="ultimatethreadgroupdata">
          <collectionProp name="-1456120081">
            <stringProp name="1567">10</stringProp>
            <stringProp name="0">0</stringProp>
            <stringProp name="30">30</stringProp>
            <stringProp name="50733">360</stringProp>
            <stringProp name="10">10</stringProp>
          </collectionProp>
          <collectionProp name="1394245952">
            <stringProp name="1567">10</stringProp>
            <stringProp name="1567">10</stringProp>
            <stringProp name="1660">40</stringProp>
            <stringProp name="50733">360</stringProp>
            <stringProp name="10">10</stringProp>
          </collectionProp>
          <collectionProp name="1397618101">
            <stringProp name="1567">10</stringProp>
            <stringProp name="1567">10</stringProp>
            <stringProp name="1691">50</stringProp>
            <stringProp name="50733">360</stringProp>
            <stringProp name="10">10</stringProp>
          </collectionProp>
          <collectionProp name="1424137857">
            <stringProp name="1567">10</stringProp>
            <stringProp name="1567">10</stringProp>
            <stringProp name="1722">60</stringProp>
            <stringProp name="50733">360</stringProp>
            <stringProp name="10">10</stringProp>
          </collectionProp>
          <collectionProp name="1427510006">
            <stringProp name="1567">10</stringProp>
            <stringProp name="1567">10</stringProp>
            <stringProp name="1753">70</stringProp>
            <stringProp name="50733">360</stringProp>
            <stringProp name="10">10</stringProp>
          </collectionProp>
          <collectionProp name="1430882155">
            <stringProp name="1567">10</stringProp>
            <stringProp name="1567">10</stringProp>
            <stringProp name="1784">80</stringProp>
            <stringProp name="50733">360</stringProp>
            <stringProp name="10">10</stringProp>
          </collectionProp>
          <collectionProp name="1457401911">
            <stringProp name="1567">10</stringProp>
            <stringProp name="1567">10</stringProp>
            <stringProp name="1815">90</stringProp>
            <stringProp name="50733">360</stringProp>
            <stringProp name="10">10</stringProp>
          </collectionProp>
          <collectionProp name="-1579738013">
            <stringProp name="1567">10</stringProp>
            <stringProp name="1567">10</stringProp>
            <stringProp name="48625">100</stringProp>
            <stringProp name="50733">360</stringProp>
            <stringProp name="10">10</stringProp>
          </collectionProp>
          <collectionProp name="-1576365864">
            <stringProp name="1567">10</stringProp>
            <stringProp name="1567">10</stringProp>
            <stringProp name="48656">110</stringProp>
            <stringProp name="50733">360</stringProp>
            <stringProp name="10">10</stringProp>
          </collectionProp>
          <collectionProp name="-1572993715">
            <stringProp name="1567">10</stringProp>
            <stringProp name="1567">10</stringProp>
            <stringProp name="48687">120</stringProp>
            <stringProp name="50733">360</stringProp>
            <stringProp name="10">10</stringProp>
          </collectionProp>
          <collectionProp name="-1546473959">
            <stringProp name="1567">10</stringProp>
            <stringProp name="1567">10</stringProp>
            <stringProp name="48718">130</stringProp>
            <stringProp name="50733">360</stringProp>
            <stringProp name="10">10</stringProp>
          </collectionProp>
          <collectionProp name="-1543101810">
            <stringProp name="1567">10</stringProp>
            <stringProp name="1567">10</stringProp>
            <stringProp name="48749">140</stringProp>
            <stringProp name="50733">360</stringProp>
            <stringProp name="10">10</stringProp>
          </collectionProp>
          <collectionProp name="-1538982964">
            <stringProp name="1567">10</stringProp>
            <stringProp name="1567">10</stringProp>
            <stringProp name="48780">150</stringProp>
            <stringProp name="50733">360</stringProp>
            <stringProp name="10">10</stringProp>
          </collectionProp>
          <collectionProp name="-1512463208">
            <stringProp name="1567">10</stringProp>
            <stringProp name="1567">10</stringProp>
            <stringProp name="48811">160</stringProp>
            <stringProp name="50733">360</stringProp>
            <stringProp name="10">10</stringProp>
          </collectionProp>
          <collectionProp name="-1509091059">
            <stringProp name="1567">10</stringProp>
            <stringProp name="1567">10</stringProp>
            <stringProp name="48842">170</stringProp>
            <stringProp name="50733">360</stringProp>
            <stringProp name="10">10</stringProp>
          </collectionProp>
          <collectionProp name="-1505718910">
            <stringProp name="1567">10</stringProp>
            <stringProp name="1567">10</stringProp>
            <stringProp name="48873">180</stringProp>
            <stringProp name="50733">360</stringProp>
            <stringProp name="10">10</stringProp>
          </collectionProp>
          <collectionProp name="-1479199154">
            <stringProp name="1567">10</stringProp>
            <stringProp name="1567">10</stringProp>
            <stringProp name="48904">190</stringProp>
            <stringProp name="50733">360</stringProp>
            <stringProp name="10">10</stringProp>
          </collectionProp>
          <collectionProp name="-547057023">
            <stringProp name="1567">10</stringProp>
            <stringProp name="1567">10</stringProp>
            <stringProp name="49586">200</stringProp>
            <stringProp name="50733">360</stringProp>
            <stringProp name="10">10</stringProp>
          </collectionProp>
          <collectionProp name="-520537267">
            <stringProp name="1567">10</stringProp>
            <stringProp name="1567">10</stringProp>
            <stringProp name="49617">210</stringProp>
            <stringProp name="50733">360</stringProp>
            <stringProp name="10">10</stringProp>
          </collectionProp>
          <collectionProp name="-517165118">
            <stringProp name="1567">10</stringProp>
            <stringProp name="1567">10</stringProp>
            <stringProp name="49648">220</stringProp>
            <stringProp name="50733">360</stringProp>
            <stringProp name="10">10</stringProp>
          </collectionProp>
          <collectionProp name="-513792969">
            <stringProp name="1567">10</stringProp>
            <stringProp name="1567">10</stringProp>
            <stringProp name="49679">230</stringProp>
            <stringProp name="50733">360</stringProp>
            <stringProp name="10">10</stringProp>
          </collectionProp>
          <collectionProp name="-486526516">
            <stringProp name="1567">10</stringProp>
            <stringProp name="1567">10</stringProp>
            <stringProp name="49710">240</stringProp>
            <stringProp name="50733">360</stringProp>
            <stringProp name="10">10</stringProp>
          </collectionProp>
          <collectionProp name="-483154367">
            <stringProp name="1567">10</stringProp>
            <stringProp name="1567">10</stringProp>
            <stringProp name="49741">250</stringProp>
            <stringProp name="50733">360</stringProp>
            <stringProp name="10">10</stringProp>
          </collectionProp>
          <collectionProp name="-479782218">
            <stringProp name="1567">10</stringProp>
            <stringProp name="1567">10</stringProp>
            <stringProp name="49772">260</stringProp>
            <stringProp name="50733">360</stringProp>
            <stringProp name="10">10</stringProp>
          </collectionProp>
          <collectionProp name="-453262462">
            <stringProp name="1567">10</stringProp>
            <stringProp name="1567">10</stringProp>
            <stringProp name="49803">270</stringProp>
            <stringProp name="50733">360</stringProp>
            <stringProp name="10">10</stringProp>
          </collectionProp>
          <collectionProp name="-449890313">
            <stringProp name="1567">10</stringProp>
            <stringProp name="1567">10</stringProp>
            <stringProp name="49834">280</stringProp>
            <stringProp name="50733">360</stringProp>
            <stringProp name="10">10</stringProp>
          </collectionProp>
          <collectionProp name="-446518164">
            <stringProp name="1567">10</stringProp>
            <stringProp name="1567">10</stringProp>
            <stringProp name="49865">290</stringProp>
            <stringProp name="50733">360</stringProp>
            <stringProp name="10">10</stringProp>
          </collectionProp>
          <collectionProp name="1278785421">
            <stringProp name="1567">10</stringProp>
            <stringProp name="1567">10</stringProp>
            <stringProp name="50547">300</stringProp>
            <stringProp name="50733">360</stringProp>
            <stringProp name="10">10</stringProp>
          </collectionProp>
          <collectionProp name="1282157570">
            <stringProp name="1567">10</stringProp>
            <stringProp name="1567">10</stringProp>
            <stringProp name="50578">310</stringProp>
            <stringProp name="50733">360</stringProp>
            <stringProp name="10">10</stringProp>
          </collectionProp>
          <collectionProp name="1308677326">
            <stringProp name="1567">10</stringProp>
            <stringProp name="1567">10</stringProp>
            <stringProp name="50609">320</stringProp>
            <stringProp name="50733">360</stringProp>
            <stringProp name="10">10</stringProp>
          </collectionProp>
        </collectionProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <intProp name="LoopController.loops">-1</intProp>
        </elementProp>
        <stringProp name="ThreadGroup.on_sample_error">stoptest</stringProp>
      </kg.apc.jmeter.threads.UltimateThreadGroup>
      <hashTree>
        <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP Request Defaults" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="Kysely" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">Kysely</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">${path}</stringProp>
          <stringProp name="HTTPSampler.concurrentPool">4</stringProp>
          <stringProp name="HTTPSampler.connect_timeout">${timeout}</stringProp>
          <stringProp name="HTTPSampler.response_timeout">${timeout}</stringProp>
        </ConfigTestElement>
        <hashTree/>
        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="false">
          <collectionProp name="HeaderManager.headers">
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Content-Type</stringProp>
              <stringProp name="Header.value">text/xml; charset=utf-8</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">SOAPAction</stringProp>
              <stringProp name="Header.value"></stringProp>
            </elementProp>
          </collectionProp>
        </HeaderManager>
        <hashTree/>
        <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="HTTP Cookie Manager" enabled="false">
          <collectionProp name="CookieManager.cookies"/>
          <stringProp name="TestPlan.comments">Sanomankoko</stringProp>
          <boolProp name="CookieManager.clearEachIteration">false</boolProp>
          <stringProp name="CookieManager.implementation">org.apache.jmeter.protocol.http.control.HC4CookieHandler</stringProp>
        </CookieManager>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="TG68 5M" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; &#xd;
xmlns:xro=&quot;http://x-road.eu/xsd/xroad.xsd&quot; xmlns:iden=&quot;http://x-road.eu/xsd/identifiers&quot;&#xd;
xmlns:prod=&quot;http://test.x-road.fi/producer&quot;&gt;&#xd;
   &lt;soapenv:Header&gt;&#xd;
      &lt;xro:protocolVersion&gt;4.x&lt;/xro:protocolVersion&gt;&#xd;
      &lt;xro:id&gt;TEST7a&lt;/xro:id&gt;&#xd;
      &lt;xro:userId&gt;EE1234567890&lt;/xro:userId&gt;&#xd;
      &lt;xro:client iden:objectType=&quot;SUBSYSTEM&quot;&gt;&#xd;
         &lt;iden:xRoadInstance&gt;${Instance}&lt;/iden:xRoadInstance&gt;&#xd;
         &lt;iden:memberClass&gt;GOV&lt;/iden:memberClass&gt;&#xd;
         &lt;iden:memberCode&gt;${MemberCode}&lt;/iden:memberCode&gt;&#xd;
         &lt;iden:subsystemCode&gt;perftestclient&lt;/iden:subsystemCode&gt;&#xd;
      &lt;/xro:client&gt;&#xd;
      &lt;xro:service iden:objectType=&quot;SERVICE&quot;&gt;&#xd;
         &lt;iden:xRoadInstance&gt;${Instance}&lt;/iden:xRoadInstance&gt;&#xd;
         &lt;iden:memberClass&gt;GOV&lt;/iden:memberClass&gt;&#xd;
         &lt;iden:memberCode&gt;${MemberCode}&lt;/iden:memberCode&gt;&#xd;
         &lt;iden:subsystemCode&gt;perftestservice&lt;/iden:subsystemCode&gt;&#xd;
         &lt;iden:serviceCode&gt;testService&lt;/iden:serviceCode&gt;&#xd;
         &lt;iden:serviceVersion&gt;v1&lt;/iden:serviceVersion&gt;&#xd;
      &lt;/xro:service&gt;&#xd;
   &lt;/soapenv:Header&gt;&#xd;
   &lt;soapenv:Body&gt;&#xd;
      &lt;prod:testService&gt;&#xd;
             &lt;request&gt;&#xd;
                &lt;responseBodySize&gt;5000000&lt;/responseBodySize&gt;&#xd;
                &lt;responseAttachmentSize&gt;0&lt;/responseAttachmentSize&gt;&#xd;
            &lt;/request&gt;&#xd;
     &lt;/prod:testService&gt;&#xd;
   &lt;/soapenv:Body&gt;&#xd;
&lt;/soapenv:Envelope&gt;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">test-service-0.0.2-SNAPSHOT/Endpoint</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout">${timeout}</stringProp>
          <stringProp name="HTTPSampler.response_timeout">${timeout}</stringProp>
          <stringProp name="TestPlan.comments">Sanomakoko 1M</stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="false">
          <stringProp name="ConstantTimer.delay">${timer}</stringProp>
        </ConstantTimer>
        <hashTree/>
        <ResultCollector guiclass="StatVisualizer" testclass="ResultCollector" testname="Aggregate Report" enabled="false">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>false</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <hostname>true</hostname>
              <threadCounts>true</threadCounts>
              <sampleCount>true</sampleCount>
            </value>
          </objProp>
          <stringProp name="filename">../logs/runs/TG68_5M_${__time(dd-MM-yyyy&apos;_T_&apos;HH:mm)}.jtl</stringProp>
        </ResultCollector>
        <hashTree/>
        <kg.apc.jmeter.reporters.LoadosophiaUploader guiclass="kg.apc.jmeter.reporters.LoadosophiaUploaderGui" testclass="kg.apc.jmeter.reporters.LoadosophiaUploader" testname="jp@gc - Loadosophia.org Uploader" enabled="false">
          <elementProp name="arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="classname">kg.apc.jmeter.reporters.LoadosophiaClient</stringProp>
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>false</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <hostname>true</hostname>
              <threadCounts>true</threadCounts>
              <sampleCount>true</sampleCount>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
          <stringProp name="project"></stringProp>
          <stringProp name="uploadToken">${loadsoftoken}</stringProp>
          <stringProp name="storeDir">../logs/Loadsof/</stringProp>
          <stringProp name="color">none</stringProp>
          <stringProp name="title">TG68 5M _${__time(dd-MM-yyyy&apos;_T_&apos;HH:mm)}</stringProp>
          <boolProp name="useOnline">true</boolProp>
        </kg.apc.jmeter.reporters.LoadosophiaUploader>
        <hashTree/>
      </hashTree>
      <kg.apc.jmeter.threads.SteppingThreadGroup guiclass="kg.apc.jmeter.threads.SteppingThreadGroupGui" testclass="kg.apc.jmeter.threads.SteppingThreadGroup" testname="TG 69 Sanomakoko 10M - Stepping" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">stoptest</stringProp>
        <stringProp name="ThreadGroup.num_threads">400</stringProp>
        <stringProp name="Threads initial delay">0</stringProp>
        <stringProp name="Start users count">1</stringProp>
        <stringProp name="Start users count burst">1</stringProp>
        <stringProp name="Start users period">3</stringProp>
        <stringProp name="Stop users count">5</stringProp>
        <stringProp name="Stop users period">10</stringProp>
        <stringProp name="flighttime">0</stringProp>
        <stringProp name="rampUp"></stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <intProp name="LoopController.loops">-1</intProp>
        </elementProp>
      </kg.apc.jmeter.threads.SteppingThreadGroup>
      <hashTree>
        <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP Request Defaults" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="Kysely" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">Kysely</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">${path}</stringProp>
          <stringProp name="HTTPSampler.concurrentPool">4</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </ConfigTestElement>
        <hashTree/>
        <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="HTTP Cookie Manager" enabled="false">
          <collectionProp name="CookieManager.cookies"/>
          <stringProp name="TestPlan.comments">Sanomankoko</stringProp>
          <boolProp name="CookieManager.clearEachIteration">false</boolProp>
          <stringProp name="CookieManager.implementation">org.apache.jmeter.protocol.http.control.HC4CookieHandler</stringProp>
        </CookieManager>
        <hashTree/>
        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="false">
          <collectionProp name="HeaderManager.headers">
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Content-Type</stringProp>
              <stringProp name="Header.value">text/xml; charset=utf-8</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">SOAPAction</stringProp>
              <stringProp name="Header.value"></stringProp>
            </elementProp>
          </collectionProp>
        </HeaderManager>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="TG69 10M" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; &#xd;
xmlns:xro=&quot;http://x-road.eu/xsd/xroad.xsd&quot; xmlns:iden=&quot;http://x-road.eu/xsd/identifiers&quot;&#xd;
xmlns:prod=&quot;http://test.x-road.fi/producer&quot;&gt;&#xd;
   &lt;soapenv:Header&gt;&#xd;
      &lt;xro:protocolVersion&gt;4.x&lt;/xro:protocolVersion&gt;&#xd;
      &lt;xro:id&gt;TEST7a&lt;/xro:id&gt;&#xd;
      &lt;xro:userId&gt;EE1234567890&lt;/xro:userId&gt;&#xd;
      &lt;xro:client iden:objectType=&quot;SUBSYSTEM&quot;&gt;&#xd;
         &lt;iden:xRoadInstance&gt;${Instance}&lt;/iden:xRoadInstance&gt;&#xd;
         &lt;iden:memberClass&gt;GOV&lt;/iden:memberClass&gt;&#xd;
         &lt;iden:memberCode&gt;${MemberCode}&lt;/iden:memberCode&gt;&#xd;
         &lt;iden:subsystemCode&gt;perftestclient&lt;/iden:subsystemCode&gt;&#xd;
      &lt;/xro:client&gt;&#xd;
      &lt;xro:service iden:objectType=&quot;SERVICE&quot;&gt;&#xd;
         &lt;iden:xRoadInstance&gt;${Instance}&lt;/iden:xRoadInstance&gt;&#xd;
         &lt;iden:memberClass&gt;GOV&lt;/iden:memberClass&gt;&#xd;
         &lt;iden:memberCode&gt;${MemberCode}&lt;/iden:memberCode&gt;&#xd;
         &lt;iden:subsystemCode&gt;perftestservice&lt;/iden:subsystemCode&gt;&#xd;
         &lt;iden:serviceCode&gt;testService&lt;/iden:serviceCode&gt;&#xd;
         &lt;iden:serviceVersion&gt;v1&lt;/iden:serviceVersion&gt;&#xd;
      &lt;/xro:service&gt;&#xd;
   &lt;/soapenv:Header&gt;&#xd;
   &lt;soapenv:Body&gt;&#xd;
      &lt;prod:testService&gt;&#xd;
             &lt;request&gt;&#xd;
                &lt;responseBodySize&gt;10000000&lt;/responseBodySize&gt;&#xd;
                &lt;responseAttachmentSize&gt;0&lt;/responseAttachmentSize&gt;&#xd;
            &lt;/request&gt;&#xd;
     &lt;/prod:testService&gt;&#xd;
   &lt;/soapenv:Body&gt;&#xd;
&lt;/soapenv:Envelope&gt;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">test-service-0.0.2-SNAPSHOT/Endpoint</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">Sanomankoko 10K</stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="false">
          <stringProp name="ConstantTimer.delay">${timer}</stringProp>
        </ConstantTimer>
        <hashTree/>
        <ResultCollector guiclass="StatVisualizer" testclass="ResultCollector" testname="Aggregate Report" enabled="false">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>false</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <hostname>true</hostname>
              <threadCounts>true</threadCounts>
              <sampleCount>true</sampleCount>
            </value>
          </objProp>
          <stringProp name="filename">../logs/runs/TG69_10M_400K_${__time(dd-MM-yyyy&apos;_T_&apos;HH:mm)}.jtl</stringProp>
        </ResultCollector>
        <hashTree/>
        <kg.apc.jmeter.reporters.LoadosophiaUploader guiclass="kg.apc.jmeter.reporters.LoadosophiaUploaderGui" testclass="kg.apc.jmeter.reporters.LoadosophiaUploader" testname="jp@gc - Loadosophia.org Uploader" enabled="false">
          <elementProp name="arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="classname">kg.apc.jmeter.reporters.LoadosophiaClient</stringProp>
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>false</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <hostname>true</hostname>
              <threadCounts>true</threadCounts>
              <sampleCount>true</sampleCount>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
          <stringProp name="project"></stringProp>
          <stringProp name="uploadToken">${loadsoftoken}</stringProp>
          <stringProp name="storeDir">../logs/Loadsof/</stringProp>
          <stringProp name="color">none</stringProp>
          <stringProp name="title">TG69 10M_400 users_${__time(dd-MM-yyyy&apos;_T_&apos;HH:mm)}</stringProp>
          <boolProp name="useOnline">true</boolProp>
        </kg.apc.jmeter.reporters.LoadosophiaUploader>
        <hashTree/>
      </hashTree>
      <kg.apc.jmeter.threads.UltimateThreadGroup guiclass="kg.apc.jmeter.threads.UltimateThreadGroupGui" testclass="kg.apc.jmeter.threads.UltimateThreadGroup" testname="TG 70 Sanomakoko 10M" enabled="false">
        <collectionProp name="ultimatethreadgroupdata">
          <collectionProp name="-819328809">
            <stringProp name="1567">10</stringProp>
            <stringProp name="1567">10</stringProp>
            <stringProp name="30">30</stringProp>
            <stringProp name="50733">360</stringProp>
            <stringProp name="10">10</stringProp>
          </collectionProp>
          <collectionProp name="1498782571">
            <stringProp name="1567">10</stringProp>
            <stringProp name="1598">20</stringProp>
            <stringProp name="1660">40</stringProp>
            <stringProp name="50733">360</stringProp>
            <stringProp name="10">10</stringProp>
          </collectionProp>
          <collectionProp name="-1970700140">
            <stringProp name="1567">10</stringProp>
            <stringProp name="1629">30</stringProp>
            <stringProp name="1691">50</stringProp>
            <stringProp name="50733">360</stringProp>
            <stringProp name="10">10</stringProp>
          </collectionProp>
          <collectionProp name="-1816496158">
            <stringProp name="1567">10</stringProp>
            <stringProp name="1660">40</stringProp>
            <stringProp name="1722">60</stringProp>
            <stringProp name="50733">360</stringProp>
            <stringProp name="10">10</stringProp>
          </collectionProp>
          <collectionProp name="-1708587390">
            <stringProp name="1567">10</stringProp>
            <stringProp name="1691">50</stringProp>
            <stringProp name="1753">70</stringProp>
            <stringProp name="50733">360</stringProp>
            <stringProp name="10">10</stringProp>
          </collectionProp>
          <collectionProp name="-883102805">
            <stringProp name="1567">10</stringProp>
            <stringProp name="1722">60</stringProp>
            <stringProp name="1784">80</stringProp>
            <stringProp name="50733">360</stringProp>
            <stringProp name="10">10</stringProp>
          </collectionProp>
          <collectionProp name="-752046430">
            <stringProp name="1567">10</stringProp>
            <stringProp name="1753">70</stringProp>
            <stringProp name="1815">90</stringProp>
            <stringProp name="50733">360</stringProp>
            <stringProp name="10">10</stringProp>
          </collectionProp>
          <collectionProp name="610317561">
            <stringProp name="1567">10</stringProp>
            <stringProp name="1784">80</stringProp>
            <stringProp name="48625">100</stringProp>
            <stringProp name="50733">360</stringProp>
            <stringProp name="10">10</stringProp>
          </collectionProp>
          <collectionProp name="1435802146">
            <stringProp name="1567">10</stringProp>
            <stringProp name="1815">90</stringProp>
            <stringProp name="48656">110</stringProp>
            <stringProp name="50733">360</stringProp>
            <stringProp name="10">10</stringProp>
          </collectionProp>
          <collectionProp name="1777117163">
            <stringProp name="1567">10</stringProp>
            <stringProp name="48625">100</stringProp>
            <stringProp name="48687">120</stringProp>
            <stringProp name="50733">360</stringProp>
            <stringProp name="10">10</stringProp>
          </collectionProp>
        </collectionProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <intProp name="LoopController.loops">-1</intProp>
        </elementProp>
        <stringProp name="ThreadGroup.on_sample_error">stoptest</stringProp>
      </kg.apc.jmeter.threads.UltimateThreadGroup>
      <hashTree>
        <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP Request Defaults" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="Kysely" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">Kysely</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">${path}</stringProp>
          <stringProp name="HTTPSampler.concurrentPool">4</stringProp>
          <stringProp name="HTTPSampler.connect_timeout">${timeout}</stringProp>
          <stringProp name="HTTPSampler.response_timeout">${timeout}</stringProp>
        </ConfigTestElement>
        <hashTree/>
        <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="HTTP Cookie Manager" enabled="false">
          <collectionProp name="CookieManager.cookies"/>
          <stringProp name="TestPlan.comments">Sanomankoko</stringProp>
          <boolProp name="CookieManager.clearEachIteration">false</boolProp>
          <stringProp name="CookieManager.implementation">org.apache.jmeter.protocol.http.control.HC4CookieHandler</stringProp>
        </CookieManager>
        <hashTree/>
        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="false">
          <collectionProp name="HeaderManager.headers">
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Content-Type</stringProp>
              <stringProp name="Header.value">text/xml; charset=utf-8</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">SOAPAction</stringProp>
              <stringProp name="Header.value"></stringProp>
            </elementProp>
          </collectionProp>
        </HeaderManager>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="TG7010M" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; &#xd;
xmlns:xro=&quot;http://x-road.eu/xsd/xroad.xsd&quot; xmlns:iden=&quot;http://x-road.eu/xsd/identifiers&quot;&#xd;
xmlns:prod=&quot;http://test.x-road.fi/producer&quot;&gt;&#xd;
   &lt;soapenv:Header&gt;&#xd;
      &lt;xro:protocolVersion&gt;4.x&lt;/xro:protocolVersion&gt;&#xd;
      &lt;xro:id&gt;TEST7a&lt;/xro:id&gt;&#xd;
      &lt;xro:userId&gt;EE1234567890&lt;/xro:userId&gt;&#xd;
      &lt;xro:client iden:objectType=&quot;SUBSYSTEM&quot;&gt;&#xd;
         &lt;iden:xRoadInstance&gt;${Instance}&lt;/iden:xRoadInstance&gt;&#xd;
         &lt;iden:memberClass&gt;GOV&lt;/iden:memberClass&gt;&#xd;
         &lt;iden:memberCode&gt;${MemberCode}&lt;/iden:memberCode&gt;&#xd;
         &lt;iden:subsystemCode&gt;perftestclient&lt;/iden:subsystemCode&gt;&#xd;
      &lt;/xro:client&gt;&#xd;
      &lt;xro:service iden:objectType=&quot;SERVICE&quot;&gt;&#xd;
         &lt;iden:xRoadInstance&gt;${Instance}&lt;/iden:xRoadInstance&gt;&#xd;
         &lt;iden:memberClass&gt;GOV&lt;/iden:memberClass&gt;&#xd;
         &lt;iden:memberCode&gt;${MemberCode}&lt;/iden:memberCode&gt;&#xd;
         &lt;iden:subsystemCode&gt;perftestservice&lt;/iden:subsystemCode&gt;&#xd;
         &lt;iden:serviceCode&gt;testService&lt;/iden:serviceCode&gt;&#xd;
         &lt;iden:serviceVersion&gt;v1&lt;/iden:serviceVersion&gt;&#xd;
      &lt;/xro:service&gt;&#xd;
   &lt;/soapenv:Header&gt;&#xd;
   &lt;soapenv:Body&gt;&#xd;
      &lt;prod:testService&gt;&#xd;
             &lt;request&gt;&#xd;
                &lt;responseBodySize&gt;10000000&lt;/responseBodySize&gt;&#xd;
                &lt;responseAttachmentSize&gt;0&lt;/responseAttachmentSize&gt;&#xd;
            &lt;/request&gt;&#xd;
     &lt;/prod:testService&gt;&#xd;
   &lt;/soapenv:Body&gt;&#xd;
&lt;/soapenv:Envelope&gt;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">test-service-0.0.2-SNAPSHOT/Endpoint</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments"> Sanomakoko10M</stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="false">
          <stringProp name="ConstantTimer.delay">${timer}</stringProp>
        </ConstantTimer>
        <hashTree/>
        <ResultCollector guiclass="StatVisualizer" testclass="ResultCollector" testname="Aggregate Report" enabled="false">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>false</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <hostname>true</hostname>
              <threadCounts>true</threadCounts>
              <sampleCount>true</sampleCount>
            </value>
          </objProp>
          <stringProp name="filename">../logs/runs/TG70_10M_${__time(dd-MM-yyyy&apos;_T_&apos;HH:mm)}.jtl</stringProp>
        </ResultCollector>
        <hashTree/>
        <kg.apc.jmeter.reporters.LoadosophiaUploader guiclass="kg.apc.jmeter.reporters.LoadosophiaUploaderGui" testclass="kg.apc.jmeter.reporters.LoadosophiaUploader" testname="jp@gc - Loadosophia.org Uploader" enabled="false">
          <elementProp name="arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="classname">kg.apc.jmeter.reporters.LoadosophiaClient</stringProp>
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>false</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <hostname>true</hostname>
              <threadCounts>true</threadCounts>
              <sampleCount>true</sampleCount>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
          <stringProp name="project"></stringProp>
          <stringProp name="uploadToken">${loadsoftoken}</stringProp>
          <stringProp name="storeDir">../logs/Loadsof/</stringProp>
          <stringProp name="color">none</stringProp>
          <stringProp name="title">TG70 10M_${__time(dd-MM-yyyy&apos;_T_&apos;HH:mm)}</stringProp>
          <boolProp name="useOnline">true</boolProp>
        </kg.apc.jmeter.reporters.LoadosophiaUploader>
        <hashTree/>
      </hashTree>
      <kg.apc.jmeter.threads.SteppingThreadGroup guiclass="kg.apc.jmeter.threads.SteppingThreadGroupGui" testclass="kg.apc.jmeter.threads.SteppingThreadGroup" testname="TG 71 Sanomakoko 50M - Stepping" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">stoptest</stringProp>
        <stringProp name="ThreadGroup.num_threads">400</stringProp>
        <stringProp name="Threads initial delay">0</stringProp>
        <stringProp name="Start users count">1</stringProp>
        <stringProp name="Start users count burst">1</stringProp>
        <stringProp name="Start users period">3</stringProp>
        <stringProp name="Stop users count">5</stringProp>
        <stringProp name="Stop users period">10</stringProp>
        <stringProp name="flighttime">0</stringProp>
        <stringProp name="rampUp"></stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <intProp name="LoopController.loops">-1</intProp>
        </elementProp>
      </kg.apc.jmeter.threads.SteppingThreadGroup>
      <hashTree>
        <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP Request Defaults" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="Kysely" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">Kysely</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">${path}</stringProp>
          <stringProp name="HTTPSampler.concurrentPool">4</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </ConfigTestElement>
        <hashTree/>
        <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="HTTP Cookie Manager" enabled="false">
          <collectionProp name="CookieManager.cookies"/>
          <stringProp name="TestPlan.comments">Sanomankoko</stringProp>
          <boolProp name="CookieManager.clearEachIteration">false</boolProp>
          <stringProp name="CookieManager.implementation">org.apache.jmeter.protocol.http.control.HC4CookieHandler</stringProp>
        </CookieManager>
        <hashTree/>
        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="false">
          <collectionProp name="HeaderManager.headers">
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Content-Type</stringProp>
              <stringProp name="Header.value">text/xml; charset=utf-8</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">SOAPAction</stringProp>
              <stringProp name="Header.value"></stringProp>
            </elementProp>
          </collectionProp>
        </HeaderManager>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="TG71 50M" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; &#xd;
xmlns:xro=&quot;http://x-road.eu/xsd/xroad.xsd&quot; xmlns:iden=&quot;http://x-road.eu/xsd/identifiers&quot;&#xd;
xmlns:prod=&quot;http://test.x-road.fi/producer&quot;&gt;&#xd;
   &lt;soapenv:Header&gt;&#xd;
      &lt;xro:protocolVersion&gt;4.x&lt;/xro:protocolVersion&gt;&#xd;
      &lt;xro:id&gt;TEST7a&lt;/xro:id&gt;&#xd;
      &lt;xro:userId&gt;EE1234567890&lt;/xro:userId&gt;&#xd;
      &lt;xro:client iden:objectType=&quot;SUBSYSTEM&quot;&gt;&#xd;
         &lt;iden:xRoadInstance&gt;${Instance}&lt;/iden:xRoadInstance&gt;&#xd;
         &lt;iden:memberClass&gt;GOV&lt;/iden:memberClass&gt;&#xd;
         &lt;iden:memberCode&gt;${MemberCode}&lt;/iden:memberCode&gt;&#xd;
         &lt;iden:subsystemCode&gt;perftestclient&lt;/iden:subsystemCode&gt;&#xd;
      &lt;/xro:client&gt;&#xd;
      &lt;xro:service iden:objectType=&quot;SERVICE&quot;&gt;&#xd;
         &lt;iden:xRoadInstance&gt;${Instance}&lt;/iden:xRoadInstance&gt;&#xd;
         &lt;iden:memberClass&gt;GOV&lt;/iden:memberClass&gt;&#xd;
         &lt;iden:memberCode&gt;${MemberCode}&lt;/iden:memberCode&gt;&#xd;
         &lt;iden:subsystemCode&gt;perftestservice&lt;/iden:subsystemCode&gt;&#xd;
         &lt;iden:serviceCode&gt;testService&lt;/iden:serviceCode&gt;&#xd;
         &lt;iden:serviceVersion&gt;v1&lt;/iden:serviceVersion&gt;&#xd;
      &lt;/xro:service&gt;&#xd;
   &lt;/soapenv:Header&gt;&#xd;
   &lt;soapenv:Body&gt;&#xd;
      &lt;prod:testService&gt;&#xd;
             &lt;request&gt;&#xd;
                &lt;responseBodySize&gt;50000000&lt;/responseBodySize&gt;&#xd;
                &lt;responseAttachmentSize&gt;0&lt;/responseAttachmentSize&gt;&#xd;
            &lt;/request&gt;&#xd;
     &lt;/prod:testService&gt;&#xd;
   &lt;/soapenv:Body&gt;&#xd;
&lt;/soapenv:Envelope&gt;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">test-service-0.0.2-SNAPSHOT/Endpoint</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">Sanomankoko 10K</stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="false">
          <stringProp name="ConstantTimer.delay">${timer}</stringProp>
        </ConstantTimer>
        <hashTree/>
        <ResultCollector guiclass="StatVisualizer" testclass="ResultCollector" testname="Aggregate Report" enabled="false">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>false</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <hostname>true</hostname>
              <threadCounts>true</threadCounts>
              <sampleCount>true</sampleCount>
            </value>
          </objProp>
          <stringProp name="filename">../logs/runs/TG72_50M_400K_${__time(dd-MM-yyyy&apos;_T_&apos;HH:mm)}.jtl</stringProp>
        </ResultCollector>
        <hashTree/>
        <kg.apc.jmeter.reporters.LoadosophiaUploader guiclass="kg.apc.jmeter.reporters.LoadosophiaUploaderGui" testclass="kg.apc.jmeter.reporters.LoadosophiaUploader" testname="jp@gc - Loadosophia.org Uploader" enabled="false">
          <elementProp name="arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="classname">kg.apc.jmeter.reporters.LoadosophiaClient</stringProp>
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>false</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <hostname>true</hostname>
              <threadCounts>true</threadCounts>
              <sampleCount>true</sampleCount>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
          <stringProp name="project"></stringProp>
          <stringProp name="uploadToken">${loadsoftoken}</stringProp>
          <stringProp name="storeDir">../logs/Loadsof/</stringProp>
          <stringProp name="color">none</stringProp>
          <stringProp name="title">TG71 50M_400 users_${__time(dd-MM-yyyy&apos;_T_&apos;HH:mm)}</stringProp>
          <boolProp name="useOnline">true</boolProp>
        </kg.apc.jmeter.reporters.LoadosophiaUploader>
        <hashTree/>
      </hashTree>
      <kg.apc.jmeter.threads.UltimateThreadGroup guiclass="kg.apc.jmeter.threads.UltimateThreadGroupGui" testclass="kg.apc.jmeter.threads.UltimateThreadGroup" testname="TG 72 Sanomakoko 50M" enabled="false">
        <collectionProp name="ultimatethreadgroupdata">
          <collectionProp name="-1456120081">
            <stringProp name="1567">10</stringProp>
            <stringProp name="0">0</stringProp>
            <stringProp name="30">30</stringProp>
            <stringProp name="50733">360</stringProp>
            <stringProp name="10">10</stringProp>
          </collectionProp>
          <collectionProp name="1394245952">
            <stringProp name="1567">10</stringProp>
            <stringProp name="1567">10</stringProp>
            <stringProp name="1660">40</stringProp>
            <stringProp name="50733">360</stringProp>
            <stringProp name="10">10</stringProp>
          </collectionProp>
          <collectionProp name="1502154720">
            <stringProp name="1567">10</stringProp>
            <stringProp name="1598">20</stringProp>
            <stringProp name="1691">50</stringProp>
            <stringProp name="50733">360</stringProp>
            <stringProp name="10">10</stringProp>
          </collectionProp>
          <collectionProp name="-1944180384">
            <stringProp name="1567">10</stringProp>
            <stringProp name="1629">30</stringProp>
            <stringProp name="1722">60</stringProp>
            <stringProp name="50733">360</stringProp>
            <stringProp name="10">10</stringProp>
          </collectionProp>
          <collectionProp name="-1813124009">
            <stringProp name="1567">10</stringProp>
            <stringProp name="1660">40</stringProp>
            <stringProp name="1753">70</stringProp>
            <stringProp name="50733">360</stringProp>
            <stringProp name="10">10</stringProp>
          </collectionProp>
          <collectionProp name="-1705215241">
            <stringProp name="1567">10</stringProp>
            <stringProp name="1691">50</stringProp>
            <stringProp name="1784">80</stringProp>
            <stringProp name="50733">360</stringProp>
            <stringProp name="10">10</stringProp>
          </collectionProp>
        </collectionProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <intProp name="LoopController.loops">-1</intProp>
        </elementProp>
        <stringProp name="ThreadGroup.on_sample_error">stoptest</stringProp>
      </kg.apc.jmeter.threads.UltimateThreadGroup>
      <hashTree>
        <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP Request Defaults" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="Kysely" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">Kysely</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">${path}</stringProp>
          <stringProp name="HTTPSampler.concurrentPool">4</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </ConfigTestElement>
        <hashTree/>
        <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="HTTP Cookie Manager" enabled="false">
          <collectionProp name="CookieManager.cookies"/>
          <stringProp name="TestPlan.comments">Sanomankoko</stringProp>
          <boolProp name="CookieManager.clearEachIteration">false</boolProp>
          <stringProp name="CookieManager.implementation">org.apache.jmeter.protocol.http.control.HC4CookieHandler</stringProp>
        </CookieManager>
        <hashTree/>
        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="false">
          <collectionProp name="HeaderManager.headers">
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Content-Type</stringProp>
              <stringProp name="Header.value">text/xml; charset=utf-8</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">SOAPAction</stringProp>
              <stringProp name="Header.value"></stringProp>
            </elementProp>
          </collectionProp>
        </HeaderManager>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="TG72 50M" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; &#xd;
xmlns:xro=&quot;http://x-road.eu/xsd/xroad.xsd&quot; xmlns:iden=&quot;http://x-road.eu/xsd/identifiers&quot;&#xd;
xmlns:prod=&quot;http://test.x-road.fi/producer&quot;&gt;&#xd;
   &lt;soapenv:Header&gt;&#xd;
      &lt;xro:protocolVersion&gt;4.x&lt;/xro:protocolVersion&gt;&#xd;
      &lt;xro:id&gt;TEST7a&lt;/xro:id&gt;&#xd;
      &lt;xro:userId&gt;EE1234567890&lt;/xro:userId&gt;&#xd;
      &lt;xro:client iden:objectType=&quot;SUBSYSTEM&quot;&gt;&#xd;
         &lt;iden:xRoadInstance&gt;${Instance}&lt;/iden:xRoadInstance&gt;&#xd;
         &lt;iden:memberClass&gt;GOV&lt;/iden:memberClass&gt;&#xd;
         &lt;iden:memberCode&gt;${MemberCode}&lt;/iden:memberCode&gt;&#xd;
         &lt;iden:subsystemCode&gt;perftestclient&lt;/iden:subsystemCode&gt;&#xd;
      &lt;/xro:client&gt;&#xd;
      &lt;xro:service iden:objectType=&quot;SERVICE&quot;&gt;&#xd;
         &lt;iden:xRoadInstance&gt;${Instance}&lt;/iden:xRoadInstance&gt;&#xd;
         &lt;iden:memberClass&gt;GOV&lt;/iden:memberClass&gt;&#xd;
         &lt;iden:memberCode&gt;${MemberCode}&lt;/iden:memberCode&gt;&#xd;
         &lt;iden:subsystemCode&gt;perftestservice&lt;/iden:subsystemCode&gt;&#xd;
         &lt;iden:serviceCode&gt;testService&lt;/iden:serviceCode&gt;&#xd;
         &lt;iden:serviceVersion&gt;v1&lt;/iden:serviceVersion&gt;&#xd;
      &lt;/xro:service&gt;&#xd;
   &lt;/soapenv:Header&gt;&#xd;
   &lt;soapenv:Body&gt;&#xd;
      &lt;prod:testService&gt;&#xd;
             &lt;request&gt;&#xd;
                &lt;responseBodySize&gt;50000000&lt;/responseBodySize&gt;&#xd;
                &lt;responseAttachmentSize&gt;0&lt;/responseAttachmentSize&gt;&#xd;
            &lt;/request&gt;&#xd;
     &lt;/prod:testService&gt;&#xd;
   &lt;/soapenv:Body&gt;&#xd;
&lt;/soapenv:Envelope&gt;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">test-service-0.0.2-SNAPSHOT/Endpoint</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments"> Sanomakoko50M</stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="false">
          <stringProp name="ConstantTimer.delay">${timer}</stringProp>
        </ConstantTimer>
        <hashTree/>
        <ResultCollector guiclass="StatVisualizer" testclass="ResultCollector" testname="Aggregate Report" enabled="false">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>false</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <hostname>true</hostname>
              <threadCounts>true</threadCounts>
              <sampleCount>true</sampleCount>
            </value>
          </objProp>
          <stringProp name="filename">../logs/runs/TG72_50M.jtl</stringProp>
        </ResultCollector>
        <hashTree/>
        <kg.apc.jmeter.reporters.LoadosophiaUploader guiclass="kg.apc.jmeter.reporters.LoadosophiaUploaderGui" testclass="kg.apc.jmeter.reporters.LoadosophiaUploader" testname="jp@gc - Loadosophia.org Uploader" enabled="false">
          <elementProp name="arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="classname">kg.apc.jmeter.reporters.LoadosophiaClient</stringProp>
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>false</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <hostname>true</hostname>
              <threadCounts>true</threadCounts>
              <sampleCount>true</sampleCount>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
          <stringProp name="project"></stringProp>
          <stringProp name="uploadToken">${loadsoftoken}</stringProp>
          <stringProp name="storeDir">../logs/Loadsof/</stringProp>
          <stringProp name="color">none</stringProp>
          <stringProp name="title">TG72 50M_${__time(dd-MM-yyyy&apos;_T_&apos;HH:mm)}</stringProp>
          <boolProp name="useOnline">true</boolProp>
        </kg.apc.jmeter.reporters.LoadosophiaUploader>
        <hashTree/>
      </hashTree>
      <kg.apc.jmeter.threads.SteppingThreadGroup guiclass="kg.apc.jmeter.threads.SteppingThreadGroupGui" testclass="kg.apc.jmeter.threads.SteppingThreadGroup" testname="TG 73 Sanomakoko 100M - Stepping" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">stoptest</stringProp>
        <stringProp name="ThreadGroup.num_threads">400</stringProp>
        <stringProp name="Threads initial delay">0</stringProp>
        <stringProp name="Start users count">1</stringProp>
        <stringProp name="Start users count burst">1</stringProp>
        <stringProp name="Start users period">3</stringProp>
        <stringProp name="Stop users count">5</stringProp>
        <stringProp name="Stop users period">10</stringProp>
        <stringProp name="flighttime">0</stringProp>
        <stringProp name="rampUp"></stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <intProp name="LoopController.loops">-1</intProp>
        </elementProp>
      </kg.apc.jmeter.threads.SteppingThreadGroup>
      <hashTree>
        <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP Request Defaults" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="Kysely" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">Kysely</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">${path}</stringProp>
          <stringProp name="HTTPSampler.concurrentPool">4</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </ConfigTestElement>
        <hashTree/>
        <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="HTTP Cookie Manager" enabled="false">
          <collectionProp name="CookieManager.cookies"/>
          <stringProp name="TestPlan.comments">Sanomankoko</stringProp>
          <boolProp name="CookieManager.clearEachIteration">false</boolProp>
          <stringProp name="CookieManager.implementation">org.apache.jmeter.protocol.http.control.HC4CookieHandler</stringProp>
        </CookieManager>
        <hashTree/>
        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="false">
          <collectionProp name="HeaderManager.headers">
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Content-Type</stringProp>
              <stringProp name="Header.value">text/xml; charset=utf-8</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">SOAPAction</stringProp>
              <stringProp name="Header.value"></stringProp>
            </elementProp>
          </collectionProp>
        </HeaderManager>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="TG73 100M" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; &#xd;
xmlns:xro=&quot;http://x-road.eu/xsd/xroad.xsd&quot; xmlns:iden=&quot;http://x-road.eu/xsd/identifiers&quot;&#xd;
xmlns:prod=&quot;http://test.x-road.fi/producer&quot;&gt;&#xd;
   &lt;soapenv:Header&gt;&#xd;
      &lt;xro:protocolVersion&gt;4.x&lt;/xro:protocolVersion&gt;&#xd;
      &lt;xro:id&gt;TEST7a&lt;/xro:id&gt;&#xd;
      &lt;xro:userId&gt;EE1234567890&lt;/xro:userId&gt;&#xd;
      &lt;xro:client iden:objectType=&quot;SUBSYSTEM&quot;&gt;&#xd;
         &lt;iden:xRoadInstance&gt;${Instance}&lt;/iden:xRoadInstance&gt;&#xd;
         &lt;iden:memberClass&gt;GOV&lt;/iden:memberClass&gt;&#xd;
         &lt;iden:memberCode&gt;${MemberCode}&lt;/iden:memberCode&gt;&#xd;
         &lt;iden:subsystemCode&gt;perftestclient&lt;/iden:subsystemCode&gt;&#xd;
      &lt;/xro:client&gt;&#xd;
      &lt;xro:service iden:objectType=&quot;SERVICE&quot;&gt;&#xd;
         &lt;iden:xRoadInstance&gt;${Instance}&lt;/iden:xRoadInstance&gt;&#xd;
         &lt;iden:memberClass&gt;GOV&lt;/iden:memberClass&gt;&#xd;
         &lt;iden:memberCode&gt;${MemberCode}&lt;/iden:memberCode&gt;&#xd;
         &lt;iden:subsystemCode&gt;perftestservice&lt;/iden:subsystemCode&gt;&#xd;
         &lt;iden:serviceCode&gt;testService&lt;/iden:serviceCode&gt;&#xd;
         &lt;iden:serviceVersion&gt;v1&lt;/iden:serviceVersion&gt;&#xd;
      &lt;/xro:service&gt;&#xd;
   &lt;/soapenv:Header&gt;&#xd;
   &lt;soapenv:Body&gt;&#xd;
      &lt;prod:testService&gt;&#xd;
             &lt;request&gt;&#xd;
                &lt;responseBodySize&gt;100000000&lt;/responseBodySize&gt;&#xd;
                &lt;responseAttachmentSize&gt;0&lt;/responseAttachmentSize&gt;&#xd;
            &lt;/request&gt;&#xd;
     &lt;/prod:testService&gt;&#xd;
   &lt;/soapenv:Body&gt;&#xd;
&lt;/soapenv:Envelope&gt;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">test-service-0.0.2-SNAPSHOT/Endpoint</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">Sanomankoko 10K</stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="false">
          <stringProp name="ConstantTimer.delay">${timer}</stringProp>
        </ConstantTimer>
        <hashTree/>
        <ResultCollector guiclass="StatVisualizer" testclass="ResultCollector" testname="Aggregate Report" enabled="false">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>false</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <hostname>true</hostname>
              <threadCounts>true</threadCounts>
              <sampleCount>true</sampleCount>
            </value>
          </objProp>
          <stringProp name="filename">../logs/runs/TG73_100M_400K_${__time(dd-MM-yyyy&apos;_T_&apos;HH:mm)}.jtl</stringProp>
        </ResultCollector>
        <hashTree/>
        <kg.apc.jmeter.reporters.LoadosophiaUploader guiclass="kg.apc.jmeter.reporters.LoadosophiaUploaderGui" testclass="kg.apc.jmeter.reporters.LoadosophiaUploader" testname="jp@gc - Loadosophia.org Uploader" enabled="false">
          <elementProp name="arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="classname">kg.apc.jmeter.reporters.LoadosophiaClient</stringProp>
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>false</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <hostname>true</hostname>
              <threadCounts>true</threadCounts>
              <sampleCount>true</sampleCount>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
          <stringProp name="project"></stringProp>
          <stringProp name="uploadToken">${loadsoftoken}</stringProp>
          <stringProp name="storeDir">../logs/Loadsof/</stringProp>
          <stringProp name="color">none</stringProp>
          <stringProp name="title">TG73 100M_400 users_${__time(dd-MM-yyyy&apos;_T_&apos;HH:mm)}</stringProp>
          <boolProp name="useOnline">true</boolProp>
        </kg.apc.jmeter.reporters.LoadosophiaUploader>
        <hashTree/>
      </hashTree>
      <kg.apc.jmeter.threads.UltimateThreadGroup guiclass="kg.apc.jmeter.threads.UltimateThreadGroupGui" testclass="kg.apc.jmeter.threads.UltimateThreadGroup" testname="TG 74 Sanomakoko 100M" enabled="false">
        <collectionProp name="ultimatethreadgroupdata">
          <collectionProp name="-2144302697">
            <stringProp name="50">2</stringProp>
            <stringProp name="1629">30</stringProp>
            <stringProp name="30">30</stringProp>
            <stringProp name="50733">360</stringProp>
            <stringProp name="10">10</stringProp>
          </collectionProp>
          <collectionProp name="297374063">
            <stringProp name="50">2</stringProp>
            <stringProp name="1691">50</stringProp>
            <stringProp name="1629">30</stringProp>
            <stringProp name="50733">360</stringProp>
            <stringProp name="10">10</stringProp>
          </collectionProp>
          <collectionProp name="-985432797">
            <stringProp name="50">2</stringProp>
            <stringProp name="1753">70</stringProp>
            <stringProp name="30">30</stringProp>
            <stringProp name="50733">360</stringProp>
            <stringProp name="10">10</stringProp>
          </collectionProp>
        </collectionProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <intProp name="LoopController.loops">-1</intProp>
        </elementProp>
        <stringProp name="ThreadGroup.on_sample_error">stoptest</stringProp>
      </kg.apc.jmeter.threads.UltimateThreadGroup>
      <hashTree>
        <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP Request Defaults" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="Kysely" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">Kysely</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">${path}</stringProp>
          <stringProp name="HTTPSampler.concurrentPool">4</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </ConfigTestElement>
        <hashTree/>
        <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="HTTP Cookie Manager" enabled="false">
          <collectionProp name="CookieManager.cookies"/>
          <stringProp name="TestPlan.comments">Sanomankoko</stringProp>
          <boolProp name="CookieManager.clearEachIteration">false</boolProp>
          <stringProp name="CookieManager.implementation">org.apache.jmeter.protocol.http.control.HC4CookieHandler</stringProp>
        </CookieManager>
        <hashTree/>
        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="false">
          <collectionProp name="HeaderManager.headers">
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Content-Type</stringProp>
              <stringProp name="Header.value">text/xml; charset=utf-8</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">SOAPAction</stringProp>
              <stringProp name="Header.value"></stringProp>
            </elementProp>
          </collectionProp>
        </HeaderManager>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="TG74 100M" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; &#xd;
xmlns:xro=&quot;http://x-road.eu/xsd/xroad.xsd&quot; xmlns:iden=&quot;http://x-road.eu/xsd/identifiers&quot;&#xd;
xmlns:prod=&quot;http://test.x-road.fi/producer&quot;&gt;&#xd;
   &lt;soapenv:Header&gt;&#xd;
      &lt;xro:protocolVersion&gt;4.x&lt;/xro:protocolVersion&gt;&#xd;
      &lt;xro:id&gt;TEST7a&lt;/xro:id&gt;&#xd;
      &lt;xro:userId&gt;EE1234567890&lt;/xro:userId&gt;&#xd;
      &lt;xro:client iden:objectType=&quot;SUBSYSTEM&quot;&gt;&#xd;
         &lt;iden:xRoadInstance&gt;${Instance}&lt;/iden:xRoadInstance&gt;&#xd;
         &lt;iden:memberClass&gt;GOV&lt;/iden:memberClass&gt;&#xd;
         &lt;iden:memberCode&gt;${MemberCode}&lt;/iden:memberCode&gt;&#xd;
         &lt;iden:subsystemCode&gt;perftestclient&lt;/iden:subsystemCode&gt;&#xd;
      &lt;/xro:client&gt;&#xd;
      &lt;xro:service iden:objectType=&quot;SERVICE&quot;&gt;&#xd;
         &lt;iden:xRoadInstance&gt;${Instance}&lt;/iden:xRoadInstance&gt;&#xd;
         &lt;iden:memberClass&gt;GOV&lt;/iden:memberClass&gt;&#xd;
         &lt;iden:memberCode&gt;${MemberCode}&lt;/iden:memberCode&gt;&#xd;
         &lt;iden:subsystemCode&gt;perftestservice&lt;/iden:subsystemCode&gt;&#xd;
         &lt;iden:serviceCode&gt;testService&lt;/iden:serviceCode&gt;&#xd;
         &lt;iden:serviceVersion&gt;v1&lt;/iden:serviceVersion&gt;&#xd;
      &lt;/xro:service&gt;&#xd;
   &lt;/soapenv:Header&gt;&#xd;
   &lt;soapenv:Body&gt;&#xd;
      &lt;prod:testService&gt;&#xd;
             &lt;request&gt;&#xd;
                &lt;responseBodySize&gt;100000000&lt;/responseBodySize&gt;&#xd;
                &lt;responseAttachmentSize&gt;0&lt;/responseAttachmentSize&gt;&#xd;
            &lt;/request&gt;&#xd;
     &lt;/prod:testService&gt;&#xd;
   &lt;/soapenv:Body&gt;&#xd;
&lt;/soapenv:Envelope&gt;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">test-service-0.0.2-SNAPSHOT/Endpoint</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments"> Sanomakoko100M</stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="false">
          <stringProp name="ConstantTimer.delay">${timer}</stringProp>
        </ConstantTimer>
        <hashTree/>
        <ResultCollector guiclass="StatVisualizer" testclass="ResultCollector" testname="Aggregate Report" enabled="false">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>false</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <hostname>true</hostname>
              <threadCounts>true</threadCounts>
              <sampleCount>true</sampleCount>
            </value>
          </objProp>
          <stringProp name="filename">../logs/runs/TG74_100M_${__time(dd-MM-yyyy&apos;_T_&apos;HH:mm)}.jtl</stringProp>
        </ResultCollector>
        <hashTree/>
        <kg.apc.jmeter.reporters.LoadosophiaUploader guiclass="kg.apc.jmeter.reporters.LoadosophiaUploaderGui" testclass="kg.apc.jmeter.reporters.LoadosophiaUploader" testname="jp@gc - Loadosophia.org Uploader" enabled="false">
          <elementProp name="arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="classname">kg.apc.jmeter.reporters.LoadosophiaClient</stringProp>
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>false</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <hostname>true</hostname>
              <threadCounts>true</threadCounts>
              <sampleCount>true</sampleCount>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
          <stringProp name="project"></stringProp>
          <stringProp name="uploadToken">${loadsoftoken}</stringProp>
          <stringProp name="storeDir">../logs/Loadsof/</stringProp>
          <stringProp name="color">none</stringProp>
          <stringProp name="title">TG74 100M_${__time(dd-MM-yyyy&apos;_T_&apos;HH:mm)}</stringProp>
          <boolProp name="useOnline">true</boolProp>
        </kg.apc.jmeter.reporters.LoadosophiaUploader>
        <hashTree/>
      </hashTree>
      <kg.apc.jmeter.threads.SteppingThreadGroup guiclass="kg.apc.jmeter.threads.SteppingThreadGroupGui" testclass="kg.apc.jmeter.threads.SteppingThreadGroup" testname="TG 75 Sanomakoko 500M - Stepping" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">stoptest</stringProp>
        <stringProp name="ThreadGroup.num_threads">400</stringProp>
        <stringProp name="Threads initial delay">0</stringProp>
        <stringProp name="Start users count">1</stringProp>
        <stringProp name="Start users count burst">1</stringProp>
        <stringProp name="Start users period">3</stringProp>
        <stringProp name="Stop users count">5</stringProp>
        <stringProp name="Stop users period">10</stringProp>
        <stringProp name="flighttime">0</stringProp>
        <stringProp name="rampUp"></stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <intProp name="LoopController.loops">-1</intProp>
        </elementProp>
      </kg.apc.jmeter.threads.SteppingThreadGroup>
      <hashTree>
        <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP Request Defaults" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="Kysely" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">Kysely</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">${path}</stringProp>
          <stringProp name="HTTPSampler.concurrentPool">4</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </ConfigTestElement>
        <hashTree/>
        <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="HTTP Cookie Manager" enabled="false">
          <collectionProp name="CookieManager.cookies"/>
          <stringProp name="TestPlan.comments">Sanomankoko</stringProp>
          <boolProp name="CookieManager.clearEachIteration">false</boolProp>
          <stringProp name="CookieManager.implementation">org.apache.jmeter.protocol.http.control.HC4CookieHandler</stringProp>
        </CookieManager>
        <hashTree/>
        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="false">
          <collectionProp name="HeaderManager.headers">
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Content-Type</stringProp>
              <stringProp name="Header.value">text/xml; charset=utf-8</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">SOAPAction</stringProp>
              <stringProp name="Header.value"></stringProp>
            </elementProp>
          </collectionProp>
        </HeaderManager>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="TG75 500M" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; &#xd;
xmlns:xro=&quot;http://x-road.eu/xsd/xroad.xsd&quot; xmlns:iden=&quot;http://x-road.eu/xsd/identifiers&quot;&#xd;
xmlns:prod=&quot;http://test.x-road.fi/producer&quot;&gt;&#xd;
   &lt;soapenv:Header&gt;&#xd;
      &lt;xro:protocolVersion&gt;4.x&lt;/xro:protocolVersion&gt;&#xd;
      &lt;xro:id&gt;TEST7a&lt;/xro:id&gt;&#xd;
      &lt;xro:userId&gt;EE1234567890&lt;/xro:userId&gt;&#xd;
      &lt;xro:client iden:objectType=&quot;SUBSYSTEM&quot;&gt;&#xd;
         &lt;iden:xRoadInstance&gt;${Instance}&lt;/iden:xRoadInstance&gt;&#xd;
         &lt;iden:memberClass&gt;GOV&lt;/iden:memberClass&gt;&#xd;
         &lt;iden:memberCode&gt;${MemberCode}&lt;/iden:memberCode&gt;&#xd;
         &lt;iden:subsystemCode&gt;perftestclient&lt;/iden:subsystemCode&gt;&#xd;
      &lt;/xro:client&gt;&#xd;
      &lt;xro:service iden:objectType=&quot;SERVICE&quot;&gt;&#xd;
         &lt;iden:xRoadInstance&gt;${Instance}&lt;/iden:xRoadInstance&gt;&#xd;
         &lt;iden:memberClass&gt;GOV&lt;/iden:memberClass&gt;&#xd;
         &lt;iden:memberCode&gt;${MemberCode}&lt;/iden:memberCode&gt;&#xd;
         &lt;iden:subsystemCode&gt;perftestservice&lt;/iden:subsystemCode&gt;&#xd;
         &lt;iden:serviceCode&gt;testService&lt;/iden:serviceCode&gt;&#xd;
         &lt;iden:serviceVersion&gt;v1&lt;/iden:serviceVersion&gt;&#xd;
      &lt;/xro:service&gt;&#xd;
   &lt;/soapenv:Header&gt;&#xd;
   &lt;soapenv:Body&gt;&#xd;
      &lt;prod:testService&gt;&#xd;
             &lt;request&gt;&#xd;
                &lt;responseBodySize&gt;500000000&lt;/responseBodySize&gt;&#xd;
                &lt;responseAttachmentSize&gt;0&lt;/responseAttachmentSize&gt;&#xd;
            &lt;/request&gt;&#xd;
     &lt;/prod:testService&gt;&#xd;
   &lt;/soapenv:Body&gt;&#xd;
&lt;/soapenv:Envelope&gt;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">test-service-0.0.2-SNAPSHOT/Endpoint</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">Sanomankoko 10K</stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="false">
          <stringProp name="ConstantTimer.delay">${timer}</stringProp>
        </ConstantTimer>
        <hashTree/>
        <ResultCollector guiclass="StatVisualizer" testclass="ResultCollector" testname="Aggregate Report" enabled="false">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>false</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <hostname>true</hostname>
              <threadCounts>true</threadCounts>
              <sampleCount>true</sampleCount>
            </value>
          </objProp>
          <stringProp name="filename">../logs/runs/TG75_500M_400K_${__time(dd-MM-yyyy&apos;_T_&apos;HH:mm)}.jtl</stringProp>
        </ResultCollector>
        <hashTree/>
        <kg.apc.jmeter.reporters.LoadosophiaUploader guiclass="kg.apc.jmeter.reporters.LoadosophiaUploaderGui" testclass="kg.apc.jmeter.reporters.LoadosophiaUploader" testname="jp@gc - Loadosophia.org Uploader" enabled="false">
          <elementProp name="arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="classname">kg.apc.jmeter.reporters.LoadosophiaClient</stringProp>
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>false</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <hostname>true</hostname>
              <threadCounts>true</threadCounts>
              <sampleCount>true</sampleCount>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
          <stringProp name="project"></stringProp>
          <stringProp name="uploadToken">${loadsoftoken}</stringProp>
          <stringProp name="storeDir">../logs/Loadsof/</stringProp>
          <stringProp name="color">none</stringProp>
          <stringProp name="title">TG75 500M_400 users_${__time(dd-MM-yyyy&apos;_T_&apos;HH:mm)}</stringProp>
          <boolProp name="useOnline">true</boolProp>
        </kg.apc.jmeter.reporters.LoadosophiaUploader>
        <hashTree/>
      </hashTree>
      <kg.apc.jmeter.threads.UltimateThreadGroup guiclass="kg.apc.jmeter.threads.UltimateThreadGroupGui" testclass="kg.apc.jmeter.threads.UltimateThreadGroup" testname="TG 76 Sanomakoko 500M" enabled="false">
        <collectionProp name="ultimatethreadgroupdata">
          <collectionProp name="-2144302697">
            <stringProp name="50">2</stringProp>
            <stringProp name="1629">30</stringProp>
            <stringProp name="30">30</stringProp>
            <stringProp name="50733">360</stringProp>
            <stringProp name="10">10</stringProp>
          </collectionProp>
          <collectionProp name="297374063">
            <stringProp name="50">2</stringProp>
            <stringProp name="1691">50</stringProp>
            <stringProp name="1629">30</stringProp>
            <stringProp name="50733">360</stringProp>
            <stringProp name="10">10</stringProp>
          </collectionProp>
          <collectionProp name="-985432797">
            <stringProp name="50">2</stringProp>
            <stringProp name="1753">70</stringProp>
            <stringProp name="30">30</stringProp>
            <stringProp name="50733">360</stringProp>
            <stringProp name="10">10</stringProp>
          </collectionProp>
        </collectionProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <intProp name="LoopController.loops">-1</intProp>
        </elementProp>
        <stringProp name="ThreadGroup.on_sample_error">stoptest</stringProp>
      </kg.apc.jmeter.threads.UltimateThreadGroup>
      <hashTree>
        <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP Request Defaults" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="Kysely" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">Kysely</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">${path}</stringProp>
          <stringProp name="HTTPSampler.concurrentPool">4</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </ConfigTestElement>
        <hashTree/>
        <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="HTTP Cookie Manager" enabled="false">
          <collectionProp name="CookieManager.cookies"/>
          <stringProp name="TestPlan.comments">Sanomankoko</stringProp>
          <boolProp name="CookieManager.clearEachIteration">false</boolProp>
          <stringProp name="CookieManager.implementation">org.apache.jmeter.protocol.http.control.HC4CookieHandler</stringProp>
        </CookieManager>
        <hashTree/>
        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="false">
          <collectionProp name="HeaderManager.headers">
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Content-Type</stringProp>
              <stringProp name="Header.value">text/xml; charset=utf-8</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">SOAPAction</stringProp>
              <stringProp name="Header.value"></stringProp>
            </elementProp>
          </collectionProp>
        </HeaderManager>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="TG76 500M" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; &#xd;
xmlns:xro=&quot;http://x-road.eu/xsd/xroad.xsd&quot; xmlns:iden=&quot;http://x-road.eu/xsd/identifiers&quot;&#xd;
xmlns:prod=&quot;http://test.x-road.fi/producer&quot;&gt;&#xd;
   &lt;soapenv:Header&gt;&#xd;
      &lt;xro:protocolVersion&gt;4.x&lt;/xro:protocolVersion&gt;&#xd;
      &lt;xro:id&gt;TEST7a&lt;/xro:id&gt;&#xd;
      &lt;xro:userId&gt;EE1234567890&lt;/xro:userId&gt;&#xd;
      &lt;xro:client iden:objectType=&quot;SUBSYSTEM&quot;&gt;&#xd;
         &lt;iden:xRoadInstance&gt;${Instance}&lt;/iden:xRoadInstance&gt;&#xd;
         &lt;iden:memberClass&gt;GOV&lt;/iden:memberClass&gt;&#xd;
         &lt;iden:memberCode&gt;${MemberCode}&lt;/iden:memberCode&gt;&#xd;
         &lt;iden:subsystemCode&gt;perftestclient&lt;/iden:subsystemCode&gt;&#xd;
      &lt;/xro:client&gt;&#xd;
      &lt;xro:service iden:objectType=&quot;SERVICE&quot;&gt;&#xd;
         &lt;iden:xRoadInstance&gt;${Instance}&lt;/iden:xRoadInstance&gt;&#xd;
         &lt;iden:memberClass&gt;GOV&lt;/iden:memberClass&gt;&#xd;
         &lt;iden:memberCode&gt;${MemberCode}&lt;/iden:memberCode&gt;&#xd;
         &lt;iden:subsystemCode&gt;perftestservice&lt;/iden:subsystemCode&gt;&#xd;
         &lt;iden:serviceCode&gt;testService&lt;/iden:serviceCode&gt;&#xd;
         &lt;iden:serviceVersion&gt;v1&lt;/iden:serviceVersion&gt;&#xd;
      &lt;/xro:service&gt;&#xd;
   &lt;/soapenv:Header&gt;&#xd;
   &lt;soapenv:Body&gt;&#xd;
      &lt;prod:testService&gt;&#xd;
             &lt;request&gt;&#xd;
                &lt;responseBodySize&gt;500000000&lt;/responseBodySize&gt;&#xd;
                &lt;responseAttachmentSize&gt;0&lt;/responseAttachmentSize&gt;&#xd;
            &lt;/request&gt;&#xd;
     &lt;/prod:testService&gt;&#xd;
   &lt;/soapenv:Body&gt;&#xd;
&lt;/soapenv:Envelope&gt;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">test-service-0.0.2-SNAPSHOT/Endpoint</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments"> Sanomakoko100M</stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="false">
          <stringProp name="ConstantTimer.delay">${timer}</stringProp>
        </ConstantTimer>
        <hashTree/>
        <ResultCollector guiclass="StatVisualizer" testclass="ResultCollector" testname="Aggregate Report" enabled="false">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>false</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <hostname>true</hostname>
              <threadCounts>true</threadCounts>
              <sampleCount>true</sampleCount>
            </value>
          </objProp>
          <stringProp name="filename">../logs/runs/TG76_500M_${__time(dd-MM-yyyy&apos;_T_&apos;HH:mm)}.jtl</stringProp>
        </ResultCollector>
        <hashTree/>
        <kg.apc.jmeter.reporters.LoadosophiaUploader guiclass="kg.apc.jmeter.reporters.LoadosophiaUploaderGui" testclass="kg.apc.jmeter.reporters.LoadosophiaUploader" testname="jp@gc - Loadosophia.org Uploader" enabled="false">
          <elementProp name="arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="classname">kg.apc.jmeter.reporters.LoadosophiaClient</stringProp>
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>false</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <hostname>true</hostname>
              <threadCounts>true</threadCounts>
              <sampleCount>true</sampleCount>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
          <stringProp name="project"></stringProp>
          <stringProp name="uploadToken">${loadsoftoken}</stringProp>
          <stringProp name="storeDir">../logs/Loadsof/</stringProp>
          <stringProp name="color">none</stringProp>
          <stringProp name="title">TG76 500M_${__time(dd-MM-yyyy&apos;_T_&apos;HH:mm)}</stringProp>
          <boolProp name="useOnline">true</boolProp>
        </kg.apc.jmeter.reporters.LoadosophiaUploader>
        <hashTree/>
      </hashTree>
      <kg.apc.jmeter.threads.SteppingThreadGroup guiclass="kg.apc.jmeter.threads.SteppingThreadGroupGui" testclass="kg.apc.jmeter.threads.SteppingThreadGroup" testname="TG 77 Sanomakoko 1G - Stepping" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">stoptest</stringProp>
        <stringProp name="ThreadGroup.num_threads">400</stringProp>
        <stringProp name="Threads initial delay">0</stringProp>
        <stringProp name="Start users count">1</stringProp>
        <stringProp name="Start users count burst">1</stringProp>
        <stringProp name="Start users period">3</stringProp>
        <stringProp name="Stop users count">5</stringProp>
        <stringProp name="Stop users period">10</stringProp>
        <stringProp name="flighttime">0</stringProp>
        <stringProp name="rampUp"></stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <intProp name="LoopController.loops">-1</intProp>
        </elementProp>
      </kg.apc.jmeter.threads.SteppingThreadGroup>
      <hashTree>
        <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP Request Defaults" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="Kysely" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">Kysely</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">${path}</stringProp>
          <stringProp name="HTTPSampler.concurrentPool">4</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </ConfigTestElement>
        <hashTree/>
        <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="HTTP Cookie Manager" enabled="false">
          <collectionProp name="CookieManager.cookies"/>
          <stringProp name="TestPlan.comments">Sanomankoko</stringProp>
          <boolProp name="CookieManager.clearEachIteration">false</boolProp>
          <stringProp name="CookieManager.implementation">org.apache.jmeter.protocol.http.control.HC4CookieHandler</stringProp>
        </CookieManager>
        <hashTree/>
        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="false">
          <collectionProp name="HeaderManager.headers">
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Content-Type</stringProp>
              <stringProp name="Header.value">text/xml; charset=utf-8</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">SOAPAction</stringProp>
              <stringProp name="Header.value"></stringProp>
            </elementProp>
          </collectionProp>
        </HeaderManager>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="TG77 1G" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; &#xd;
xmlns:xro=&quot;http://x-road.eu/xsd/xroad.xsd&quot; xmlns:iden=&quot;http://x-road.eu/xsd/identifiers&quot;&#xd;
xmlns:prod=&quot;http://test.x-road.fi/producer&quot;&gt;&#xd;
   &lt;soapenv:Header&gt;&#xd;
      &lt;xro:protocolVersion&gt;4.x&lt;/xro:protocolVersion&gt;&#xd;
      &lt;xro:id&gt;TEST7a&lt;/xro:id&gt;&#xd;
      &lt;xro:userId&gt;EE1234567890&lt;/xro:userId&gt;&#xd;
      &lt;xro:client iden:objectType=&quot;SUBSYSTEM&quot;&gt;&#xd;
         &lt;iden:xRoadInstance&gt;${Instance}&lt;/iden:xRoadInstance&gt;&#xd;
         &lt;iden:memberClass&gt;GOV&lt;/iden:memberClass&gt;&#xd;
         &lt;iden:memberCode&gt;${MemberCode}&lt;/iden:memberCode&gt;&#xd;
         &lt;iden:subsystemCode&gt;perftestclient&lt;/iden:subsystemCode&gt;&#xd;
      &lt;/xro:client&gt;&#xd;
      &lt;xro:service iden:objectType=&quot;SERVICE&quot;&gt;&#xd;
         &lt;iden:xRoadInstance&gt;${Instance}&lt;/iden:xRoadInstance&gt;&#xd;
         &lt;iden:memberClass&gt;GOV&lt;/iden:memberClass&gt;&#xd;
         &lt;iden:memberCode&gt;${MemberCode}&lt;/iden:memberCode&gt;&#xd;
         &lt;iden:subsystemCode&gt;perftestservice&lt;/iden:subsystemCode&gt;&#xd;
         &lt;iden:serviceCode&gt;testService&lt;/iden:serviceCode&gt;&#xd;
         &lt;iden:serviceVersion&gt;v1&lt;/iden:serviceVersion&gt;&#xd;
      &lt;/xro:service&gt;&#xd;
   &lt;/soapenv:Header&gt;&#xd;
   &lt;soapenv:Body&gt;&#xd;
      &lt;prod:testService&gt;&#xd;
             &lt;request&gt;&#xd;
                &lt;responseBodySize&gt;1000000000&lt;/responseBodySize&gt;&#xd;
                &lt;responseAttachmentSize&gt;0&lt;/responseAttachmentSize&gt;&#xd;
            &lt;/request&gt;&#xd;
     &lt;/prod:testService&gt;&#xd;
   &lt;/soapenv:Body&gt;&#xd;
&lt;/soapenv:Envelope&gt;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">test-service-0.0.2-SNAPSHOT/Endpoint</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">Sanomankoko 10K</stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="false">
          <stringProp name="ConstantTimer.delay">${timer}</stringProp>
        </ConstantTimer>
        <hashTree/>
        <ResultCollector guiclass="StatVisualizer" testclass="ResultCollector" testname="Aggregate Report" enabled="false">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>false</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <hostname>true</hostname>
              <threadCounts>true</threadCounts>
              <sampleCount>true</sampleCount>
            </value>
          </objProp>
          <stringProp name="filename">../logs/runs/TG77_500K_400K_${__time(dd-MM-yyyy&apos;_T_&apos;HH:mm)}.jtl</stringProp>
        </ResultCollector>
        <hashTree/>
        <kg.apc.jmeter.reporters.LoadosophiaUploader guiclass="kg.apc.jmeter.reporters.LoadosophiaUploaderGui" testclass="kg.apc.jmeter.reporters.LoadosophiaUploader" testname="jp@gc - Loadosophia.org Uploader" enabled="false">
          <elementProp name="arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="classname">kg.apc.jmeter.reporters.LoadosophiaClient</stringProp>
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>false</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <hostname>true</hostname>
              <threadCounts>true</threadCounts>
              <sampleCount>true</sampleCount>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
          <stringProp name="project"></stringProp>
          <stringProp name="uploadToken">${loadsoftoken}</stringProp>
          <stringProp name="storeDir">../logs/Loadsof/</stringProp>
          <stringProp name="color">none</stringProp>
          <stringProp name="title">TG77 1G_400 users_${__time(dd-MM-yyyy&apos;_T_&apos;HH:mm)}</stringProp>
          <boolProp name="useOnline">true</boolProp>
        </kg.apc.jmeter.reporters.LoadosophiaUploader>
        <hashTree/>
      </hashTree>
      <kg.apc.jmeter.threads.UltimateThreadGroup guiclass="kg.apc.jmeter.threads.UltimateThreadGroupGui" testclass="kg.apc.jmeter.threads.UltimateThreadGroup" testname="TG 78 Sanomakoko 10K Stepping" enabled="false">
        <collectionProp name="ultimatethreadgroupdata">
          <collectionProp name="835365043">
            <stringProp name="49">1</stringProp>
            <stringProp name="48">0</stringProp>
            <stringProp name="48">0</stringProp>
            <stringProp name="48873">180</stringProp>
            <stringProp name="10">10</stringProp>
          </collectionProp>
          <collectionProp name="1939849750">
            <stringProp name="1691">50</stringProp>
            <stringProp name="1722">60</stringProp>
            <stringProp name="48">0</stringProp>
            <stringProp name="48687">120</stringProp>
            <stringProp name="10">10</stringProp>
          </collectionProp>
          <collectionProp name="1939849750">
            <stringProp name="1691">50</stringProp>
            <stringProp name="1722">60</stringProp>
            <stringProp name="48">0</stringProp>
            <stringProp name="48687">120</stringProp>
            <stringProp name="10">10</stringProp>
          </collectionProp>
          <collectionProp name="671386979">
            <stringProp name="1755">72</stringProp>
            <stringProp name="1722">60</stringProp>
            <stringProp name="48">0</stringProp>
            <stringProp name="48687">120</stringProp>
            <stringProp name="10">10</stringProp>
          </collectionProp>
          <collectionProp name="2012084857">
            <stringProp name="1722">60</stringProp>
            <stringProp name="48687">120</stringProp>
            <stringProp name="51">3</stringProp>
            <stringProp name="60">60</stringProp>
            <stringProp name="10">10</stringProp>
          </collectionProp>
        </collectionProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <intProp name="LoopController.loops">-1</intProp>
        </elementProp>
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
      </kg.apc.jmeter.threads.UltimateThreadGroup>
      <hashTree>
        <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP Request Defaults" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="Kysely" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">Kysely</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">${path}</stringProp>
          <stringProp name="HTTPSampler.concurrentPool">4</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </ConfigTestElement>
        <hashTree/>
        <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="HTTP Cookie Manager" enabled="false">
          <collectionProp name="CookieManager.cookies"/>
          <stringProp name="TestPlan.comments">Sanomankoko</stringProp>
          <boolProp name="CookieManager.clearEachIteration">false</boolProp>
          <stringProp name="CookieManager.implementation">org.apache.jmeter.protocol.http.control.HC4CookieHandler</stringProp>
        </CookieManager>
        <hashTree/>
        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="false">
          <collectionProp name="HeaderManager.headers">
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Content-Type</stringProp>
              <stringProp name="Header.value">text/xml; charset=utf-8</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">SOAPAction</stringProp>
              <stringProp name="Header.value"></stringProp>
            </elementProp>
          </collectionProp>
        </HeaderManager>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="TG78 10K" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; &#xd;
xmlns:xro=&quot;http://x-road.eu/xsd/xroad.xsd&quot; xmlns:iden=&quot;http://x-road.eu/xsd/identifiers&quot;&#xd;
xmlns:prod=&quot;http://test.x-road.fi/producer&quot;&gt;&#xd;
   &lt;soapenv:Header&gt;&#xd;
      &lt;xro:protocolVersion&gt;4.x&lt;/xro:protocolVersion&gt;&#xd;
      &lt;xro:id&gt;TEST7a&lt;/xro:id&gt;&#xd;
      &lt;xro:userId&gt;EE1234567890&lt;/xro:userId&gt;&#xd;
      &lt;xro:client iden:objectType=&quot;SUBSYSTEM&quot;&gt;&#xd;
         &lt;iden:xRoadInstance&gt;${Instance}&lt;/iden:xRoadInstance&gt;&#xd;
         &lt;iden:memberClass&gt;GOV&lt;/iden:memberClass&gt;&#xd;
         &lt;iden:memberCode&gt;${MemberCode}&lt;/iden:memberCode&gt;&#xd;
         &lt;iden:subsystemCode&gt;perftestclient&lt;/iden:subsystemCode&gt;&#xd;
      &lt;/xro:client&gt;&#xd;
      &lt;xro:service iden:objectType=&quot;SERVICE&quot;&gt;&#xd;
         &lt;iden:xRoadInstance&gt;${Instance}&lt;/iden:xRoadInstance&gt;&#xd;
         &lt;iden:memberClass&gt;GOV&lt;/iden:memberClass&gt;&#xd;
         &lt;iden:memberCode&gt;${MemberCode}&lt;/iden:memberCode&gt;&#xd;
         &lt;iden:subsystemCode&gt;perftestservice&lt;/iden:subsystemCode&gt;&#xd;
         &lt;iden:serviceCode&gt;testService&lt;/iden:serviceCode&gt;&#xd;
         &lt;iden:serviceVersion&gt;v1&lt;/iden:serviceVersion&gt;&#xd;
      &lt;/xro:service&gt;&#xd;
   &lt;/soapenv:Header&gt;&#xd;
   &lt;soapenv:Body&gt;&#xd;
      &lt;prod:testService&gt;&#xd;
             &lt;request&gt;&#xd;
                &lt;responseBodySize&gt;10000&lt;/responseBodySize&gt;&#xd;
                &lt;responseAttachmentSize&gt;0&lt;/responseAttachmentSize&gt;&#xd;
            &lt;/request&gt;&#xd;
     &lt;/prod:testService&gt;&#xd;
   &lt;/soapenv:Body&gt;&#xd;
&lt;/soapenv:Envelope&gt;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">test-service-0.0.2-SNAPSHOT/Endpoint</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments"> Sanomakoko100M</stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="false">
          <stringProp name="ConstantTimer.delay">${timer}</stringProp>
        </ConstantTimer>
        <hashTree/>
        <ResultCollector guiclass="StatVisualizer" testclass="ResultCollector" testname="Aggregate Report" enabled="false">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>false</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <hostname>true</hostname>
              <threadCounts>true</threadCounts>
              <sampleCount>true</sampleCount>
            </value>
          </objProp>
          <stringProp name="filename">../logs/runs/TG78_10K_low_${__time(dd-MM-yyyy&apos;_T_&apos;HH:mm)}.jtl</stringProp>
        </ResultCollector>
        <hashTree/>
        <kg.apc.jmeter.reporters.LoadosophiaUploader guiclass="kg.apc.jmeter.reporters.LoadosophiaUploaderGui" testclass="kg.apc.jmeter.reporters.LoadosophiaUploader" testname="jp@gc - Loadosophia.org Uploader" enabled="false">
          <elementProp name="arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="classname">kg.apc.jmeter.reporters.LoadosophiaClient</stringProp>
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>false</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <hostname>true</hostname>
              <threadCounts>true</threadCounts>
              <sampleCount>true</sampleCount>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
          <stringProp name="project"></stringProp>
          <stringProp name="uploadToken">${loadsoftoken}</stringProp>
          <stringProp name="storeDir">../logs/Loadsof/</stringProp>
          <stringProp name="color">none</stringProp>
          <stringProp name="title">TG78 10K Stepping 0302_low_${__time(dd-MM-yyyy&apos;_T_&apos;HH:mm)}</stringProp>
          <boolProp name="useOnline">true</boolProp>
        </kg.apc.jmeter.reporters.LoadosophiaUploader>
        <hashTree/>
      </hashTree>
      <kg.apc.jmeter.threads.UltimateThreadGroup guiclass="kg.apc.jmeter.threads.UltimateThreadGroupGui" testclass="kg.apc.jmeter.threads.UltimateThreadGroup" testname="TG 79 Sanomakoko 50K Stepping" enabled="false">
        <collectionProp name="ultimatethreadgroupdata">
          <collectionProp name="835365043">
            <stringProp name="49">1</stringProp>
            <stringProp name="48">0</stringProp>
            <stringProp name="48">0</stringProp>
            <stringProp name="48873">180</stringProp>
            <stringProp name="10">10</stringProp>
          </collectionProp>
          <collectionProp name="1939849750">
            <stringProp name="1691">50</stringProp>
            <stringProp name="1722">60</stringProp>
            <stringProp name="48">0</stringProp>
            <stringProp name="48687">120</stringProp>
            <stringProp name="10">10</stringProp>
          </collectionProp>
          <collectionProp name="1939849750">
            <stringProp name="1691">50</stringProp>
            <stringProp name="1722">60</stringProp>
            <stringProp name="48">0</stringProp>
            <stringProp name="48687">120</stringProp>
            <stringProp name="10">10</stringProp>
          </collectionProp>
          <collectionProp name="-679710889">
            <stringProp name="1598">20</stringProp>
            <stringProp name="1722">60</stringProp>
            <stringProp name="48">0</stringProp>
            <stringProp name="48687">120</stringProp>
            <stringProp name="10">10</stringProp>
          </collectionProp>
          <collectionProp name="-936775831">
            <stringProp name="1572">15</stringProp>
            <stringProp name="48687">120</stringProp>
            <stringProp name="48">0</stringProp>
            <stringProp name="1722">60</stringProp>
            <stringProp name="10">10</stringProp>
          </collectionProp>
        </collectionProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <intProp name="LoopController.loops">-1</intProp>
        </elementProp>
        <stringProp name="ThreadGroup.on_sample_error">stoptest</stringProp>
      </kg.apc.jmeter.threads.UltimateThreadGroup>
      <hashTree>
        <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP Request Defaults" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="Kysely" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">Kysely</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">${path}</stringProp>
          <stringProp name="HTTPSampler.concurrentPool">4</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </ConfigTestElement>
        <hashTree/>
        <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="HTTP Cookie Manager" enabled="false">
          <collectionProp name="CookieManager.cookies"/>
          <stringProp name="TestPlan.comments">Sanomankoko</stringProp>
          <boolProp name="CookieManager.clearEachIteration">false</boolProp>
          <stringProp name="CookieManager.implementation">org.apache.jmeter.protocol.http.control.HC4CookieHandler</stringProp>
        </CookieManager>
        <hashTree/>
        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="false">
          <collectionProp name="HeaderManager.headers">
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Content-Type</stringProp>
              <stringProp name="Header.value">text/xml; charset=utf-8</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">SOAPAction</stringProp>
              <stringProp name="Header.value"></stringProp>
            </elementProp>
          </collectionProp>
        </HeaderManager>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="TG79 50 K" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; &#xd;
xmlns:xro=&quot;http://x-road.eu/xsd/xroad.xsd&quot; xmlns:iden=&quot;http://x-road.eu/xsd/identifiers&quot;&#xd;
xmlns:prod=&quot;http://test.x-road.fi/producer&quot;&gt;&#xd;
   &lt;soapenv:Header&gt;&#xd;
      &lt;xro:protocolVersion&gt;4.x&lt;/xro:protocolVersion&gt;&#xd;
      &lt;xro:id&gt;TEST7a&lt;/xro:id&gt;&#xd;
      &lt;xro:userId&gt;EE1234567890&lt;/xro:userId&gt;&#xd;
      &lt;xro:client iden:objectType=&quot;SUBSYSTEM&quot;&gt;&#xd;
         &lt;iden:xRoadInstance&gt;${Instance}&lt;/iden:xRoadInstance&gt;&#xd;
         &lt;iden:memberClass&gt;GOV&lt;/iden:memberClass&gt;&#xd;
         &lt;iden:memberCode&gt;${MemberCode}&lt;/iden:memberCode&gt;&#xd;
         &lt;iden:subsystemCode&gt;perftestclient&lt;/iden:subsystemCode&gt;&#xd;
      &lt;/xro:client&gt;&#xd;
      &lt;xro:service iden:objectType=&quot;SERVICE&quot;&gt;&#xd;
         &lt;iden:xRoadInstance&gt;${Instance}&lt;/iden:xRoadInstance&gt;&#xd;
         &lt;iden:memberClass&gt;GOV&lt;/iden:memberClass&gt;&#xd;
         &lt;iden:memberCode&gt;${MemberCode}&lt;/iden:memberCode&gt;&#xd;
         &lt;iden:subsystemCode&gt;perftestservice&lt;/iden:subsystemCode&gt;&#xd;
         &lt;iden:serviceCode&gt;testService&lt;/iden:serviceCode&gt;&#xd;
         &lt;iden:serviceVersion&gt;v1&lt;/iden:serviceVersion&gt;&#xd;
      &lt;/xro:service&gt;&#xd;
   &lt;/soapenv:Header&gt;&#xd;
   &lt;soapenv:Body&gt;&#xd;
      &lt;prod:testService&gt;&#xd;
             &lt;request&gt;&#xd;
                &lt;responseBodySize&gt;50000&lt;/responseBodySize&gt;&#xd;
                &lt;responseAttachmentSize&gt;0&lt;/responseAttachmentSize&gt;&#xd;
            &lt;/request&gt;&#xd;
     &lt;/prod:testService&gt;&#xd;
   &lt;/soapenv:Body&gt;&#xd;
&lt;/soapenv:Envelope&gt;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">test-service-0.0.2-SNAPSHOT/Endpoint</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments"> Sanomakoko100M</stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="false">
          <stringProp name="ConstantTimer.delay">${timer}</stringProp>
        </ConstantTimer>
        <hashTree/>
        <ResultCollector guiclass="StatVisualizer" testclass="ResultCollector" testname="Aggregate Report" enabled="false">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>false</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <hostname>true</hostname>
              <threadCounts>true</threadCounts>
              <sampleCount>true</sampleCount>
            </value>
          </objProp>
          <stringProp name="filename">../logs/runs/TG79_50K_${__time(dd-MM-yyyy&apos;_T_&apos;HH:mm)}.jtl</stringProp>
        </ResultCollector>
        <hashTree/>
        <kg.apc.jmeter.reporters.LoadosophiaUploader guiclass="kg.apc.jmeter.reporters.LoadosophiaUploaderGui" testclass="kg.apc.jmeter.reporters.LoadosophiaUploader" testname="jp@gc - Loadosophia.org Uploader" enabled="false">
          <elementProp name="arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="classname">kg.apc.jmeter.reporters.LoadosophiaClient</stringProp>
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>false</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <hostname>true</hostname>
              <threadCounts>true</threadCounts>
              <sampleCount>true</sampleCount>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
          <stringProp name="project"></stringProp>
          <stringProp name="uploadToken">${loadsoftoken}</stringProp>
          <stringProp name="storeDir">../logs/Loadsof/</stringProp>
          <stringProp name="color">none</stringProp>
          <stringProp name="title">TG79 50K Stepping_${__time(dd-MM-yyyy&apos;_T_&apos;HH:mm)}</stringProp>
          <boolProp name="useOnline">true</boolProp>
        </kg.apc.jmeter.reporters.LoadosophiaUploader>
        <hashTree/>
      </hashTree>
      <kg.apc.jmeter.threads.UltimateThreadGroup guiclass="kg.apc.jmeter.threads.UltimateThreadGroupGui" testclass="kg.apc.jmeter.threads.UltimateThreadGroup" testname="TG 80 Sanomakoko 100K Stepping" enabled="false">
        <collectionProp name="ultimatethreadgroupdata">
          <collectionProp name="835365043">
            <stringProp name="49">1</stringProp>
            <stringProp name="48">0</stringProp>
            <stringProp name="48">0</stringProp>
            <stringProp name="48873">180</stringProp>
            <stringProp name="10">10</stringProp>
          </collectionProp>
          <collectionProp name="2041888139">
            <stringProp name="48630">105</stringProp>
            <stringProp name="1722">60</stringProp>
            <stringProp name="48">0</stringProp>
            <stringProp name="48687">120</stringProp>
            <stringProp name="10">10</stringProp>
          </collectionProp>
          <collectionProp name="1126496291">
            <stringProp name="1629">30</stringProp>
            <stringProp name="48687">120</stringProp>
            <stringProp name="48">0</stringProp>
            <stringProp name="1722">60</stringProp>
            <stringProp name="10">10</stringProp>
          </collectionProp>
        </collectionProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <intProp name="LoopController.loops">-1</intProp>
        </elementProp>
        <stringProp name="ThreadGroup.on_sample_error">stoptest</stringProp>
      </kg.apc.jmeter.threads.UltimateThreadGroup>
      <hashTree>
        <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP Request Defaults" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="Kysely" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">Kysely</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">${path}</stringProp>
          <stringProp name="HTTPSampler.concurrentPool">4</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </ConfigTestElement>
        <hashTree/>
        <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="HTTP Cookie Manager" enabled="false">
          <collectionProp name="CookieManager.cookies"/>
          <stringProp name="TestPlan.comments">Sanomankoko</stringProp>
          <boolProp name="CookieManager.clearEachIteration">false</boolProp>
          <stringProp name="CookieManager.implementation">org.apache.jmeter.protocol.http.control.HC4CookieHandler</stringProp>
        </CookieManager>
        <hashTree/>
        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="false">
          <collectionProp name="HeaderManager.headers">
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Content-Type</stringProp>
              <stringProp name="Header.value">text/xml; charset=utf-8</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">SOAPAction</stringProp>
              <stringProp name="Header.value"></stringProp>
            </elementProp>
          </collectionProp>
        </HeaderManager>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="TG 80 100K" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; &#xd;
xmlns:xro=&quot;http://x-road.eu/xsd/xroad.xsd&quot; xmlns:iden=&quot;http://x-road.eu/xsd/identifiers&quot;&#xd;
xmlns:prod=&quot;http://test.x-road.fi/producer&quot;&gt;&#xd;
   &lt;soapenv:Header&gt;&#xd;
      &lt;xro:protocolVersion&gt;4.x&lt;/xro:protocolVersion&gt;&#xd;
      &lt;xro:id&gt;TEST7a&lt;/xro:id&gt;&#xd;
      &lt;xro:userId&gt;EE1234567890&lt;/xro:userId&gt;&#xd;
      &lt;xro:client iden:objectType=&quot;SUBSYSTEM&quot;&gt;&#xd;
         &lt;iden:xRoadInstance&gt;${Instance}&lt;/iden:xRoadInstance&gt;&#xd;
         &lt;iden:memberClass&gt;GOV&lt;/iden:memberClass&gt;&#xd;
         &lt;iden:memberCode&gt;${MemberCode}&lt;/iden:memberCode&gt;&#xd;
         &lt;iden:subsystemCode&gt;perftestclient&lt;/iden:subsystemCode&gt;&#xd;
      &lt;/xro:client&gt;&#xd;
      &lt;xro:service iden:objectType=&quot;SERVICE&quot;&gt;&#xd;
         &lt;iden:xRoadInstance&gt;${Instance}&lt;/iden:xRoadInstance&gt;&#xd;
         &lt;iden:memberClass&gt;GOV&lt;/iden:memberClass&gt;&#xd;
         &lt;iden:memberCode&gt;${MemberCode}&lt;/iden:memberCode&gt;&#xd;
         &lt;iden:subsystemCode&gt;perftestservice&lt;/iden:subsystemCode&gt;&#xd;
         &lt;iden:serviceCode&gt;testService&lt;/iden:serviceCode&gt;&#xd;
         &lt;iden:serviceVersion&gt;v1&lt;/iden:serviceVersion&gt;&#xd;
      &lt;/xro:service&gt;&#xd;
   &lt;/soapenv:Header&gt;&#xd;
   &lt;soapenv:Body&gt;&#xd;
      &lt;prod:testService&gt;&#xd;
             &lt;request&gt;&#xd;
                &lt;responseBodySize&gt;100000&lt;/responseBodySize&gt;&#xd;
                &lt;responseAttachmentSize&gt;0&lt;/responseAttachmentSize&gt;&#xd;
            &lt;/request&gt;&#xd;
     &lt;/prod:testService&gt;&#xd;
   &lt;/soapenv:Body&gt;&#xd;
&lt;/soapenv:Envelope&gt;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">test-service-0.0.2-SNAPSHOT/Endpoint</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments"> Sanomakoko100M</stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="false">
          <stringProp name="ConstantTimer.delay">${timer}</stringProp>
        </ConstantTimer>
        <hashTree/>
        <ResultCollector guiclass="StatVisualizer" testclass="ResultCollector" testname="Aggregate Report" enabled="false">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>false</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <hostname>true</hostname>
              <threadCounts>true</threadCounts>
              <sampleCount>true</sampleCount>
            </value>
          </objProp>
          <stringProp name="filename">../logs/runs/TG80_100K_${__time(dd-MM-yyyy&apos;_T_&apos;HH:mm)}.jtl</stringProp>
        </ResultCollector>
        <hashTree/>
        <kg.apc.jmeter.reporters.LoadosophiaUploader guiclass="kg.apc.jmeter.reporters.LoadosophiaUploaderGui" testclass="kg.apc.jmeter.reporters.LoadosophiaUploader" testname="jp@gc - Loadosophia.org Uploader" enabled="false">
          <elementProp name="arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="classname">kg.apc.jmeter.reporters.LoadosophiaClient</stringProp>
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>false</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <hostname>true</hostname>
              <threadCounts>true</threadCounts>
              <sampleCount>true</sampleCount>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
          <stringProp name="project"></stringProp>
          <stringProp name="uploadToken">${loadsoftoken}</stringProp>
          <stringProp name="storeDir">../logs/Loadsof/</stringProp>
          <stringProp name="color">none</stringProp>
          <stringProp name="title">TG80 100K Stepping_${__time(dd-MM-yyyy&apos;_T_&apos;HH:mm)}</stringProp>
          <boolProp name="useOnline">true</boolProp>
        </kg.apc.jmeter.reporters.LoadosophiaUploader>
        <hashTree/>
      </hashTree>
      <kg.apc.jmeter.threads.UltimateThreadGroup guiclass="kg.apc.jmeter.threads.UltimateThreadGroupGui" testclass="kg.apc.jmeter.threads.UltimateThreadGroup" testname="TG 81 Sanomakoko 500K Stepping" enabled="false">
        <collectionProp name="ultimatethreadgroupdata">
          <collectionProp name="835367261">
            <stringProp name="49">1</stringProp>
            <stringProp name="48">0</stringProp>
            <stringProp name="48">0</stringProp>
            <stringProp name="48873">180</stringProp>
            <stringProp name="48">0</stringProp>
          </collectionProp>
          <collectionProp name="94513443">
            <stringProp name="48656">110</stringProp>
            <stringProp name="1722">60</stringProp>
            <stringProp name="48">0</stringProp>
            <stringProp name="48687">120</stringProp>
            <stringProp name="48">0</stringProp>
          </collectionProp>
          <collectionProp name="-1115810479">
            <stringProp name="1606">28</stringProp>
            <stringProp name="48687">120</stringProp>
            <stringProp name="48">0</stringProp>
            <stringProp name="1722">60</stringProp>
            <stringProp name="48">0</stringProp>
          </collectionProp>
        </collectionProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <intProp name="LoopController.loops">-1</intProp>
        </elementProp>
        <stringProp name="ThreadGroup.on_sample_error">stoptest</stringProp>
      </kg.apc.jmeter.threads.UltimateThreadGroup>
      <hashTree>
        <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP Request Defaults" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="Kysely" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">Kysely</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">${path}</stringProp>
          <stringProp name="HTTPSampler.concurrentPool">4</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </ConfigTestElement>
        <hashTree/>
        <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="HTTP Cookie Manager" enabled="false">
          <collectionProp name="CookieManager.cookies"/>
          <stringProp name="TestPlan.comments">Sanomankoko</stringProp>
          <boolProp name="CookieManager.clearEachIteration">false</boolProp>
          <stringProp name="CookieManager.implementation">org.apache.jmeter.protocol.http.control.HC4CookieHandler</stringProp>
        </CookieManager>
        <hashTree/>
        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="false">
          <collectionProp name="HeaderManager.headers">
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Content-Type</stringProp>
              <stringProp name="Header.value">text/xml; charset=utf-8</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">SOAPAction</stringProp>
              <stringProp name="Header.value"></stringProp>
            </elementProp>
          </collectionProp>
        </HeaderManager>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="TG 81 500K" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; &#xd;
xmlns:xro=&quot;http://x-road.eu/xsd/xroad.xsd&quot; xmlns:iden=&quot;http://x-road.eu/xsd/identifiers&quot;&#xd;
xmlns:prod=&quot;http://test.x-road.fi/producer&quot;&gt;&#xd;
   &lt;soapenv:Header&gt;&#xd;
      &lt;xro:protocolVersion&gt;4.x&lt;/xro:protocolVersion&gt;&#xd;
      &lt;xro:id&gt;TEST7a&lt;/xro:id&gt;&#xd;
      &lt;xro:userId&gt;EE1234567890&lt;/xro:userId&gt;&#xd;
      &lt;xro:client iden:objectType=&quot;SUBSYSTEM&quot;&gt;&#xd;
         &lt;iden:xRoadInstance&gt;${Instance}&lt;/iden:xRoadInstance&gt;&#xd;
         &lt;iden:memberClass&gt;GOV&lt;/iden:memberClass&gt;&#xd;
         &lt;iden:memberCode&gt;${MemberCode}&lt;/iden:memberCode&gt;&#xd;
         &lt;iden:subsystemCode&gt;perftestclient&lt;/iden:subsystemCode&gt;&#xd;
      &lt;/xro:client&gt;&#xd;
      &lt;xro:service iden:objectType=&quot;SERVICE&quot;&gt;&#xd;
         &lt;iden:xRoadInstance&gt;${Instance}&lt;/iden:xRoadInstance&gt;&#xd;
         &lt;iden:memberClass&gt;GOV&lt;/iden:memberClass&gt;&#xd;
         &lt;iden:memberCode&gt;${MemberCode}&lt;/iden:memberCode&gt;&#xd;
         &lt;iden:subsystemCode&gt;perftestservice&lt;/iden:subsystemCode&gt;&#xd;
         &lt;iden:serviceCode&gt;testService&lt;/iden:serviceCode&gt;&#xd;
         &lt;iden:serviceVersion&gt;v1&lt;/iden:serviceVersion&gt;&#xd;
      &lt;/xro:service&gt;&#xd;
   &lt;/soapenv:Header&gt;&#xd;
   &lt;soapenv:Body&gt;&#xd;
      &lt;prod:testService&gt;&#xd;
             &lt;request&gt;&#xd;
                &lt;responseBodySize&gt;500000&lt;/responseBodySize&gt;&#xd;
                &lt;responseAttachmentSize&gt;0&lt;/responseAttachmentSize&gt;&#xd;
            &lt;/request&gt;&#xd;
     &lt;/prod:testService&gt;&#xd;
   &lt;/soapenv:Body&gt;&#xd;
&lt;/soapenv:Envelope&gt;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">test-service-0.0.2-SNAPSHOT/Endpoint</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments"> Sanomakoko100M</stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="false">
          <stringProp name="ConstantTimer.delay">${timer}</stringProp>
        </ConstantTimer>
        <hashTree/>
        <ResultCollector guiclass="StatVisualizer" testclass="ResultCollector" testname="Aggregate Report" enabled="false">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>false</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <hostname>true</hostname>
              <threadCounts>true</threadCounts>
              <sampleCount>true</sampleCount>
            </value>
          </objProp>
          <stringProp name="filename">../logs/runs/TG81_500k_${__time(dd-MM-yyyy&apos;_T_&apos;HH:mm)}.jtl</stringProp>
        </ResultCollector>
        <hashTree/>
        <kg.apc.jmeter.reporters.LoadosophiaUploader guiclass="kg.apc.jmeter.reporters.LoadosophiaUploaderGui" testclass="kg.apc.jmeter.reporters.LoadosophiaUploader" testname="jp@gc - Loadosophia.org Uploader" enabled="false">
          <elementProp name="arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="classname">kg.apc.jmeter.reporters.LoadosophiaClient</stringProp>
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>false</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <hostname>true</hostname>
              <threadCounts>true</threadCounts>
              <sampleCount>true</sampleCount>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
          <stringProp name="project"></stringProp>
          <stringProp name="uploadToken">${loadsoftoken}</stringProp>
          <stringProp name="storeDir">../logs/Loadsof/</stringProp>
          <stringProp name="color">none</stringProp>
          <stringProp name="title">TG81 500k Stepping_${__time(dd-MM-yyyy&apos;_T_&apos;HH:mm)}</stringProp>
          <boolProp name="useOnline">true</boolProp>
        </kg.apc.jmeter.reporters.LoadosophiaUploader>
        <hashTree/>
      </hashTree>
      <kg.apc.jmeter.threads.UltimateThreadGroup guiclass="kg.apc.jmeter.threads.UltimateThreadGroupGui" testclass="kg.apc.jmeter.threads.UltimateThreadGroup" testname="TG 82 Sanomakoko 1 M Stepping" enabled="false">
        <collectionProp name="ultimatethreadgroupdata">
          <collectionProp name="835367261">
            <stringProp name="49">1</stringProp>
            <stringProp name="48">0</stringProp>
            <stringProp name="48">0</stringProp>
            <stringProp name="48873">180</stringProp>
            <stringProp name="48">0</stringProp>
          </collectionProp>
          <collectionProp name="225783637">
            <stringProp name="1822">97</stringProp>
            <stringProp name="1722">60</stringProp>
            <stringProp name="48">0</stringProp>
            <stringProp name="48687">120</stringProp>
            <stringProp name="48">0</stringProp>
          </collectionProp>
          <collectionProp name="-1150904277">
            <stringProp name="1605">27</stringProp>
            <stringProp name="48687">120</stringProp>
            <stringProp name="48">0</stringProp>
            <stringProp name="1722">60</stringProp>
            <stringProp name="48">0</stringProp>
          </collectionProp>
        </collectionProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <intProp name="LoopController.loops">-1</intProp>
        </elementProp>
        <stringProp name="ThreadGroup.on_sample_error">stoptest</stringProp>
      </kg.apc.jmeter.threads.UltimateThreadGroup>
      <hashTree>
        <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP Request Defaults" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="Kysely" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">Kysely</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">${path}</stringProp>
          <stringProp name="HTTPSampler.concurrentPool">4</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </ConfigTestElement>
        <hashTree/>
        <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="HTTP Cookie Manager" enabled="false">
          <collectionProp name="CookieManager.cookies"/>
          <stringProp name="TestPlan.comments">Sanomankoko</stringProp>
          <boolProp name="CookieManager.clearEachIteration">false</boolProp>
          <stringProp name="CookieManager.implementation">org.apache.jmeter.protocol.http.control.HC4CookieHandler</stringProp>
        </CookieManager>
        <hashTree/>
        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="false">
          <collectionProp name="HeaderManager.headers">
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Content-Type</stringProp>
              <stringProp name="Header.value">text/xml; charset=utf-8</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">SOAPAction</stringProp>
              <stringProp name="Header.value"></stringProp>
            </elementProp>
          </collectionProp>
        </HeaderManager>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="TG 82 1 M" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; &#xd;
xmlns:xro=&quot;http://x-road.eu/xsd/xroad.xsd&quot; xmlns:iden=&quot;http://x-road.eu/xsd/identifiers&quot;&#xd;
xmlns:prod=&quot;http://test.x-road.fi/producer&quot;&gt;&#xd;
   &lt;soapenv:Header&gt;&#xd;
      &lt;xro:protocolVersion&gt;4.x&lt;/xro:protocolVersion&gt;&#xd;
      &lt;xro:id&gt;TEST7a&lt;/xro:id&gt;&#xd;
      &lt;xro:userId&gt;EE1234567890&lt;/xro:userId&gt;&#xd;
      &lt;xro:client iden:objectType=&quot;SUBSYSTEM&quot;&gt;&#xd;
         &lt;iden:xRoadInstance&gt;${Instance}&lt;/iden:xRoadInstance&gt;&#xd;
         &lt;iden:memberClass&gt;GOV&lt;/iden:memberClass&gt;&#xd;
         &lt;iden:memberCode&gt;${MemberCode}&lt;/iden:memberCode&gt;&#xd;
         &lt;iden:subsystemCode&gt;perftestclient&lt;/iden:subsystemCode&gt;&#xd;
      &lt;/xro:client&gt;&#xd;
      &lt;xro:service iden:objectType=&quot;SERVICE&quot;&gt;&#xd;
         &lt;iden:xRoadInstance&gt;${Instance}&lt;/iden:xRoadInstance&gt;&#xd;
         &lt;iden:memberClass&gt;GOV&lt;/iden:memberClass&gt;&#xd;
         &lt;iden:memberCode&gt;${MemberCode}&lt;/iden:memberCode&gt;&#xd;
         &lt;iden:subsystemCode&gt;perftestservice&lt;/iden:subsystemCode&gt;&#xd;
         &lt;iden:serviceCode&gt;testService&lt;/iden:serviceCode&gt;&#xd;
         &lt;iden:serviceVersion&gt;v1&lt;/iden:serviceVersion&gt;&#xd;
      &lt;/xro:service&gt;&#xd;
   &lt;/soapenv:Header&gt;&#xd;
   &lt;soapenv:Body&gt;&#xd;
      &lt;prod:testService&gt;&#xd;
             &lt;request&gt;&#xd;
                &lt;responseBodySize&gt;1000000&lt;/responseBodySize&gt;&#xd;
                &lt;responseAttachmentSize&gt;0&lt;/responseAttachmentSize&gt;&#xd;
            &lt;/request&gt;&#xd;
     &lt;/prod:testService&gt;&#xd;
   &lt;/soapenv:Body&gt;&#xd;
&lt;/soapenv:Envelope&gt;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">test-service-0.0.2-SNAPSHOT/Endpoint</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments"> Sanomakoko100M</stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="false">
          <stringProp name="ConstantTimer.delay">${timer}</stringProp>
        </ConstantTimer>
        <hashTree/>
        <ResultCollector guiclass="StatVisualizer" testclass="ResultCollector" testname="Aggregate Report" enabled="false">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>false</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <hostname>true</hostname>
              <threadCounts>true</threadCounts>
              <sampleCount>true</sampleCount>
            </value>
          </objProp>
          <stringProp name="filename">../logs/runs/TG82_1M_${__time(dd-MM-yyyy&apos;_T_&apos;HH:mm)}.jtl</stringProp>
        </ResultCollector>
        <hashTree/>
        <kg.apc.jmeter.reporters.LoadosophiaUploader guiclass="kg.apc.jmeter.reporters.LoadosophiaUploaderGui" testclass="kg.apc.jmeter.reporters.LoadosophiaUploader" testname="jp@gc - Loadosophia.org Uploader" enabled="false">
          <elementProp name="arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="classname">kg.apc.jmeter.reporters.LoadosophiaClient</stringProp>
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>false</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <hostname>true</hostname>
              <threadCounts>true</threadCounts>
              <sampleCount>true</sampleCount>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
          <stringProp name="project"></stringProp>
          <stringProp name="uploadToken">${loadsoftoken}</stringProp>
          <stringProp name="storeDir">../logs/Loadsof/</stringProp>
          <stringProp name="color">none</stringProp>
          <stringProp name="title">TG82 1M Stepping_${__time(dd-MM-yyyy&apos;_T_&apos;HH:mm)}</stringProp>
          <boolProp name="useOnline">true</boolProp>
        </kg.apc.jmeter.reporters.LoadosophiaUploader>
        <hashTree/>
      </hashTree>
      <kg.apc.jmeter.threads.UltimateThreadGroup guiclass="kg.apc.jmeter.threads.UltimateThreadGroupGui" testclass="kg.apc.jmeter.threads.UltimateThreadGroup" testname="TG 83 Sanomakoko 5 M Stepping" enabled="false">
        <collectionProp name="ultimatethreadgroupdata">
          <collectionProp name="835367261">
            <stringProp name="49">1</stringProp>
            <stringProp name="48">0</stringProp>
            <stringProp name="48">0</stringProp>
            <stringProp name="48873">180</stringProp>
            <stringProp name="48">0</stringProp>
          </collectionProp>
          <collectionProp name="1372949637">
            <stringProp name="1575">18</stringProp>
            <stringProp name="1722">60</stringProp>
            <stringProp name="48">0</stringProp>
            <stringProp name="48687">120</stringProp>
            <stringProp name="48">0</stringProp>
          </collectionProp>
          <collectionProp name="-901679815">
            <stringProp name="1573">16</stringProp>
            <stringProp name="48687">120</stringProp>
            <stringProp name="48">0</stringProp>
            <stringProp name="1722">60</stringProp>
            <stringProp name="48">0</stringProp>
          </collectionProp>
        </collectionProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <intProp name="LoopController.loops">-1</intProp>
        </elementProp>
        <stringProp name="ThreadGroup.on_sample_error">stoptest</stringProp>
      </kg.apc.jmeter.threads.UltimateThreadGroup>
      <hashTree>
        <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP Request Defaults" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="Kysely" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">Kysely</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">${path}</stringProp>
          <stringProp name="HTTPSampler.concurrentPool">4</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </ConfigTestElement>
        <hashTree/>
        <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="HTTP Cookie Manager" enabled="false">
          <collectionProp name="CookieManager.cookies"/>
          <stringProp name="TestPlan.comments">Sanomankoko</stringProp>
          <boolProp name="CookieManager.clearEachIteration">false</boolProp>
          <stringProp name="CookieManager.implementation">org.apache.jmeter.protocol.http.control.HC4CookieHandler</stringProp>
        </CookieManager>
        <hashTree/>
        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="false">
          <collectionProp name="HeaderManager.headers">
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Content-Type</stringProp>
              <stringProp name="Header.value">text/xml; charset=utf-8</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">SOAPAction</stringProp>
              <stringProp name="Header.value"></stringProp>
            </elementProp>
          </collectionProp>
        </HeaderManager>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="TG 83 5 M" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; &#xd;
xmlns:xro=&quot;http://x-road.eu/xsd/xroad.xsd&quot; xmlns:iden=&quot;http://x-road.eu/xsd/identifiers&quot;&#xd;
xmlns:prod=&quot;http://test.x-road.fi/producer&quot;&gt;&#xd;
   &lt;soapenv:Header&gt;&#xd;
      &lt;xro:protocolVersion&gt;4.x&lt;/xro:protocolVersion&gt;&#xd;
      &lt;xro:id&gt;TEST7a&lt;/xro:id&gt;&#xd;
      &lt;xro:userId&gt;EE1234567890&lt;/xro:userId&gt;&#xd;
      &lt;xro:client iden:objectType=&quot;SUBSYSTEM&quot;&gt;&#xd;
         &lt;iden:xRoadInstance&gt;${Instance}&lt;/iden:xRoadInstance&gt;&#xd;
         &lt;iden:memberClass&gt;GOV&lt;/iden:memberClass&gt;&#xd;
         &lt;iden:memberCode&gt;${MemberCode}&lt;/iden:memberCode&gt;&#xd;
         &lt;iden:subsystemCode&gt;perftestclient&lt;/iden:subsystemCode&gt;&#xd;
      &lt;/xro:client&gt;&#xd;
      &lt;xro:service iden:objectType=&quot;SERVICE&quot;&gt;&#xd;
         &lt;iden:xRoadInstance&gt;${Instance}&lt;/iden:xRoadInstance&gt;&#xd;
         &lt;iden:memberClass&gt;GOV&lt;/iden:memberClass&gt;&#xd;
         &lt;iden:memberCode&gt;${MemberCode}&lt;/iden:memberCode&gt;&#xd;
         &lt;iden:subsystemCode&gt;perftestservice&lt;/iden:subsystemCode&gt;&#xd;
         &lt;iden:serviceCode&gt;testService&lt;/iden:serviceCode&gt;&#xd;
         &lt;iden:serviceVersion&gt;v1&lt;/iden:serviceVersion&gt;&#xd;
      &lt;/xro:service&gt;&#xd;
   &lt;/soapenv:Header&gt;&#xd;
   &lt;soapenv:Body&gt;&#xd;
      &lt;prod:testService&gt;&#xd;
             &lt;request&gt;&#xd;
                &lt;responseBodySize&gt;5000000&lt;/responseBodySize&gt;&#xd;
                &lt;responseAttachmentSize&gt;0&lt;/responseAttachmentSize&gt;&#xd;
            &lt;/request&gt;&#xd;
     &lt;/prod:testService&gt;&#xd;
   &lt;/soapenv:Body&gt;&#xd;
&lt;/soapenv:Envelope&gt;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">test-service-0.0.2-SNAPSHOT/Endpoint</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments"> Sanomakoko100M</stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="false">
          <stringProp name="ConstantTimer.delay">${timer}</stringProp>
        </ConstantTimer>
        <hashTree/>
        <ResultCollector guiclass="StatVisualizer" testclass="ResultCollector" testname="Aggregate Report" enabled="false">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>false</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <hostname>true</hostname>
              <threadCounts>true</threadCounts>
              <sampleCount>true</sampleCount>
            </value>
          </objProp>
          <stringProp name="filename">../logs/runs/TG83_5M_${__time(dd-MM-yyyy&apos;_T_&apos;HH:mm)}.jtl</stringProp>
        </ResultCollector>
        <hashTree/>
        <kg.apc.jmeter.reporters.LoadosophiaUploader guiclass="kg.apc.jmeter.reporters.LoadosophiaUploaderGui" testclass="kg.apc.jmeter.reporters.LoadosophiaUploader" testname="jp@gc - Loadosophia.org Uploader" enabled="false">
          <elementProp name="arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="classname">kg.apc.jmeter.reporters.LoadosophiaClient</stringProp>
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>false</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <hostname>true</hostname>
              <threadCounts>true</threadCounts>
              <sampleCount>true</sampleCount>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
          <stringProp name="project"></stringProp>
          <stringProp name="uploadToken">${loadsoftoken}</stringProp>
          <stringProp name="storeDir">../logs/Loadsof/</stringProp>
          <stringProp name="color">none</stringProp>
          <stringProp name="title">TG 83 5M Stepping_${__time(dd-MM-yyyy&apos;_T_&apos;HH:mm)}</stringProp>
          <boolProp name="useOnline">true</boolProp>
        </kg.apc.jmeter.reporters.LoadosophiaUploader>
        <hashTree/>
      </hashTree>
      <kg.apc.jmeter.threads.UltimateThreadGroup guiclass="kg.apc.jmeter.threads.UltimateThreadGroupGui" testclass="kg.apc.jmeter.threads.UltimateThreadGroup" testname="TG 84 Sanomakoko 10 M Stepping" enabled="false">
        <collectionProp name="ultimatethreadgroupdata">
          <collectionProp name="835367261">
            <stringProp name="49">1</stringProp>
            <stringProp name="48">0</stringProp>
            <stringProp name="48">0</stringProp>
            <stringProp name="48873">180</stringProp>
            <stringProp name="48">0</stringProp>
          </collectionProp>
          <collectionProp name="-1666436719">
            <stringProp name="56">8</stringProp>
            <stringProp name="1722">60</stringProp>
            <stringProp name="48">0</stringProp>
            <stringProp name="48687">120</stringProp>
            <stringProp name="48">0</stringProp>
          </collectionProp>
          <collectionProp name="-1759630824">
            <stringProp name="1569">12</stringProp>
            <stringProp name="48687">120</stringProp>
            <stringProp name="48">0</stringProp>
            <stringProp name="1722">60</stringProp>
            <stringProp name="48">0</stringProp>
          </collectionProp>
        </collectionProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <intProp name="LoopController.loops">-1</intProp>
        </elementProp>
        <stringProp name="ThreadGroup.on_sample_error">stoptest</stringProp>
      </kg.apc.jmeter.threads.UltimateThreadGroup>
      <hashTree>
        <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP Request Defaults" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="Kysely" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">Kysely</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">${path}</stringProp>
          <stringProp name="HTTPSampler.concurrentPool">4</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </ConfigTestElement>
        <hashTree/>
        <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="HTTP Cookie Manager" enabled="false">
          <collectionProp name="CookieManager.cookies"/>
          <stringProp name="TestPlan.comments">Sanomankoko</stringProp>
          <boolProp name="CookieManager.clearEachIteration">false</boolProp>
          <stringProp name="CookieManager.implementation">org.apache.jmeter.protocol.http.control.HC4CookieHandler</stringProp>
        </CookieManager>
        <hashTree/>
        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="false">
          <collectionProp name="HeaderManager.headers">
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Content-Type</stringProp>
              <stringProp name="Header.value">text/xml; charset=utf-8</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">SOAPAction</stringProp>
              <stringProp name="Header.value"></stringProp>
            </elementProp>
          </collectionProp>
        </HeaderManager>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="TG 84 10 M" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; &#xd;
xmlns:xro=&quot;http://x-road.eu/xsd/xroad.xsd&quot; xmlns:iden=&quot;http://x-road.eu/xsd/identifiers&quot;&#xd;
xmlns:prod=&quot;http://test.x-road.fi/producer&quot;&gt;&#xd;
   &lt;soapenv:Header&gt;&#xd;
      &lt;xro:protocolVersion&gt;4.x&lt;/xro:protocolVersion&gt;&#xd;
      &lt;xro:id&gt;TEST7a&lt;/xro:id&gt;&#xd;
      &lt;xro:userId&gt;EE1234567890&lt;/xro:userId&gt;&#xd;
      &lt;xro:client iden:objectType=&quot;SUBSYSTEM&quot;&gt;&#xd;
         &lt;iden:xRoadInstance&gt;${Instance}&lt;/iden:xRoadInstance&gt;&#xd;
         &lt;iden:memberClass&gt;GOV&lt;/iden:memberClass&gt;&#xd;
         &lt;iden:memberCode&gt;${MemberCode}&lt;/iden:memberCode&gt;&#xd;
         &lt;iden:subsystemCode&gt;perftestclient&lt;/iden:subsystemCode&gt;&#xd;
      &lt;/xro:client&gt;&#xd;
      &lt;xro:service iden:objectType=&quot;SERVICE&quot;&gt;&#xd;
         &lt;iden:xRoadInstance&gt;${Instance}&lt;/iden:xRoadInstance&gt;&#xd;
         &lt;iden:memberClass&gt;GOV&lt;/iden:memberClass&gt;&#xd;
         &lt;iden:memberCode&gt;${MemberCode}&lt;/iden:memberCode&gt;&#xd;
         &lt;iden:subsystemCode&gt;perftestservice&lt;/iden:subsystemCode&gt;&#xd;
         &lt;iden:serviceCode&gt;testService&lt;/iden:serviceCode&gt;&#xd;
         &lt;iden:serviceVersion&gt;v1&lt;/iden:serviceVersion&gt;&#xd;
      &lt;/xro:service&gt;&#xd;
   &lt;/soapenv:Header&gt;&#xd;
   &lt;soapenv:Body&gt;&#xd;
      &lt;prod:testService&gt;&#xd;
             &lt;request&gt;&#xd;
                &lt;responseBodySize&gt;10000000&lt;/responseBodySize&gt;&#xd;
                &lt;responseAttachmentSize&gt;0&lt;/responseAttachmentSize&gt;&#xd;
            &lt;/request&gt;&#xd;
     &lt;/prod:testService&gt;&#xd;
   &lt;/soapenv:Body&gt;&#xd;
&lt;/soapenv:Envelope&gt;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">test-service-0.0.2-SNAPSHOT/Endpoint</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments"> Sanomakoko100M</stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="false">
          <stringProp name="ConstantTimer.delay">${timer}</stringProp>
        </ConstantTimer>
        <hashTree/>
        <ResultCollector guiclass="StatVisualizer" testclass="ResultCollector" testname="Aggregate Report" enabled="false">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>false</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <hostname>true</hostname>
              <threadCounts>true</threadCounts>
              <sampleCount>true</sampleCount>
            </value>
          </objProp>
          <stringProp name="filename">../logs/runs/TG84_10M_${__time(dd-MM-yyyy&apos;_T_&apos;HH:mm)}.jtl</stringProp>
        </ResultCollector>
        <hashTree/>
        <kg.apc.jmeter.reporters.LoadosophiaUploader guiclass="kg.apc.jmeter.reporters.LoadosophiaUploaderGui" testclass="kg.apc.jmeter.reporters.LoadosophiaUploader" testname="jp@gc - Loadosophia.org Uploader" enabled="false">
          <elementProp name="arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="classname">kg.apc.jmeter.reporters.LoadosophiaClient</stringProp>
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>false</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <hostname>true</hostname>
              <threadCounts>true</threadCounts>
              <sampleCount>true</sampleCount>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
          <stringProp name="project"></stringProp>
          <stringProp name="uploadToken">${loadsoftoken}</stringProp>
          <stringProp name="storeDir">../logs/Loadsof/</stringProp>
          <stringProp name="color">none</stringProp>
          <stringProp name="title">TG 84 10M Stepping_${__time(dd-MM-yyyy&apos;_T_&apos;HH:mm)}</stringProp>
          <boolProp name="useOnline">true</boolProp>
        </kg.apc.jmeter.reporters.LoadosophiaUploader>
        <hashTree/>
      </hashTree>
      <ResultCollector guiclass="StatVisualizer" testclass="ResultCollector" testname="Aggregate Report" enabled="false">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>false</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <hostname>true</hostname>
            <threadCounts>true</threadCounts>
            <sampleCount>true</sampleCount>
          </value>
        </objProp>
        <stringProp name="filename">../logs/runs/aggregate_1__${__time(dd-MM-yyyy&apos;_T_&apos;HH:mm)}.jtl</stringProp>
      </ResultCollector>
      <hashTree/>
      <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Duration Assertion" enabled="false">
        <stringProp name="DurationAssertion.duration">${timeout}</stringProp>
        <stringProp name="Assertion.scope">all</stringProp>
      </DurationAssertion>
      <hashTree/>
      <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
        <collectionProp name="Asserion.test_strings"/>
        <stringProp name="Assertion.test_field">Assertion.response_message</stringProp>
        <boolProp name="Assertion.assume_success">false</boolProp>
        <intProp name="Assertion.test_type">8</intProp>
        <stringProp name="Assertion.scope">all</stringProp>
      </ResponseAssertion>
      <hashTree/>
      <kg.apc.jmeter.reporters.LoadosophiaUploader guiclass="kg.apc.jmeter.reporters.LoadosophiaUploaderGui" testclass="kg.apc.jmeter.reporters.LoadosophiaUploader" testname="jp@gc - Loadosophia.org Uploader" enabled="false">
        <elementProp name="arguments" elementType="Arguments">
          <collectionProp name="Arguments.arguments"/>
        </elementProp>
        <stringProp name="classname">kg.apc.jmeter.reporters.LoadosophiaClient</stringProp>
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>false</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <hostname>true</hostname>
            <threadCounts>true</threadCounts>
            <sampleCount>true</sampleCount>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
        <stringProp name="project"></stringProp>
        <stringProp name="uploadToken">${loadsoftoken}</stringProp>
        <stringProp name="storeDir">../logs/Loadsof/</stringProp>
        <stringProp name="color">none</stringProp>
        <stringProp name="title">Summary_${__time(dd-MM-yyyy&apos;_T_&apos;HH:mm)}</stringProp>
        <boolProp name="useOnline">true</boolProp>
      </kg.apc.jmeter.reporters.LoadosophiaUploader>
      <hashTree/>
      <ResultCollector guiclass="StatGraphVisualizer" testclass="ResultCollector" testname="Aggregate Graph" enabled="false">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>false</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <hostname>true</hostname>
            <threadCounts>true</threadCounts>
            <sampleCount>true</sampleCount>
          </value>
        </objProp>
        <stringProp name="filename">../logs/runs/7_10k_users_${__time(dd-MM-yyyy&apos;_T_&apos;HH:mm)}.jtl</stringProp>
      </ResultCollector>
      <hashTree/>
      <ResultCollector guiclass="ObsoleteGui" testclass="ResultCollector" testname="Monitor Results" enabled="false">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>false</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <hostname>true</hostname>
            <threadCounts>true</threadCounts>
            <sampleCount>true</sampleCount>
          </value>
        </objProp>
        <stringProp name="filename">../logs/runs/_${__time(dd-MM-yyyy&apos;_T_&apos;HH:mm)}</stringProp>
      </ResultCollector>
      <hashTree/>
      <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="false">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>false</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <hostname>true</hostname>
            <threadCounts>true</threadCounts>
            <sampleCount>true</sampleCount>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
      <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
        <collectionProp name="Asserion.test_strings">
          <stringProp name="-9519029">&lt;faultcode&gt;</stringProp>
        </collectionProp>
        <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
        <boolProp name="Assertion.assume_success">false</boolProp>
        <intProp name="Assertion.test_type">6</intProp>
        <stringProp name="Assertion.scope">all</stringProp>
      </ResponseAssertion>
      <hashTree/>
    </hashTree>
    <WorkBench guiclass="WorkBenchGui" testclass="WorkBench" testname="WorkBench" enabled="true">
      <boolProp name="WorkBench.save">true</boolProp>
    </WorkBench>
    <hashTree/>
  </hashTree>
</jmeterTestPlan>
